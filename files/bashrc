# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

################################################################################
# CUSTOM CONFIGURATION
################################################################################
# ===================================================================
# Prompt
# ===================================================================

export PS1='[\u@\h \[\e[36m\]\w\[\e[38;5;172m\]$(__git_ps1 " (%s)")\[\e[00m\]]\$ ';
source $GIT_EXTRAS/git-prompt.sh;

source $HOME/.customrc.sh;

# # ===================================================================
# # Aliases
# # ====================================================================

# alias conserver='ssh -X hfen3@thebeast.biology.gatech.edu'
# alias concomp='ssh -X hfen3@compgenome2016.biology.gatech.edu'
# alias conbrow='ssh -X hfen3@gbrowse2016.biology.gatech.edu'
# alias vu='nmcli con up id gatech'
# alias vd='nmcli con down id gatech'
# alias gatk='java -jar /home/hspitia/.software/gatk/GenomeAnalysisTK.jar'

# # ===================================================================
# # Variables
# # ===================================================================
# PATH
# export LOCAL_SOFTWARE=/home/hspitia/.software;
# export LOCAL_BIN=$LOCAL_SOFTWARE/bin;
# export LOCAL_DIR=/home/hspitia/.local;
# export BRC=/home/hspitia/.bashrc;
#
# 
#
#
# export FOURKSTOGRAM=$LOCAL_SOFTWARE/4kstogram;
# export ARTEMIS=$LOCAL_SOFTWARE/artemis;
# export BCFTOOLS=$LOCAL_SOFTWARE/bcftools/1.2;
# export BEDTOOLS=$LOCAL_SOFTWARE/bedtools/2/bin;
# export BLAST=$LOCAL_SOFTWARE/ncbi-blast/2.2.31/bin;
# export BLAT=$LOCAL_SOFTWARE/blat;
# # export BLAST2GO=$LOCAL_SOFTWARE/blast2go;
# export BOWTIE2=$LOCAL_SOFTWARE/bowtie2/2.2.6;
# export BWA=$LOCAL_SOFTWARE/bwa/0.7.12-r1044;
# export CDHIT=$LOCAL_SOFTWARE/cdhit/4.6.5;
# export FASTQC=$LOCAL_SOFTWARE/fastqc;
# export GATK=$LOCAL_SOFTWARE/gatk;
# export GENEMARK=$LOCAL_SOFTWARE/gmsuite;
# export GIT_EXTRAS=$LOCAL_SOFTWARE/gitextras;
# export HTSLIB=$LOCAL_SOFTWARE/htslib/1.2.1/bin;
# export LSBSR=$LOCAL_SOFTWARE/lsbsr;
# export MAUVE=$LOCAL_SOFTWARE/mauve;
# export MESQUITE=$LOCAL_SOFTWARE/mesquite;
# export MUMMER=$LOCAL_SOFTWARE/mummer;
# export ParallelMETA=$LOCAL_SOFTWARE/parallel-meta/2.1;
# export PARALLELMETA=$LOCAL_SOFTWARE/parallel-meta/2.1/bin;
# export PRODIGAL=$LOCAL_SOFTWARE/prodigal/2.5;
# export RDPTOOLS=$LOCAL_SOFTWARE/rdptools;
# export TEXLIVE=/usr/local/texlive/2015/bin/x86_64-linux;
#
# export PATH=$LOCAL_DIR/bin:$LOCAL_SOFTWARE:$LOCAL_BIN:$VSEARCH:$USEARCH:$TEXLIVE:$RDPTOOLS:$PRODIGAL:$PARALLELMETA:$ParallelMETA:$MUMMER:$MESQUITE:$MAUVE:$LSBSR:$HTSLIB:$GENEMARK:$GATK:$CDHIT:$BWA:$BOWTIE2:$BLAT:$BLAST2GO:$BLAST:$BEDTOOLS:$BCFTOOLS:$ARTEMIS:$FOURKSTOGRAM:$PATH;

# # ====================================================================
# # Other variables
# export INFOPATH=$INFOPATH:/usr/local/texlive/2015/texmf-dist/doc/info;
# export MANPATH=$MANPATH:/usr/local/texlive/2015/texmf-dist/doc/man;
# export PKG_CONFIG_PATH=$LOCAL_SOFTWARE/lib/pkgconfig:$PKG_CONFIG_PATH
# export PYTHONPATH=$LSBSR:$PYTHONPATH

# # ====================================================================
# # T-COFFEE variables
# export DIR_4_TCOFFEE="/home/hspitia/.software/tcoffee/11.00.8cbe486"
# export MAFFT_BINARIES="$DIR_4_TCOFFEE/plugins/linux/"
# export CACHE_4_TCOFFEE="/home/hspitia/.t_coffee/cache/"
# export TMP_4_TCOFFEE="$DIR_4_TCOFFEE/tmp/"
# export LOCKDIR_4_TCOFFEE="$DIR_4_TCOFFEE/lck/"
# export PERL5LIB="$PERL5LIB:$DIR_4_TCOFFEE/perl/lib/perl5"
# export EMAIL_4_TCOFFEE="hspitia@gmail.com"
# export PATH="$DIR_4_TCOFFEE/bin:$PATH"
# # ====================================================================
# # terminix configuration: VTE (Virtual Terminal Emulator)
# #. /etc/profile.d/vte.sh

# # ====================================================================

# # Get aliases for RDPtools applications
# source $RDPTOOLS/aliases;

# # ====================================================================
# # Functions
# # ====================================================================
# # Clone a git repository located at thebeast server (gatech)
# function clonerepotb {
#   git clone ssh://hfen3@thebeast.biology.gatech.edu:/data/home/hfen3/git_repos/$1
# }

# # ====================================================================
# # Sources
# # ====================================================================

# source $GIT_EXTRAS/git-prompt.sh;
# source $HOME/projects/nthi/scripts/load_path_variables.sh;
