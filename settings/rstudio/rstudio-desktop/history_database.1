1560130352847:# 	ggsave("manuscript_material/fig_04.pdf", finalPlot, width = 14, height = 5)
1560130352847:# 	# embed_fonts("manuscript_material/fig_01.pdf")
1560130352848:# }
1560130352848:# cgMLST plots ------------------------------------------------------------
1560130352849:scheme = "cgMLST"
1560130352850:# (toolNameLevels <- compData %>%
1560130352851:# 		filter(Scheme == scheme) %>% select(Tool_Mode) %>% unique() %>% pull())
1560130352851:# # toolNameLevels <- toolNameLevels[c(4,5,6,1,3,2)]
1560130352851:# toolNameLevels <- toolNameLevels[c(3,4,5,1,2)]
1560130352852:#
1560130352852:# (typeLevels     <- compData %>%
1560130352853:# 		filter(Scheme == scheme) %>% select(Type) %>% unique() %>% pull())
1560130352853:# # toolNameLevels <- compData$Tool_Name[c(8,6,7,9,5,4,3,2,1)] # new
1560130352854:# (typeLevels <- typeLevels[c(1,2)])
1560130352854:#
1560130352855:# (typeLabels <- typeLevels)
1560130352855:# typeLabels[typeLabels=='k-mer'] = expression(paste(italic('k'), "-mer"))
1560130352855:#
1560130352856:# customPalette <- generalPalette[typeLevels]
1560130352856:# show_col(customPalette)
1560130352857:(dataToPlot <- compData %>%
1560130352857:filter(Scheme == scheme) %>%
1560130352858:mutate(Tool_Mode = factor(Tool_Mode, rev(toolNameLevels)),
1560130352858:Type = factor(Type, typeLevels),
1560130352859:Time = as.numeric(Time)) %>%
1560130352859:group_by(Tool_Mode, Scheme, Type) %>%
1560130352860:summarise(Correct_Alleles = mean(Correct_Alleles),
1560130352860:Time = mean(Time),
1560130352861:RAM = mean(RAM)))
1560130354695:(dataToPlot %<>%
1560130354695:mutate(ColorGroup = if_else(Type == "k-mer", "light", "dark")))
1560130354809:timeReference <- dataToPlot %>%
1560130354809:filter(Tool_Mode == "STing-fast") %>%
1560130354810:select(Time) %>% pull()
1560130354815:ramReference <- dataToPlot %>%
1560130354815:filter(Tool_Mode == "STing-fast") %>%
1560130354815:select(RAM) %>% pull()
1560130354821:(foldData <- dataToPlot %>%
1560130354821:filter(Tool_Mode != "STing-fast") %>%
1560130354821:mutate(Time_Fold = Time/timeReference,
1560130354822:RAM_Fold = RAM/ramReference))
1560130355203:vecFontFace <- if_else(str_detect(levels(dataToPlot$Tool_Mode), "STing"), "bold", "plain")
1560130355204:# Correct Predictions Plot ------------------------------------------------
1560130355205:(predPlot <- ggplot(dataToPlot, aes(x = Tool_Mode, y = Correct_Alleles,
1560130355205:fill = Type)) +
1560130355206:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1560130355206:stat = "identity",
1560130355207:position = position_dodge(width=0.9)
1560130355207:# , show.legend = F
1560130355208:) +
1560130355208:geom_text(position = position_dodge(width = 0.9),
1560130355209:hjust = 1.2, vjust = 0.5,
1560130355210:size = barAnnotTextSize,
1560130355210:show.legend = FALSE,
1560130355211:# parse = TRUE,
1560130355211:aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1560130355212:# aes(label = Correct_Alleles,
1560130355212:color = ColorGroup,
1560130355213:family = baseFontFamily
1560130355214:)) +
1560130355216:# geom_text(position = position_dodge(width = 0.9),
1560130355217:# 					hjust = 0, vjust = 0.5,
1560130355218:# 					size = barAnnotTextSize,
1560130355218:# 					show.legend = FALSE,
1560130355219:# 					# parse = TRUE,
1560130355220:# 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1560130355220:# 							# aes(label = Correct_Alleles,
1560130355221:# 							color = ColorGroup,
1560130355221:# 							family = baseFontFamily
1560130355222:# 					)) +
1560130355222:scale_y_continuous(expand = c(0, 0), limits = c(0, 100), position = "right") +
1560130355223:scale_color_manual(values = annotTextColors) +
1560130355224:scale_fill_manual(values = rev(customPalette),
1560130355224:labels = typeLabels,
1560130355225:name = "Algorithmic paradigm") +
1560130355225:labs(x = "Typing Application",
1560130355226:y = "Correct Allele Predictions (%)\n") +
1560130355227:publicationTheme() +
1560130355227:barPlotCustoms +
1560130355228:theme (axis.text.y = element_text(family = baseFontFamily, face = vecFontFace)) +
1560130355229:coord_flip()
1560130355229:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1560130355230:)
1560130355833:# Time Plot ---------------------------------------------------------------
1560130355833:annotationData <- data.frame(timeMarks = c(2*60, 30*60, 5*3600, 12*3600),
1560130355834:labels = c("2 min", "30 min", "5 hrs", "12 hrs"))
1560130355835:(timePlot <- ggplot(dataToPlot, aes(x = Tool_Mode, y = Time)) +
1560130355835:geom_hline(data = annotationData, aes(yintercept = timeMarks),
1560130355836:size = lineSize/1.5, color = markColor, linetype = annotLinetype) +
1560130355836:geom_bar(aes(fill = Type), color = axisColor, size = barBorderSize, width=barWidth,
1560130355836:stat = "identity", position = position_dodge(width=0.9),
1560130355837:show.legend = F) +
1560130355837:geom_text(aes(label = format(round(Time, 1), nsmall = 1, big.mark = ","),
1560130355837:color = ColorGroup,
1560130355838:family = baseFontFamily),
1560130355838:position = position_dodge(width = 0.9),
1560130355839:hjust = 1.2, vjust = 0.5,
1560130355839:size = barAnnotTextSize,
1560130355839:show.legend = FALSE
1560130355840:) +
1560130355840:scale_y_log10(expand = c(0, 0), position = "right") +
1560130355841:scale_color_manual(values = annotTextColors) +
1560130355841:scale_fill_manual(values = rev(customPalette)) +
1560130355841:labs(x = "Typing Application",
1560130355842:y = "Average Run Time (log10(s))\n") +
1560130355843:publicationTheme() +
1560130355843:barPlotCustoms +
1560130355844:theme (axis.text.y = element_blank(), axis.title.y = element_blank()) +
1560130355844:coord_flip()
1560130355845:)
1560130356616:# Add annotation times
1560130356616:for (i in 1:nrow(annotationData)) {
1560130356617:timePlot <- timePlot + annotation_custom(
1560130356617:grob = textGrob(label = annotationData$labels[i], hjust = 0, vjust = 1,
1560130356617:rot = 310, gp = gpar(fontsize = baseTextSize * 0.75,
1560130356618:fontfamily = baseFontFamily,
1560130356619:col = axisColor)),
1560130356619:ymin = log10(annotationData$timeMarks[i]),
1560130356620:ymax = log10(annotationData$timeMarks[i]),
1560130356621:xmin = 0.35,
1560130356621:xmax = 0.35)
1560130356622:}
1560130356649:# Remove clipping
1560130356649:gtTime <- ggplot_gtable(ggplot_build(timePlot))
1560130357184:gtTime$layout$clip[gtTime$layout$name == "panel"] <- "off"
1560130357184:grid.draw(gtTime)
1560130357255:# RAM Plot ----------------------------------------------------------------
1560130357255:annotationData <- data.frame(ramMarks = c(3000, 10000),#, 100000),
1560130357256:labels = c("3 GB", "10 GB"))#, "100 GB"))
1560130357257:annotationData <- data.frame(ramMarks = c())
1560130357258:(ramPlot <- ggplot(dataToPlot, aes(x = Tool_Mode, y = RAM/1024)) +
1560130357258:# geom_hline(data = annotationData, aes(yintercept = ramMarks),
1560130357258:# 					 size = lineSize/1.5, color = markColor, linetype = annotLinetype) +
1560130357259:geom_bar(aes(fill = Type), color = axisColor, size = barBorderSize, width=barWidth,
1560130357259:stat = "identity", position = position_dodge(width=0.9),
1560130357259:show.legend = F) +
1560130357260:geom_text(aes(label = format(round(RAM/1024, 1), nsmall = 1, big.mark = ","),
1560130357260:color = ColorGroup,
1560130357260:family = baseFontFamily),
1560130357261:position = position_dodge(width = 0.9),
1560130357261:hjust = 1.2, vjust = 0.5,
1560130357262:size = barAnnotTextSize,
1560130357262:show.legend = FALSE) +
1560130357262:scale_y_log10(expand = c(0, 0), position = "right",
1560130357263:# breaks = c(1, 10, 100, 1000, 10000),
1560130357263:breaks = c(1, 10, 100),
1560130357264:labels = c(expression(1), expression(10), expression(10^2))) +
1560130357264:# scale_y_log10(expand = c(0, 0), position = "right") +
1560130357264:scale_color_manual(values = annotTextColors) +
1560130357265:scale_fill_manual(values = rev(customPalette)) +
1560130357265:labs(x = "Typing Application",
1560130357266:y = "Average Max. RAM\nConsumption (log10(GB))\n") +
1560130357266:publicationTheme() +
1560130357267:barPlotCustoms +
1560130357267:theme (axis.text.y = element_blank(), axis.title.y = element_blank()) +
1560130357267:coord_flip())
1560130357731:# # Add annotation times
1560130357731:# for (i in 1:nrow(annotationData)) {
1560130357732:# 	ramPlot <- ramPlot + annotation_custom(
1560130357732:# 		grob = textGrob(label = annotationData$labels[i], hjust = 0, vjust = 1,
1560130357732:# 										rot = 310, gp = gpar(fontsize = baseTextSize * 0.75,
1560130357732:# 																				 fontfamily = baseFontFamily,
1560130357733:# 																				 col = axisColor)),
1560130357733:# 		ymin = log10(annotationData$ramMarks[i]),
1560130357734:# 		ymax = log10(annotationData$ramMarks[i]),
1560130357734:# 		xmin = 0.35,
1560130357734:# 		xmax = 0.35)
1560130357735:# }
1560130357735:# # Remove clipping
1560130357735:# gt <- ggplot_gtable(ggplot_build(ramPlot))
1560130357736:# gt$layout$clip[gt$layout$name == "panel"] <- "off"
1560130357736:# grid.draw(gt)
1560130357736:# Comparison plot (combined) ----------------------------------------------
1560130357737:legend <- get_legend(predPlot)
1560130358076:(comparisonPlot2 <- plot_grid(predPlot + theme(legend.position = "none"),
1560130358076:gtTime,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1560130358095:ramPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")),
1560130358096:# gt,# + theme(plot.margin = unit(c(1,18,1,1), "mm")),
1560130358096:labels = c('D', 'E', 'F'), align = 'h', axis = 'tb',
1560130358096:label_fontfamily = baseFontFamily,
1560130358097:label_size = baseTextSize * 1.2,
1560130358097:ncol = 3,
1560130358098:rel_widths = c(1, 0.66, 0.66)))
1560130359203:# (finalPlot <- plot_grid(comparisonPlot ,# + theme(plot.margin = margin(0, 0, 10, 0, "mm")),
1560130359203:# legend,
1560130359203:# ncol = 1, rel_heights = c(1, 0.15)))
1560130359204:(finalPlot <- plot_grid(comparisonPlot ,# + theme(plot.margin = margin(0, 0, 10, 0, "mm")),
1560130359205:comparisonPlot2,
1560130359205:legend,
1560130359206:ncol = 1, rel_heights = c(1, 1, 0.15)))
1560130361548:# if (export) {
1560130361548:if (saveFigures) {
1560130361548:ggsave("manuscript_material/fig_04.pdf", finalPlot, width = 14, height = 10.28
1560130361549:)
1560130361549:# embed_fonts("manuscript_material/fig_01.pdf")
1560130361549:}
1566155233480:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1566155233527:# Install packages (if not installed, run the bellow line just once)
1566155233527:# install.packages(c("tidyverse"))
1566155233528:# Load packages
1566155233528:library(tidyverse, verbose = T)
1566155235297:# Variable definition
1566155235297:# Input variables
1566155235297:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1566155235298:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1566155235298:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1566155235299:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1566155235299:window_size <- 1000000
1566155238721:# General variables
1566155238721:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1566155240878:# Load files
1566155240878:(hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1566155251534:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1566155320224:(background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1566761923458:library(scales)
1566761927109:# line_color     = 'red'
1566761927110:# sdtrip_color_1 = chartreuse4
1566761927110:# sdtrip_color_2 = goldenrod
1566761927111:line_color     = '#68153C' # col=rgb(red=104, green=21, blue=60, alpha=120, maxColorValue=255)
1566761927496:strip_color_1  = '#648300' # col=rgb(red=100, green=131, blue=0, alpha=64, maxColorValue=255) #
1566761927829:strip_color_2  = '#CC993E' # col=rgb(red=204, green=153, blue=62, alpha=64, maxColorValue=255) #
1566761937481:col = alpha(strip_color_1, 0.5)
1566761939765:col
1566761945864:col = alpha(strip_color_2, 0.5)
1566761947500:col
1566860811264:# Install packages (if not installed, run the line below just once)
1566860811328:# install.packages(c("tidyverse", "grid", "sitools"))
1566860811328:# Load packages
1566860811329:library(tidyverse, verbose = T)
1566860813509:library(grid)
1566860813521:library(sitools)
1566860813523:# Variable definition -----------------------------------------------------
1566860813523:# Set work directory
1566860813523:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1566860813524:# Input variables
1566860813524:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1566860813525:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1566860813526:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1566860813527:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1566860813528:window_size <- 100000
1566860825665:# General variables
1566860825666:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1566860828902:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1566860881423:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("lg", "length")))
1566861860514:m
1566861861169:m
1566861865285:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1566861865285:(cum_genome_size <- chromosome_lengths)
1566861865951:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1566861866295:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1566861866610:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$lg, "_", simplify = TRUE)[,2]))
1566861867005:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1566861867437:cum_genome_size
1566861870860:load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1566861939337:# Filter variants ---------------------------------------------------------
1566861939338:# Keep variants:
1566861939338:# - with coverage < 100,
1566861939338:# - with fvar >= 0.5, and
1566861939339:# - that are present in the MUT and not in the WT (background) variant set
1566861939339:(filtered_variants <- all_mut_variants %>%
1566861939339:filter(cov < 100, fvar >= 0.99) %>%
1566861939340:anti_join(background_variants, by = c("lg", "pos"))
1566861939340:)
1566861951417:load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1566861954821:# Get some stats about the filtered variants
1566861954822:(stats <- filtered_variants %>%
1566861954822:group_by(lg) %>%
1566861954823:summarise(fvar_min = min(fvar),
1566861954823:fvar_max = max(fvar),
1566861954824:fvar_mean = mean(fvar),
1566861954824:n_var = n())
1566861954825:)
1566861967784:# Plot --------------------------------------------------------------------
1566861967785:# Prepare data to plot (add global position using the genome cumulative size data)
1566861967785:(data_to_plot <- filtered_variants %>%
1566861967786:right_join(select(cum_genome_size, lg, lower_limit), by = "lg") %>%
1566861967786:mutate(global_pos = pos + lower_limit - 1) %>%
1566861967787:select(-c(lower_limit))
1566861967787:)
1566861972847:# Plot configuration variables and options
1566861972847:options(scipen=10) # Avoid scientific notation on tick labels
1566861974009:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1566861975175:chr_palette <- c("#ffffff", "#E5E0CA")
1566862073779:data_to_plot
1566862143632:# Plot configuration variables and options
1566862143632:options(scipen=10) # Avoid scientific notation on tick labels
1566862144062:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1566862144423:chr_palette <- c("#ffffff", "#E5E0CA")
1566862145722:# Plot number of variants per chromosome
1566862145722:(variants_plot <- ggplot(data_to_plot)
1566862145723:+ geom_rect(data = cum_genome_size,
1566862145723:aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1566862145724:,alpha = 0.7, show.legend = F)
1566862145724:+ geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1566862145725:+ geom_point(aes(x = global_pos, y = fvar), color = "#cccccc", size = 3)
1566862145725:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1566862145727:#                  # fill = "#444444"
1566862145727:#                  fill = "darkolivegreen"
1566862145728:#                  )
1566862145729:+ scale_fill_manual(values = chr_palette)
1566862145729:+ scale_y_continuous(expand = c(0,0))
1566862145730:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1566862145731:+ theme_bw()
1566862145737:+ theme(axis.text    = element_text(size = 11),
1566862145738:axis.text.x  = element_text(angle = 50, hjust = 1),
1566862145739:axis.title   = element_text(size = 12),
1566862145739:axis.title.x = element_text(margin = margin(12,0,0,0)),
1566862145740:axis.title.y = element_text(margin = margin(0,12,0,0)),
1566862145740:panel.grid   = element_blank(),
1566862145741:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1566862145742:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1566862145743:plot.title = element_text(hjust = 0.5)
1566862145743:)
1566862145744:+ labs(title = "Whole Genome Homozygous Variants",
1566862145745:subtitle = "All MUT and WT",
1566862145745:x = "Physical position (Mb)",
1566862145746:y = paste("Variants per", f2si(window_size, unit = "b"), "bin")
1566862145747:)
1566862145748:)
1566862154790:# Load packages
1566862154790:library(tidyverse, verbose = T)
1566862155306:library(grid)
1566862155702:library(sitools)
1566862184630:install.packages("sitools")
1566862192536:library(sitools)
1566862200619:# Plot number of variants per chromosome
1566862200620:(variants_plot <- ggplot(data_to_plot)
1566862200620:+ geom_rect(data = cum_genome_size,
1566862200621:aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1566862200621:,alpha = 0.7, show.legend = F)
1566862200622:+ geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1566862200622:+ geom_point(aes(x = global_pos, y = fvar), color = "#cccccc", size = 3)
1566862200623:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1566862200623:#                  # fill = "#444444"
1566862200624:#                  fill = "darkolivegreen"
1566862200624:#                  )
1566862200625:+ scale_fill_manual(values = chr_palette)
1566862200626:+ scale_y_continuous(expand = c(0,0))
1566862200626:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1566862200627:+ theme_bw()
1566862200628:+ theme(axis.text    = element_text(size = 11),
1566862200628:axis.text.x  = element_text(angle = 50, hjust = 1),
1566862200631:axis.title   = element_text(size = 12),
1566862200635:axis.title.x = element_text(margin = margin(12,0,0,0)),
1566862200636:axis.title.y = element_text(margin = margin(0,12,0,0)),
1566862200645:panel.grid   = element_blank(),
1566862200646:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1566862200647:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1566862200648:plot.title = element_text(hjust = 0.5)
1566862200649:)
1566862200649:+ labs(title = "Whole Genome Homozygous Variants",
1566862200651:subtitle = "All MUT and WT",
1566862200651:x = "Physical position (Mb)",
1566862200652:y = paste("Variants per", f2si(window_size, unit = "b"), "bin")
1566862200653:)
1566862200653:)
1566862230423:# Plot number of variants per chromosome
1566862230424:(variants_plot <- ggplot(data_to_plot)
1566862230425:+ geom_rect(data = cum_genome_size,
1566862230425:aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1566862230426:,alpha = 0.7, show.legend = F)
1566862230426:+ geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1566862230427:+ geom_point(aes(x = global_pos, y = fvar), color = "#cccccc", size = 3)
1566862230427:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1566862230428:#                  # fill = "#444444"
1566862230429:#                  fill = "darkolivegreen"
1566862230429:#                  )
1566862230430:+ scale_fill_manual(values = chr_palette)
1566862230430:# + scale_y_continuous(expand = c(0,0))
1566862230431:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1566862230432:+ theme_bw()
1566862230432:+ theme(axis.text    = element_text(size = 11),
1566862230435:axis.text.x  = element_text(angle = 50, hjust = 1),
1566862230437:axis.title   = element_text(size = 12),
1566862230442:axis.title.x = element_text(margin = margin(12,0,0,0)),
1566862230443:axis.title.y = element_text(margin = margin(0,12,0,0)),
1566862230443:panel.grid   = element_blank(),
1566862230444:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1566862230445:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1566862230445:plot.title = element_text(hjust = 0.5)
1566862230446:)
1566862230447:+ labs(title = "Whole Genome Homozygous Variants",
1566862230453:subtitle = "All MUT and WT",
1566862230454:x = "Physical position (Mb)",
1566862230457:y = paste("Variants per", f2si(window_size, unit = "b"), "bin")
1566862230458:)
1566862230460:)
1566862311993:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1566862316138:(background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1566862455018:# Filter variants ---------------------------------------------------------
1566862455675:# Keep variants:
1566862455676:# - with coverage < 100,
1566862455676:# - with fvar >= 0.5, and
1566862455677:# - that are present in the MUT and not in the WT (background) variant set
1566862455678:(filtered_variants <- all_mut_variants %>%
1566862455678:# filter(cov < 100, fvar >= 0.99) %>%
1566862455679:filter(cov < 100) %>%
1566862455679:anti_join(background_variants, by = c("lg", "pos"))
1566862455992:)
1567267384259:# MLST comparative test
1567267384296:# Install an load packages ------------------------------------------------
1567267384297:installAndLoadPackages <- function(pkg){
1567267384297:cat("Please wait a moment! Checking for required packages... ")
1567267384298:cat("Done!\n")
1567267384298:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567267384299:if (length(new.pkg)) {
1567267384299:cat("Installing new packages... ")
1567267384300:install.packages(new.pkg, dependencies = TRUE,
1567267384300:repos="http://cran.rstudio.com/")
1567267384301:cat("Done!\n")
1567267384301:}
1567267384302:cat("Loading packages... \n")
1567267384303:sapply(pkg, require, character.only = TRUE)
1567267384303:cat("Done!\n")
1567267384305:}
1567267384306:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567267384307:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567267384308:installAndLoadPackages(requiredPackages)
1567267399209:# Format bar annotation text ----------------------------------------------
1567267399210:getAnnotationText <- function(value){
1567267399210:lapply(value, function(x) {
1567267399211:result = ""
1567267399211:if (x != 1) {
1567267399212:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567267399212:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567267399213:}
1567267399213:result
1567267399214:})
1567267399214:}
1567267399216:# Sources -----------------------------------------------------------------
1567267399216:source(file = "scripts/ggplot_theme.R")
1567267399261:# Loading Data ------------------------------------------------------------
1567267399261:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567267399261:excel_sheets(inFile)
1567267399304:(inData <- read_excel(inFile, sheet = "data"))
1567267400077:# General configuration ---------------------------------------------------
1567267400078:saveFigures <- TRUE
1567267400079:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567267400079:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567267400079:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567267400080:generalPalette <- c("MLST"         = '#d7e4f5',
1567267400080:"rMLST" = '#FFD592',
1567267400081:"cgMLST"          = '#91bbe4',
1567267400081:"k-mer/alignment"  = '#FFB238',
1567267400082:"k-mer"            = '#0a4f75')
1567267400082:show_col(generalPalette)
1567267400161:annotTextColors       <- c(axisColor, "#ffffff")
1567267400162:baseVariantFontFamily <- baseFontFamily
1567267444922:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567267444923:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567267444923:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567267444924:generalPalette <- c("MLST"    = '#d7e4f5',
1567267444924:"rMLST"   = '#FFD592',
1567267444925:"cgMLST"  = '#91bbe4'#,
1567267444925:# "k-mer/alignment"  = '#FFB238',
1567267444926:# "k-mer"            = '#0a4f75'
1567267444926:)
1567267446100:show_col(generalPalette)
1567267449795:annotTextColors       <- c(axisColor, "#ffffff")
1567267452290:baseVariantFontFamily <- baseFontFamily
1567267468928:customPalette   <- generalPalette
1567267471953:annotTextColors       <- c(axisColor, "#ffffff")
1567267472194:baseVariantFontFamily <- baseFontFamily
1567267472571:customPalette   <- generalPalette
1567267473330:(dataToPlot <- inData)
1567267496579:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267496579:fill = Scheme)) +
1567267496580:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267496580:stat  = "identity",
1567267496581:position = position_dodge(width=0.9)
1567267496581:# , show.legend = F
1567267496582:)
1567267552283:(dataToPlot <- inData %>%
1567267552284:mutate(Scheme = factor(levels = Scheme, levels = Scheme)))
1567267553159:# Correct Predictions Plot ------------------------------------------------
1567267553159:(dbSizePLot <- ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267553160:fill = Scheme)) +
1567267553160:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267553160:stat  = "identity",
1567267553161:position = position_dodge(width=0.9)
1567267553161:# , show.legend = F
1567267553162:) +
1567267553162:# geom_text(position = position_dodge(width = 0.9),
1567267553163:# 					hjust = 1.2, vjust = 0.5,
1567267553164:# 					size = barAnnotTextSize,
1567267553164:# 					show.legend = FALSE,
1567267553165:# 					# parse = TRUE,
1567267553165:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567267553165:# 							# aes(label = Correct_Alleles,
1567267553165:# 							color = ColorGroup,
1567267553166:# 							family = baseFontFamily
1567267553166:# 					)) +
1567267553166:# # geom_text(position = position_dodge(width = 0.9),
1567267553167:# # 					hjust = 0, vjust = 0.5,
1567267553167:# # 					size = barAnnotTextSize,
1567267553167:# # 					show.legend = FALSE,
1567267553168:# # 					# parse = TRUE,
1567267553168:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567267553168:# # 							# aes(label = Correct_Alleles,
1567267553169:# # 							color = ColorGroup,
1567267553169:# # 							family = baseFontFamily
1567267553170:# # 					)) +
1567267553170:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567267553170:# scale_x_discrete(expand = c(0.1, 0)) +
1567267553170:# scale_color_manual(values = annotTextColors) +
1567267553171:# scale_fill_manual(values = rev(customPalette),
1567267553171:# 									labels = typeLabels,
1567267553171:# 									name = "Algorithmic paradigm"
1567267553172:# ) +
1567267553172:labs(x = "Typing Application",
1567267553172:y = "Correct Allele Predictions (%)\n") +
1567267553173:publicationTheme() +
1567267553173:barPlotCustoms +
1567267553173:theme (axis.text.y = element_text(family = baseFontFamily, face = vecFontFace))
1567267553174:+ coord_flip()
1567267553174:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567267553174:)
1567267560592:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267560593:fill = Scheme)) +
1567267560593:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267560594:stat  = "identity",
1567267560594:position = position_dodge(width=0.9)
1567267560595:# , show.legend = F
1567267560595:)
1567267583033:inData$Scheme
1567267590002:(dataToPlot <- inData %>%
1567267590002:mutate(Scheme = factor(levels = Scheme, labels = Scheme)))
1567267608624:(dataToPlot <- inData %>%
1567267608624:mutate(Scheme = factor(levels = Scheme, labels = inData$Scheme)))
1567267616696:inData$Scheme
1567267621191:(dataToPlot <- inData %>%
1567267621191:mutate(Scheme = factor(levels = inData$Scheme, labels = inData$Scheme)))
1567267663277:(dataToPlot <- inData %>%
1567267663278:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567267669433:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267669434:fill = Scheme)) +
1567267669435:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267669435:stat  = "identity",
1567267669436:position = position_dodge(width=0.9)
1567267669436:# , show.legend = F
1567267669436:)
1567267787379:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267787379:fill = Scheme)) +
1567267787380:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267787380:stat  = "identity",
1567267787381:position = position_dodge(width=0.9)
1567267787381:# , show.legend = F
1567267787381:) +
1567267787382:scale_y_log10(expand = c(0,0))
1567267928857:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267928858:fill = Scheme))
1567267929355:+ geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267929355:stat  = "identity",
1567267929356:position = position_dodge(width=0.9)
1567267929356:# , show.legend = F
1567267929357:)
1567267929361:+ scale_y_log10(expand = c(0,0),
1567267929362:breaks = c(1, 1000, 100000, 1000000000),
1567267929362:limits = c(1, 1000000000),
1567267929363:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9)))
1567267937632:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267937633:fill = Scheme))
1567267937974:+ geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267937974:stat  = "identity",
1567267937975:position = position_dodge(width=0.9)
1567267937975:# , show.legend = F
1567267937976:)
1567267957150:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267957150:fill = Scheme)) +
1567267957151:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267957151:stat  = "identity",
1567267957151:position = position_dodge(width=0.9)
1567267957152:# , show.legend = F
1567267957152:) +
1567267965502:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267965503:fill = Scheme)) +
1567267965503:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267965504:stat  = "identity",
1567267965504:position = position_dodge(width=0.9)
1567267965505:# , show.legend = F
1567267965505:) +
1567267965506:scale_y_log10(expand = c(0,0),
1567267965507:breaks = c(1, 1000, 100000, 1000000000),
1567267965507:limits = c(1, 1000000000),
1567267965508:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9)))
1567267977656:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267977656:fill = Scheme)) +
1567267977657:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267977658:stat  = "identity",
1567267977658:position = position_dodge(width=0.9)
1567267977659:# , show.legend = F
1567267977659:)
1567267991953:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567267991954:fill = Scheme)) +
1567267991954:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567267991955:stat  = "identity",
1567267991955:position = position_dodge(width=0.9)
1567267991956:# , show.legend = F
1567267991956:) +
1567267991957:scale_y_log10(expand = c(0,0),
1567267991957:breaks = c(1, 1000, 100000, 1000000000),
1567267991958:limits = c(1, 1000000000),
1567267991959:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9)))
1567268011737:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268011737:fill = Scheme)) +
1567268011738:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268011738:stat  = "identity",
1567268011739:position = position_dodge(width=0.9)
1567268011739:# , show.legend = F
1567268011739:) +
1567268011740:scale_y_log10(expand = c(0,0),
1567268011740:breaks = c(1, 1000, 100000, 10000000000),
1567268011741:limits = c(1, 1000000000),
1567268011741:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9)))
1567268020084:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268020085:fill = Scheme)) +
1567268020085:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268020086:stat  = "identity",
1567268020086:position = position_dodge(width=0.9)
1567268020087:# , show.legend = F
1567268020088:) +
1567268020088:scale_y_log10(expand = c(0,0),
1567268020089:breaks = c(1, 1000, 100000, 10000000000),
1567268020089:limits = c(1, 10000000000),
1567268020090:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9)))
1567268094539:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268094539:fill = Scheme)) +
1567268094540:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268094540:stat  = "identity",
1567268094541:position = position_dodge(width=0.9)
1567268094541:# , show.legend = F
1567268094542:) +
1567268094542:scale_y_log10(expand = c(0,0))
1567268165763:10^3
1567268171936:10^6
1567268222489:inData
1567268284388:(dbSizePLot <-
1567268284388:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268284389:fill = Scheme)) +
1567268284389:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268284389:stat  = "identity",
1567268284390:position = position_dodge(width=0.9)
1567268284390:, show.legend = F
1567268284390:) +
1567268284391:scale_y_log10(expand = c(0,0),
1567268284392:breaks = c(1, 1000, 1000000, 1000000000),
1567268284392:limits = c(1, 10000000000),
1567268284393:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9)))
1567268284393:)
1567268301675:# Correct Predictions Plot ------------------------------------------------
1567268301676:(dbSizePLot <-
1567268301676:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268301677:fill = Scheme)) +
1567268301678:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268301678:stat  = "identity",
1567268301679:position = position_dodge(width=0.9)
1567268301679:, show.legend = F
1567268301680:) +
1567268301680:scale_y_log10(expand = c(0,0),
1567268301681:breaks = c(1, 1000, 1000000, 1000000000),
1567268301681:limits = c(1, 10000000000),
1567268301682:labels = c(expression(0), expression(10^3), expression(10^5), expression(10^9)))
1567268301682:)
1567268312743:# Correct Predictions Plot ------------------------------------------------
1567268312744:(dbSizePLot <-
1567268312744:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268312745:fill = Scheme)) +
1567268312746:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268312747:stat  = "identity",
1567268312747:position = position_dodge(width=0.9)
1567268312748:, show.legend = F
1567268312749:) +
1567268312749:scale_y_log10(expand = c(0,0),
1567268312750:breaks = c(0, 1000, 1000000, 1000000000),
1567268312750:limits = c(0, 10000000000),
1567268312751:labels = c(expression(0), expression(10^3), expression(10^5), expression(10^9)))
1567268312752:)
1567268324492:# Correct Predictions Plot ------------------------------------------------
1567268324492:(dbSizePLot <-
1567268324493:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268324493:fill = Scheme)) +
1567268324494:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268324494:stat  = "identity",
1567268324495:position = position_dodge(width=0.9)
1567268324495:, show.legend = F
1567268324496:) +
1567268324496:scale_y_log10(expand = c(0,0),
1567268324497:breaks = c(0, 1000, 1000000, 1000000000),
1567268324498:limits = c(0, 10000000000),
1567268324498:labels = c(expression(0), expression(10^3), expression(10^5), expression(10^9)))
1567268324499:)
1567268331601:# Correct Predictions Plot ------------------------------------------------
1567268331602:(dbSizePLot <-
1567268331602:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268331603:fill = Scheme)) +
1567268331603:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268331604:stat  = "identity",
1567268331605:position = position_dodge(width=0.9)
1567268331606:, show.legend = F
1567268331606:) +
1567268331607:scale_y_log10(expand = c(0,0),
1567268331608:breaks = c(1, 1000, 1000000, 1000000000),
1567268331608:limits = c(1, 10000000000),
1567268331609:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9)))
1567268331610:)
1567268347165:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268347166:fill = Scheme)) +
1567268347166:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268347167:stat  = "identity",
1567268347167:position = position_dodge(width=0.9)
1567268347168:, show.legend = F
1567268347168:) +
1567268347169:scale_y_log10(expand = c(0,0))
1567268356381:1e+00
1567268368181:# Correct Predictions Plot ------------------------------------------------
1567268368182:(dbSizePLot <-
1567268368182:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268368183:fill = Scheme)) +
1567268368183:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268368184:stat  = "identity",
1567268368192:position = position_dodge(width=0.9)
1567268368193:, show.legend = F
1567268368193:) +
1567268368194:scale_y_log10(expand = c(0,0),
1567268368194:breaks = c(1, 1000, 1000000, 1000000000),
1567268368195:limits = c(1, 10000000000),
1567268368195:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9)))
1567268368196:)
1567268530239:# Correct Predictions Plot ------------------------------------------------
1567268530239:(dbSizePLot <-
1567268530240:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268530240:fill = Scheme)) +
1567268530241:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268530241:stat  = "identity",
1567268530242:position = position_dodge(width=0.9)
1567268530243:, show.legend = F
1567268530243:) +
1567268530244:scale_y_log10(expand = c(0,0),
1567268530244:breaks = c(1, 1000, 1000000, 1000000000),
1567268530245:limits = c(1, 10000000000),
1567268530245:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9))) +
1567268530246:# geom_text(position = position_dodge(width = 0.9),
1567268530247:# 					hjust = 1.2, vjust = 0.5,
1567268530247:# 					size = barAnnotTextSize,
1567268530248:# 					show.legend = FALSE,
1567268530249:# 					# parse = TRUE,
1567268530249:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268530263:# 							# aes(label = Correct_Alleles,
1567268530263:# 							color = ColorGroup,
1567268530264:# 							family = baseFontFamily
1567268530265:# 					)) +
1567268530265:# # geom_text(position = position_dodge(width = 0.9),
1567268530266:# # 					hjust = 0, vjust = 0.5,
1567268530267:# # 					size = barAnnotTextSize,
1567268530267:# # 					show.legend = FALSE,
1567268530268:# # 					# parse = TRUE,
1567268530269:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268530270:# # 							# aes(label = Correct_Alleles,
1567268530271:# # 							color = ColorGroup,
1567268530271:# # 							family = baseFontFamily
1567268530272:# # 					)) +
1567268530273:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268530274:# scale_x_discrete(expand = c(0.1, 0)) +
1567268530274:# scale_color_manual(values = annotTextColors) +
1567268530285:scale_fill_manual(values = rev(customPalette),
1567268530286:# labels = typeLabels,
1567268530286:name   = "Scheme"
1567268530287:) +
1567268530287:labs(x = "Scheme",
1567268530288:y = "DB Size (bp)") +
1567268530288:publicationTheme() +
1567268530289:# barPlotCustoms +
1567268530290:theme (axis.text.y = element_text(family = baseFontFamily, face = vecFontFace))
1567268530290:# + coord_flip()
1567268530291:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268530291:)
1567268543331:# Correct Predictions Plot ------------------------------------------------
1567268543331:(dbSizePLot <-
1567268543332:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268543332:fill = Scheme)) +
1567268543333:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268543333:stat  = "identity",
1567268543334:position = position_dodge(width=0.9)
1567268543334:, show.legend = F
1567268543335:) +
1567268543335:scale_y_log10(expand = c(0,0),
1567268543335:breaks = c(1, 1000, 1000000, 1000000000),
1567268543336:limits = c(1, 10000000000),
1567268543336:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9))) +
1567268543337:# geom_text(position = position_dodge(width = 0.9),
1567268543337:# 					hjust = 1.2, vjust = 0.5,
1567268543337:# 					size = barAnnotTextSize,
1567268543338:# 					show.legend = FALSE,
1567268543338:# 					# parse = TRUE,
1567268543338:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268543339:# 							# aes(label = Correct_Alleles,
1567268543339:# 							color = ColorGroup,
1567268543340:# 							family = baseFontFamily
1567268543340:# 					)) +
1567268543341:# # geom_text(position = position_dodge(width = 0.9),
1567268543341:# # 					hjust = 0, vjust = 0.5,
1567268543341:# # 					size = barAnnotTextSize,
1567268543342:# # 					show.legend = FALSE,
1567268543342:# # 					# parse = TRUE,
1567268543343:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268543343:# # 							# aes(label = Correct_Alleles,
1567268543344:# # 							color = ColorGroup,
1567268543344:# # 							family = baseFontFamily
1567268543344:# # 					)) +
1567268543345:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268543345:# scale_x_discrete(expand = c(0.1, 0)) +
1567268543346:# scale_color_manual(values = annotTextColors) +
1567268543346:scale_fill_manual(values = rev(customPalette),
1567268543347:# labels = typeLabels,
1567268543347:name   = "Scheme"
1567268543348:) +
1567268543348:labs(x = "Scheme",
1567268543349:y = "DB Size (bp)") +
1567268543349:publicationTheme() +
1567268543350:# barPlotCustoms +
1567268543350:theme (axis.text.y = element_text(family = baseFontFamily))
1567268543351:# + coord_flip()
1567268543351:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268543351:)
1567268552689:show_col(generalPalette)
1567268561250:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567268561251:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567268561251:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567268561252:generalPalette <- c("MLST"    = '#d7e4f5',
1567268561252:"rMLST"   = '#FFD592',
1567268561253:"cgMLST"  = '#91bbe4',
1567268561253:"k-mer/alignment"  = '#FFB238',
1567268561254:"k-mer"            = '#0a4f75'
1567268561254:)
1567268563590:show_col(generalPalette)
1567268574407:# Correct Predictions Plot ------------------------------------------------
1567268574407:(dbSizePLot <-
1567268574408:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268574408:fill = Scheme)) +
1567268574409:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268574409:stat  = "identity",
1567268574410:position = position_dodge(width=0.9)
1567268574410:, show.legend = F
1567268574411:) +
1567268574412:scale_y_log10(expand = c(0,0),
1567268574413:breaks = c(1, 1000, 1000000, 1000000000),
1567268574413:limits = c(1, 10000000000),
1567268574414:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9))) +
1567268574415:# geom_text(position = position_dodge(width = 0.9),
1567268574415:# 					hjust = 1.2, vjust = 0.5,
1567268574416:# 					size = barAnnotTextSize,
1567268574422:# 					show.legend = FALSE,
1567268574423:# 					# parse = TRUE,
1567268574424:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268574424:# 							# aes(label = Correct_Alleles,
1567268574425:# 							color = ColorGroup,
1567268574426:# 							family = baseFontFamily
1567268574426:# 					)) +
1567268574426:# # geom_text(position = position_dodge(width = 0.9),
1567268574427:# # 					hjust = 0, vjust = 0.5,
1567268574427:# # 					size = barAnnotTextSize,
1567268574427:# # 					show.legend = FALSE,
1567268574428:# # 					# parse = TRUE,
1567268574428:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268574429:# # 							# aes(label = Correct_Alleles,
1567268574429:# # 							color = ColorGroup,
1567268574429:# # 							family = baseFontFamily
1567268574430:# # 					)) +
1567268574430:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268574430:# scale_x_discrete(expand = c(0.1, 0)) +
1567268574431:# scale_color_manual(values = annotTextColors) +
1567268574431:scale_fill_manual(values = rev(customPalette),
1567268574432:# labels = typeLabels,
1567268574432:name   = "Scheme"
1567268574432:) +
1567268574433:labs(x = "Scheme",
1567268574433:y = "DB Size (bp)") +
1567268574433:publicationTheme() +
1567268574434:# barPlotCustoms +
1567268574434:theme (axis.text.y = element_text(family = baseFontFamily))
1567268574434:# + coord_flip()
1567268574435:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268574435:)
1567268648015:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567268648015:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567268648016:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567268648016:generalPalette <- c(
1567268648017:"MLST"   = '#0a4f75',
1567268648017:"rMLST"  = '#FFB238',
1567268648018:"cgMLST" = '#91bbe4'
1567268648018:# , "MLST"    = '#d7e4f5'
1567268648018:# , "rMLST"   = '#FFD592'
1567268648019:)
1567268651095:show_col(generalPalette)
1567268654859:annotTextColors       <- c(axisColor, "#ffffff")
1567268655046:baseVariantFontFamily <- baseFontFamily
1567268657577:customPalette   <- generalPalette
1567268660992:# Correct Predictions Plot ------------------------------------------------
1567268660993:(dbSizePLot <-
1567268660993:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268660994:fill = Scheme)) +
1567268660994:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268660995:stat  = "identity",
1567268660996:position = position_dodge(width=0.9)
1567268660996:, show.legend = F
1567268660997:) +
1567268660997:scale_y_log10(expand = c(0,0),
1567268660998:breaks = c(1, 1000, 1000000, 1000000000),
1567268660998:limits = c(1, 10000000000),
1567268660999:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9))) +
1567268661000:# geom_text(position = position_dodge(width = 0.9),
1567268661000:# 					hjust = 1.2, vjust = 0.5,
1567268661001:# 					size = barAnnotTextSize,
1567268661002:# 					show.legend = FALSE,
1567268661002:# 					# parse = TRUE,
1567268661003:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268661003:# 							# aes(label = Correct_Alleles,
1567268661004:# 							color = ColorGroup,
1567268661005:# 							family = baseFontFamily
1567268661005:# 					)) +
1567268661006:# # geom_text(position = position_dodge(width = 0.9),
1567268661010:# # 					hjust = 0, vjust = 0.5,
1567268661011:# # 					size = barAnnotTextSize,
1567268661011:# # 					show.legend = FALSE,
1567268661011:# # 					# parse = TRUE,
1567268661012:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268661012:# # 							# aes(label = Correct_Alleles,
1567268661012:# # 							color = ColorGroup,
1567268661013:# # 							family = baseFontFamily
1567268661013:# # 					)) +
1567268661013:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268661014:# scale_x_discrete(expand = c(0.1, 0)) +
1567268661014:# scale_color_manual(values = annotTextColors) +
1567268661015:scale_fill_manual(values = rev(customPalette),
1567268661015:# labels = typeLabels,
1567268661015:name   = "Scheme"
1567268661016:) +
1567268661016:labs(x = "Scheme",
1567268661016:y = "DB Size (bp)") +
1567268661017:publicationTheme() +
1567268661017:# barPlotCustoms +
1567268661018:theme (axis.text.y = element_text(family = baseFontFamily))
1567268661018:# + coord_flip()
1567268661018:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268661019:)
1567268696919:# Correct Predictions Plot ------------------------------------------------
1567268696919:(dbSizePLot <-
1567268696920:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268696920:fill = Scheme)) +
1567268696921:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268696922:stat  = "identity",
1567268696922:position = position_dodge(width=0.9)
1567268696923:, show.legend = F
1567268696923:) +
1567268696924:scale_y_log10(expand = c(0,0),
1567268696924:breaks = c(1, 1000, 1000000, 1000000000),
1567268696925:limits = c(1, 10000000000),
1567268696925:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9))) +
1567268696926:# geom_text(position = position_dodge(width = 0.9),
1567268696926:# 					hjust = 1.2, vjust = 0.5,
1567268696927:# 					size = barAnnotTextSize,
1567268696927:# 					show.legend = FALSE,
1567268696928:# 					# parse = TRUE,
1567268696929:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268696929:# 							# aes(label = Correct_Alleles,
1567268696930:# 							color = ColorGroup,
1567268696930:# 							family = baseFontFamily
1567268696931:# 					)) +
1567268696931:# # geom_text(position = position_dodge(width = 0.9),
1567268696932:# # 					hjust = 0, vjust = 0.5,
1567268696932:# # 					size = barAnnotTextSize,
1567268696933:# # 					show.legend = FALSE,
1567268696933:# # 					# parse = TRUE,
1567268696934:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268696934:# # 							# aes(label = Correct_Alleles,
1567268696935:# # 							color = ColorGroup,
1567268696935:# # 							family = baseFontFamily
1567268696936:# # 					)) +
1567268696936:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268696937:# scale_x_discrete(expand = c(0.1, 0)) +
1567268696938:# scale_color_manual(values = annotTextColors) +
1567268696938:scale_fill_manual(values = rev(customPalette),
1567268696939:# labels = typeLabels,
1567268696939:name   = "Scheme"
1567268696940:) +
1567268696940:labs(x = "Scheme",
1567268696941:y = "DB Size (bp)") +
1567268696941:publicationTheme() +
1567268696942:barPlotCustoms +
1567268696943:theme (axis.text.y = element_text(family = baseFontFamily))
1567268696943:# + coord_flip()
1567268696944:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268696945:)
1567268728929:# Correct Predictions Plot ------------------------------------------------
1567268728929:(dbSizePLot <-
1567268728930:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268728930:fill = Scheme)) +
1567268728930:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268728931:stat  = "identity",
1567268728931:position = position_dodge(width=0.9)
1567268728931:, show.legend = F
1567268728931:) +
1567268728932:scale_y_log10(expand = c(0,0),
1567268728932:breaks = c(1, 1000, 1000000, 1000000000),
1567268728933:limits = c(1, 10000000000),
1567268728933:labels = c(expression(1), expression(10^3), expression(10^5), expression(10^9))) +
1567268728933:# geom_text(position = position_dodge(width = 0.9),
1567268728934:# 					hjust = 1.2, vjust = 0.5,
1567268728934:# 					size = barAnnotTextSize,
1567268728934:# 					show.legend = FALSE,
1567268728935:# 					# parse = TRUE,
1567268728935:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268728936:# 							# aes(label = Correct_Alleles,
1567268728936:# 							color = ColorGroup,
1567268728936:# 							family = baseFontFamily
1567268728937:# 					)) +
1567268728937:# # geom_text(position = position_dodge(width = 0.9),
1567268728938:# # 					hjust = 0, vjust = 0.5,
1567268728938:# # 					size = barAnnotTextSize,
1567268728938:# # 					show.legend = FALSE,
1567268728939:# # 					# parse = TRUE,
1567268728940:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268728940:# # 							# aes(label = Correct_Alleles,
1567268728940:# # 							color = ColorGroup,
1567268728941:# # 							family = baseFontFamily
1567268728941:# # 					)) +
1567268728942:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268728942:# scale_x_discrete(expand = c(0.1, 0)) +
1567268728942:# scale_color_manual(values = annotTextColors) +
1567268728943:scale_fill_manual(values = rev(customPalette),
1567268728943:# labels = typeLabels,
1567268728944:name   = "Scheme"
1567268728944:) +
1567268728945:labs(x = "Scheme",
1567268728945:y = "DB Size (bp)") +
1567268728946:publicationTheme() +
1567268728946:barPlotCustomsVertical +
1567268728946:theme (axis.text.y = element_text(family = baseFontFamily))
1567268728947:# + coord_flip()
1567268728947:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268728948:)
1567268789127:# Correct Predictions Plot ------------------------------------------------
1567268789128:(dbSizePLot <-
1567268789128:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268789129:fill = Scheme)) +
1567268789129:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268789130:stat  = "identity",
1567268789130:position = position_dodge(width=0.9)
1567268789132:, show.legend = F
1567268789133:) +
1567268789133:scale_y_log10(expand = c(0,0),
1567268789134:breaks = c(1, 1000, 1000000, 1000000000),
1567268789135:limits = c(1, 10000000000),
1567268789135:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))) +
1567268789136:# geom_text(position = position_dodge(width = 0.9),
1567268789136:# 					hjust = 1.2, vjust = 0.5,
1567268789137:# 					size = barAnnotTextSize,
1567268789137:# 					show.legend = FALSE,
1567268789138:# 					# parse = TRUE,
1567268789138:# 					aes(label = format(round(Correct_Alleles, 1), nsmall = 1),
1567268789139:# 							# aes(label = Correct_Alleles,
1567268789139:# 							color = ColorGroup,
1567268789140:# 							family = baseFontFamily
1567268789140:# 					)) +
1567268789140:# # geom_text(position = position_dodge(width = 0.9),
1567268789141:# # 					hjust = 0, vjust = 0.5,
1567268789141:# # 					size = barAnnotTextSize,
1567268789141:# # 					show.legend = FALSE,
1567268789142:# # 					# parse = TRUE,
1567268789142:# # 					aes(x = Tool_Mode, y = 1.5, label = Tool_Mode,
1567268789142:# # 							# aes(label = Correct_Alleles,
1567268789143:# # 							color = ColorGroup,
1567268789143:# # 							family = baseFontFamily
1567268789143:# # 					)) +
1567268789144:# scale_y_continuous(expand = c(0, 0), position = "right") +
1567268789144:# scale_x_discrete(expand = c(0.1, 0)) +
1567268789144:# scale_color_manual(values = annotTextColors) +
1567268789145:scale_fill_manual(values = rev(customPalette),
1567268789145:# labels = typeLabels,
1567268789146:name   = "Scheme"
1567268789146:) +
1567268789146:labs(x = "Scheme",
1567268789147:y = "DB Size (bp)") +
1567268789147:publicationTheme() +
1567268789148:barPlotCustomsVertical +
1567268789148:theme (axis.text.y = element_text(family = baseFontFamily))
1567268789148:# + coord_flip()
1567268789149:# axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),) +
1567268789149:)
1567268872658:# SChem DB Size Plot ------------------------------------------------
1567268872659:(dbSizePlot <-
1567268872659:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268872660:fill = Scheme)) +
1567268872660:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268872661:stat  = "identity",
1567268872661:position = position_dodge(width=0.9)
1567268872662:, show.legend = F
1567268872662:) +
1567268872663:scale_y_log10(expand = c(0,0),
1567268872663:breaks = c(1, 1000, 1000000, 1000000000),
1567268872664:limits = c(1, 10000000000),
1567268872664:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))) +
1567268872665:scale_fill_manual(values = rev(customPalette),
1567268872665:# labels = typeLabels,
1567268872666:name   = "Scheme"
1567268872679:) +
1567268872679:labs(x = "Scheme",
1567268872680:y = "DB Size (bp)") +
1567268872681:publicationTheme() +
1567268872681:barPlotCustomsVertical +
1567268872682:theme (axis.text.y = element_text(family = baseFontFamily))
1567268872682:)
1567268873321:# Time Plot ---------------------------------------------------------------
1567268873321:maxTimeValue <- round(max(dataToPlot$Time))+1
1567268876943:(dataToPlot <- inData %>%
1567268876943:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567268877347:# SChem DB Size Plot ------------------------------------------------
1567268877348:(dbSizePlot <-
1567268877348:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567268877349:fill = Scheme)) +
1567268877349:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567268877349:stat  = "identity",
1567268877350:position = position_dodge(width=0.9)
1567268877350:, show.legend = F
1567268877351:) +
1567268877351:scale_y_log10(expand = c(0,0),
1567268877352:breaks = c(1, 1000, 1000000, 1000000000),
1567268877352:limits = c(1, 10000000000),
1567268877353:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))) +
1567268877353:scale_fill_manual(values = rev(customPalette),
1567268877354:# labels = typeLabels,
1567268877359:name   = "Scheme"
1567268877359:) +
1567268877360:labs(x = "Scheme",
1567268877361:y = "DB Size (bp)") +
1567268877362:publicationTheme() +
1567268877362:barPlotCustomsVertical +
1567268877363:theme (axis.text.y = element_text(family = baseFontFamily))
1567268877364:)
1567269589407:dataToPlot
1567269740353:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567269740353:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567269740354:geom_line(size = 1.2) +
1567269740354:geom_point(size = 3) +
1567269740355:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567269740355:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567269740356:scale_color_manual(values = customPalette
1567269740357:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567269740357:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567269740358:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567269740358:) +
1567269740359:# scale_linetype_manual(
1567269740360:# 	name = "Execution",
1567269740360:# 	labels = c("Single thread", "20 parallel threads"),
1567269740361:# 	values = c(1,2)
1567269740362:# ) +
1567269740362:labs(x = "Sequencing Depth",
1567269740374:y = "Time (s)") +
1567269740375:publicationTheme() +
1567269740376:linesPlotCustoms
1567269740376:)
1567269781029:dataToPlot
1567269831210:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567269831211:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567269831211:geom_line(size = 1.2) +
1567269831212:geom_point(size = 3) +
1567269831212:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567269831213:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567269831213:scale_y_log10(expand = c(0,0)#,
1567269831213:# breaks = c(1, 1000, 1000000),
1567269831214:# limits = c(1, 10000000),
1567269831214:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567269831215:) +
1567269831215:scale_color_manual(values = customPalette
1567269831216:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567269831217:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567269831217:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567269831218:) +
1567269831223:# scale_linetype_manual(
1567269831223:# 	name = "Execution",
1567269831224:# 	labels = c("Single thread", "20 parallel threads"),
1567269831224:# 	values = c(1,2)
1567269831225:# ) +
1567269831225:labs(x = "Sequencing Depth",
1567269831235:y = "Time (s)") +
1567269831236:publicationTheme() +
1567269831236:linesPlotCustoms
1567269831237:)
1567269854278:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567269854279:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567269854279:geom_line(size = 1.2) +
1567269854280:geom_point(size = 3) +
1567269854280:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567269854281:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567269854281:scale_y_log10(#expand = c(0,0)#,
1567269854282:# breaks = c(1, 1000, 1000000),
1567269854282:# limits = c(1, 10000000),
1567269854283:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567269854284:) +
1567269854284:scale_color_manual(values = customPalette
1567269854285:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567269854285:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567269854286:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567269854286:) +
1567269854287:# scale_linetype_manual(
1567269854287:# 	name = "Execution",
1567269854288:# 	labels = c("Single thread", "20 parallel threads"),
1567269854289:# 	values = c(1,2)
1567269854289:# ) +
1567269854290:labs(x = "Sequencing Depth",
1567269854290:y = "Time (s)") +
1567269854291:publicationTheme() +
1567269854292:linesPlotCustoms
1567269854292:)
1567269902482:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567269902483:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567269902483:geom_line(size = 1.2) +
1567269902484:geom_point(size = 3) +
1567269902484:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567269902485:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567269902485:scale_y_log10(expand = c(0,0),
1567269902486:# breaks = c(1, 1000, 1000000),
1567269902486:limits = c(1, 10000000)#,
1567269902487:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567269902487:) +
1567269902487:scale_color_manual(values = customPalette
1567269902488:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567269902488:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567269902489:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567269902489:) +
1567269902490:# scale_linetype_manual(
1567269902490:# 	name = "Execution",
1567269902491:# 	labels = c("Single thread", "20 parallel threads"),
1567269902491:# 	values = c(1,2)
1567269902492:# ) +
1567269902497:labs(x = "Sequencing Depth",
1567269902498:y = "Time (s)") +
1567269902498:publicationTheme() +
1567269902499:linesPlotCustoms
1567269902499:)
1567269916882:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567269916883:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567269916883:geom_line(size = 1.2) +
1567269916884:geom_point(size = 3) +
1567269916884:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567269916885:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567269916885:scale_y_log10(expand = c(0,0),
1567269916886:# breaks = c(1, 1000, 1000000),
1567269916886:limits = c(1000, 10000000)#,
1567269916887:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567269916887:) +
1567269916888:scale_color_manual(values = customPalette
1567269916888:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567269916889:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567269916889:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567269916890:) +
1567269916890:# scale_linetype_manual(
1567269916891:# 	name = "Execution",
1567269916891:# 	labels = c("Single thread", "20 parallel threads"),
1567269916892:# 	values = c(1,2)
1567269916892:# ) +
1567269916893:labs(x = "Sequencing Depth",
1567269916893:y = "Time (s)") +
1567269916899:publicationTheme() +
1567269916899:linesPlotCustoms
1567269916900:)
1567270000139:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270000140:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270000140:geom_line(size = 1.2) +
1567270000140:geom_point(aes(fill = Scheme), size = 3) +
1567270000141:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270000141:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270000141:scale_y_log10(expand = c(0,0),
1567270000142:# breaks = c(1, 1000, 1000000),
1567270000142:limits = c(1000, 10000000)#,
1567270000143:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270000143:) +
1567270000143:scale_color_manual(values = customPalette
1567270000144:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270000144:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270000145:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270000145:) +
1567270000146:# scale_linetype_manual(
1567270000147:# 	name = "Execution",
1567270000148:# 	labels = c("Single thread", "20 parallel threads"),
1567270000148:# 	values = c(1,2)
1567270000149:# ) +
1567270000151:labs(x = "Sequencing Depth",
1567270000152:y = "Time (s)") +
1567270000152:publicationTheme() +
1567270000153:linesPlotCustoms
1567270000153:)
1567270007841:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270007841:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270007842:geom_line(size = 1.2) +
1567270007843:geom_point(aes(color = Scheme), size = 3) +
1567270007843:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270007844:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270007844:scale_y_log10(expand = c(0,0),
1567270007845:# breaks = c(1, 1000, 1000000),
1567270007845:limits = c(1000, 10000000)#,
1567270007846:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270007846:) +
1567270007847:scale_color_manual(values = customPalette
1567270007848:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270007849:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270007850:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270007850:) +
1567270007851:# scale_linetype_manual(
1567270007852:# 	name = "Execution",
1567270007852:# 	labels = c("Single thread", "20 parallel threads"),
1567270007855:# 	values = c(1,2)
1567270007855:# ) +
1567270007856:labs(x = "Sequencing Depth",
1567270007856:y = "Time (s)") +
1567270007857:publicationTheme() +
1567270007858:linesPlotCustoms
1567270007858:)
1567270102231:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270102232:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270102232:geom_line(size = 1.2) +
1567270102233:geom_point(aes(fill = Scheme), shape = 21, size = 3) +
1567270102233:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270102234:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270102234:scale_y_log10(expand = c(0,0),
1567270102235:# breaks = c(1, 1000, 1000000),
1567270102235:limits = c(1000, 10000000)#,
1567270102236:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270102237:) +
1567270102237:scale_color_manual(values = customPalette
1567270102238:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270102239:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270102239:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270102240:) +
1567270102244:# scale_linetype_manual(
1567270102245:# 	name = "Execution",
1567270102246:# 	labels = c("Single thread", "20 parallel threads"),
1567270102246:# 	values = c(1,2)
1567270102247:# ) +
1567270102248:labs(x = "Sequencing Depth",
1567270102248:y = "Time (s)") +
1567270102249:publicationTheme() +
1567270102249:linesPlotCustoms
1567270102250:)
1567270127298:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270127298:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270127299:geom_line(size = 1.2) +
1567270127300:geom_point(aes(fill = Scheme), shape = 21, size = 3) +
1567270127300:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270127301:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270127301:scale_y_log10(expand = c(0,0),
1567270127302:# breaks = c(1, 1000, 1000000),
1567270127303:limits = c(1000, 10000000)#,
1567270127303:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270127304:) +
1567270127304:scale_fill_manual(values = customPalette
1567270127305:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270127305:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270127306:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270127307:) +
1567270127307:# scale_linetype_manual(
1567270127308:# 	name = "Execution",
1567270127308:# 	labels = c("Single thread", "20 parallel threads"),
1567270127309:# 	values = c(1,2)
1567270127323:# ) +
1567270127323:labs(x = "Sequencing Depth",
1567270127324:y = "Time (s)") +
1567270127325:publicationTheme() +
1567270127325:linesPlotCustoms
1567270127326:)
1567270139897:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270139897:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270139898:geom_line(size = 1) +
1567270139899:geom_point(aes(fill = Scheme), shape = 21, size = 3) +
1567270139899:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270139900:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270139900:scale_y_log10(expand = c(0,0),
1567270139901:# breaks = c(1, 1000, 1000000),
1567270139901:limits = c(1000, 10000000)#,
1567270139902:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270139902:) +
1567270139903:scale_fill_manual(values = customPalette
1567270139904:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270139904:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270140006:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270140006:) +
1567270140007:# scale_linetype_manual(
1567270140008:# 	name = "Execution",
1567270140008:# 	labels = c("Single thread", "20 parallel threads"),
1567270140009:# 	values = c(1,2)
1567270140009:# ) +
1567270140010:labs(x = "Sequencing Depth",
1567270140010:y = "Time (s)") +
1567270140011:publicationTheme() +
1567270140011:linesPlotCustoms
1567270140012:)
1567270181094:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270181094:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270181095:geom_line(size = 1) +
1567270181095:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.6) +
1567270181096:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270181096:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270181097:scale_y_log10(expand = c(0,0),
1567270181097:# breaks = c(1, 1000, 1000000),
1567270181098:limits = c(1000, 10000000)#,
1567270181098:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270181099:) +
1567270181099:scale_fill_manual(values = customPalette
1567270181100:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270181100:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270181101:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270181101:) +
1567270181102:# scale_linetype_manual(
1567270181102:# 	name = "Execution",
1567270181107:# 	labels = c("Single thread", "20 parallel threads"),
1567270181107:# 	values = c(1,2)
1567270181108:# ) +
1567270181108:labs(x = "Sequencing Depth",
1567270181109:y = "Time (s)") +
1567270181109:publicationTheme() +
1567270181110:linesPlotCustoms
1567270181110:)
1567270186896:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270186896:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270186897:geom_line(size = 1) +
1567270186897:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 1) +
1567270186897:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270186898:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270186898:scale_y_log10(expand = c(0,0),
1567270186898:# breaks = c(1, 1000, 1000000),
1567270186899:limits = c(1000, 10000000)#,
1567270186899:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270186900:) +
1567270186901:scale_fill_manual(values = customPalette
1567270186901:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270186902:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270186902:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270186902:) +
1567270186903:# scale_linetype_manual(
1567270186903:# 	name = "Execution",
1567270186903:# 	labels = c("Single thread", "20 parallel threads"),
1567270186904:# 	values = c(1,2)
1567270186904:# ) +
1567270186904:labs(x = "Sequencing Depth",
1567270186905:y = "Time (s)") +
1567270186905:publicationTheme() +
1567270186906:linesPlotCustoms
1567270186910:)
1567270193893:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270193893:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270193894:geom_line(size = 1) +
1567270193894:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270193894:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270193895:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270193895:scale_y_log10(expand = c(0,0),
1567270193895:# breaks = c(1, 1000, 1000000),
1567270193896:limits = c(1000, 10000000)#,
1567270193896:# labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))
1567270193896:) +
1567270193897:scale_fill_manual(values = customPalette
1567270193897:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270193897:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270193898:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270193898:) +
1567270193899:# scale_linetype_manual(
1567270193899:# 	name = "Execution",
1567270193899:# 	labels = c("Single thread", "20 parallel threads"),
1567270193900:# 	values = c(1,2)
1567270193900:# ) +
1567270193900:labs(x = "Sequencing Depth",
1567270193901:y = "Time (s)") +
1567270193902:publicationTheme() +
1567270193903:linesPlotCustoms
1567270193903:)
1567270275224:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270275225:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270275225:geom_line(size = 1) +
1567270275226:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270275227:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270275227:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270275228:scale_y_log10(expand = c(0,0),
1567270275229:# breaks = c(1, 1000, 1000000),
1567270275229:limits = c(1000, 10000, 100000, 1000000, 10000000),
1567270275230:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270275230:) +
1567270275231:scale_fill_manual(values = customPalette
1567270275231:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270275232:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270275233:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270275233:) +
1567270275234:# scale_linetype_manual(
1567270275235:# 	name = "Execution",
1567270275235:# 	labels = c("Single thread", "20 parallel threads"),
1567270275236:# 	values = c(1,2)
1567270275237:# ) +
1567270275237:labs(x = "Sequencing Depth",
1567270275238:y = "Time (s)") +
1567270275238:publicationTheme() +
1567270275239:linesPlotCustoms
1567270275240:)
1567270304170:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270304171:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270304171:geom_line(size = 1) +
1567270304172:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270304173:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270304173:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270304174:scale_y_log10(expand = c(0,0),
1567270304174:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270304175:limits = c(1000, 1000000),
1567270304175:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270304176:) +
1567270304177:scale_fill_manual(values = customPalette
1567270304177:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270304178:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270304180:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270304182:) +
1567270304184:# scale_linetype_manual(
1567270304185:# 	name = "Execution",
1567270304185:# 	labels = c("Single thread", "20 parallel threads"),
1567270304186:# 	values = c(1,2)
1567270304198:# ) +
1567270304198:labs(x = "Sequencing Depth",
1567270304199:y = "Time (s)") +
1567270304200:publicationTheme() +
1567270304200:linesPlotCustoms
1567270304201:)
1567270309195:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270309195:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270309196:geom_line(size = 1) +
1567270309196:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270309197:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270309197:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270309197:scale_y_log10(expand = c(0,0),
1567270309198:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270309198:limits = c(1000, 10000000),
1567270309198:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270309199:) +
1567270309199:scale_fill_manual(values = customPalette
1567270309199:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270309200:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270309200:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270309201:) +
1567270309201:# scale_linetype_manual(
1567270309201:# 	name = "Execution",
1567270309202:# 	labels = c("Single thread", "20 parallel threads"),
1567270309202:# 	values = c(1,2)
1567270309203:# ) +
1567270309203:labs(x = "Sequencing Depth",
1567270309203:y = "Time (s)") +
1567270309204:publicationTheme() +
1567270309204:linesPlotCustoms
1567270309205:)
1567270340912:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270340913:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270340913:geom_line(size = 1) +
1567270340913:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270340914:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270340914:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270340914:scale_y_log10(expand = c(0,0),
1567270340915:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270340915:limits = c(1000, 10000000),
1567270340915:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270340916:) +
1567270340916:scale_fill_manual(values = customPalette
1567270340917:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270340917:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270340917:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270340918:) +
1567270340918:# scale_linetype_manual(
1567270340918:# 	name = "Execution",
1567270340919:# 	labels = c("Single thread", "20 parallel threads"),
1567270340919:# 	values = c(1,2)
1567270340920:# ) +
1567270340920:labs(x = "Reads",
1567270340921:y = "DB Size (bp)") +
1567270340921:publicationTheme() +
1567270340921:linesPlotCustoms
1567270340922:)
1567270423478:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270423478:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270423479:geom_line(size = 1) +
1567270423480:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270423480:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270423481:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270423481:scale_x_log10(expand = c(0,0)#,
1567270423482:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270423482:# limits = c(1000, 10000000),
1567270423483:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270423484:) +
1567270423484:scale_y_log10(expand = c(0,0),
1567270423485:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270423485:limits = c(1000, 10000000),
1567270423486:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270423486:) +
1567270423487:scale_fill_manual(values = customPalette
1567270423487:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270423488:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270423490:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270423491:) +
1567270423492:# scale_linetype_manual(
1567270423492:# 	name = "Execution",
1567270423493:# 	labels = c("Single thread", "20 parallel threads"),
1567270423494:# 	values = c(1,2)
1567270423494:# ) +
1567270423495:labs(x = "Reads",
1567270423495:y = "DB Size (bp)") +
1567270423496:publicationTheme() +
1567270423497:linesPlotCustoms
1567270423497:)
1567270442474:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270442475:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270442475:geom_line(size = 1) +
1567270442476:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270442476:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270442477:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270442477:scale_x_continuous0(expand = c(0,0)#,
1567270442478:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270442478:# limits = c(1000, 10000000),
1567270442479:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270442479:) +
1567270442480:scale_y_log10(expand = c(0,0),
1567270442480:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270442481:limits = c(1000, 10000000),
1567270442481:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270442482:) +
1567270442483:scale_fill_manual(values = customPalette
1567270442483:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270442484:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270442490:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270442491:) +
1567270442491:# scale_linetype_manual(
1567270442492:# 	name = "Execution",
1567270442497:# 	labels = c("Single thread", "20 parallel threads"),
1567270442498:# 	values = c(1,2)
1567270442498:# ) +
1567270442499:labs(x = "Reads",
1567270442499:y = "DB Size (bp)") +
1567270442500:publicationTheme() +
1567270442507:linesPlotCustoms
1567270442508:)
1567270448230:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270448231:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270448231:geom_line(size = 1) +
1567270448232:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270448232:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270448233:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270448233:scale_x_continuous(expand = c(0,0)#,
1567270448234:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270448239:# limits = c(1000, 10000000),
1567270448239:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270448240:) +
1567270448240:scale_y_log10(expand = c(0,0),
1567270448241:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270448241:limits = c(1000, 10000000),
1567270448242:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270448243:) +
1567270448245:scale_fill_manual(values = customPalette
1567270448246:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270448246:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270448247:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270448248:) +
1567270448248:# scale_linetype_manual(
1567270448249:# 	name = "Execution",
1567270448249:# 	labels = c("Single thread", "20 parallel threads"),
1567270448250:# 	values = c(1,2)
1567270448250:# ) +
1567270448251:labs(x = "Reads",
1567270448252:y = "DB Size (bp)") +
1567270448252:publicationTheme() +
1567270448253:linesPlotCustoms
1567270448253:)
1567270483139:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270483139:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270483140:geom_line(size = 1) +
1567270483140:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270483141:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270483142:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270483142:scale_x_continuous(expand = c(0,0),
1567270483143:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270483143:limits = c(0, 1e+10)
1567270483144:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270483145:) +
1567270483145:scale_y_log10(expand = c(0,0),
1567270483146:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270483147:limits = c(1000, 10000000),
1567270483148:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270483150:) +
1567270483151:scale_fill_manual(values = customPalette
1567270483151:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270483152:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270483155:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270483155:) +
1567270483156:# scale_linetype_manual(
1567270483156:# 	name = "Execution",
1567270483157:# 	labels = c("Single thread", "20 parallel threads"),
1567270483158:# 	values = c(1,2)
1567270483159:# ) +
1567270483159:labs(x = "Reads",
1567270483160:y = "DB Size (bp)") +
1567270483161:publicationTheme() +
1567270483161:linesPlotCustoms
1567270483162:)
1567270491797:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270491798:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270491798:geom_line(size = 1) +
1567270491799:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270491799:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270491800:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270491800:scale_x_continuous(expand = c(0,0),
1567270491801:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270491801:limits = c(0, 1e+6)
1567270491802:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270491802:) +
1567270491803:scale_y_log10(expand = c(0,0),
1567270491803:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270491804:limits = c(1000, 10000000),
1567270491805:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270491805:) +
1567270491814:scale_fill_manual(values = customPalette
1567270491817:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270491818:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270491819:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270491820:) +
1567270491823:# scale_linetype_manual(
1567270491824:# 	name = "Execution",
1567270491825:# 	labels = c("Single thread", "20 parallel threads"),
1567270491825:# 	values = c(1,2)
1567270491826:# ) +
1567270491826:labs(x = "Reads",
1567270491827:y = "DB Size (bp)") +
1567270491827:publicationTheme() +
1567270491828:linesPlotCustoms
1567270491828:)
1567270497557:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270497558:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270497558:geom_line(size = 1) +
1567270497559:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270497560:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270497560:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270497560:scale_x_continuous(expand = c(0,0),
1567270497561:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270497561:limits = c(0, 1e+8)
1567270497561:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270497562:) +
1567270497562:scale_y_log10(expand = c(0,0),
1567270497562:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270497563:limits = c(1000, 10000000),
1567270497563:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270497563:) +
1567270497564:scale_fill_manual(values = customPalette
1567270497564:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270497565:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270497565:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270497565:) +
1567270497566:# scale_linetype_manual(
1567270497566:# 	name = "Execution",
1567270497567:# 	labels = c("Single thread", "20 parallel threads"),
1567270497567:# 	values = c(1,2)
1567270497568:# ) +
1567270497568:labs(x = "Reads",
1567270497569:y = "DB Size (bp)") +
1567270497569:publicationTheme() +
1567270497570:linesPlotCustoms
1567270497570:)
1567270503436:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270503437:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270503438:geom_line(size = 1) +
1567270503438:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270503439:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270503440:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270503440:scale_x_continuous(expand = c(0,0),
1567270503441:# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270503442:limits = c(0, 1e+9)
1567270503442:# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270503443:) +
1567270503443:scale_y_log10(expand = c(0,0),
1567270503444:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270503444:limits = c(1000, 10000000),
1567270503445:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270503446:) +
1567270503446:scale_fill_manual(values = customPalette
1567270503447:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270503448:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270503448:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270503452:) +
1567270503454:# scale_linetype_manual(
1567270503455:# 	name = "Execution",
1567270503455:# 	labels = c("Single thread", "20 parallel threads"),
1567270503456:# 	values = c(1,2)
1567270503457:# ) +
1567270503457:labs(x = "Reads",
1567270503458:y = "DB Size (bp)") +
1567270503458:publicationTheme() +
1567270503459:linesPlotCustoms
1567270503460:)
1567270513883:# scale_x_continuous(expand = c(0,0),
1567270513884:# 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270513884:# 							limits = c(0, 1e+9)
1567270513884:# 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270513885:# ) +
1567270515987:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270515988:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270515989:geom_line(size = 1) +
1567270515990:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270515990:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270515991:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270515991:# scale_x_continuous(expand = c(0,0),
1567270515992:# 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270515992:# 							limits = c(0, 1e+9)
1567270515993:# 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270515993:# ) +
1567270515994:scale_y_log10(expand = c(0,0),
1567270515995:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270515995:limits = c(1000, 10000000),
1567270515996:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270515996:) +
1567270515997:scale_fill_manual(values = customPalette
1567270515997:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270515998:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270516000:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270516001:) +
1567270516002:# scale_linetype_manual(
1567270516002:# 	name = "Execution",
1567270516003:# 	labels = c("Single thread", "20 parallel threads"),
1567270516004:# 	values = c(1,2)
1567270516004:# ) +
1567270516005:labs(x = "Reads",
1567270516005:y = "DB Size (bp)") +
1567270516006:publicationTheme() +
1567270516007:linesPlotCustoms
1567270516008:)
1567270528575:dataToPlot
1567270652410:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270652411:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270652411:geom_line(size = 1) +
1567270652412:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270652412:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270652412:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270652413:scale_x_continuous(expand = c(0,0),
1567270652413:# 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270652414:limits = c(0, 1e+10)
1567270652414:# 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270652415:) +
1567270652415:scale_y_log10(expand = c(0,0),
1567270652416:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270652416:limits = c(1000, 10000000),
1567270652417:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270652417:) +
1567270652418:scale_fill_manual(values = customPalette
1567270652418:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270652419:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270652419:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270652420:) +
1567270652421:# scale_linetype_manual(
1567270652421:# 	name = "Execution",
1567270652422:# 	labels = c("Single thread", "20 parallel threads"),
1567270652423:# 	values = c(1,2)
1567270652424:# ) +
1567270652425:labs(x = "Reads",
1567270652425:y = "DB Size (bp)") +
1567270652426:publicationTheme() +
1567270652427:linesPlotCustoms
1567270652427:)
1567270697348:# scale_x_continuous(expand = c(0,0),
1567270697349:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270697349:# 							limits = c(0, 1e+10)
1567270697350:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270697350:# ) +
1567270699033:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270699033:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270699034:geom_line(size = 1) +
1567270699035:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270699035:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270699036:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270699036:# scale_x_continuous(expand = c(0,0),
1567270699036:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270699037:# 							limits = c(0, 1e+10)
1567270699037:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270699038:# ) +
1567270699038:scale_y_log10(expand = c(0,0),
1567270699039:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270699039:limits = c(1000, 10000000),
1567270699040:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270699040:) +
1567270699041:scale_fill_manual(values = customPalette
1567270699041:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270699042:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270699054:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270699055:) +
1567270699056:# scale_linetype_manual(
1567270699056:# 	name = "Execution",
1567270699057:# 	labels = c("Single thread", "20 parallel threads"),
1567270699058:# 	values = c(1,2)
1567270699058:# ) +
1567270699059:labs(x = "Reads",
1567270699059:y = "DB Size (bp)") +
1567270699060:publicationTheme() +
1567270699060:linesPlotCustoms
1567270699061:)
1567270730874:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270730874:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270730875:geom_line(size = 1) +
1567270730875:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270730876:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270730877:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270730877:# scale_x_continuous(expand = c(0,0),
1567270730878:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270730878:# 							limits = c(0, 1e+10)
1567270730879:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270730880:# ) +
1567270730880:# scale_y_log10(expand = c(0,0),
1567270730881:# 							breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270730881:# 							limits = c(1000, 10000000),
1567270730882:# 							labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270730883:# 							) +
1567270730883:scale_fill_manual(values = customPalette
1567270730898:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270730899:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270730900:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270730901:) +
1567270730901:# scale_linetype_manual(
1567270730902:# 	name = "Execution",
1567270730906:# 	labels = c("Single thread", "20 parallel threads"),
1567270730906:# 	values = c(1,2)
1567270730907:# ) +
1567270730910:labs(x = "Reads",
1567270730911:y = "DB Size (bp)") +
1567270730911:publicationTheme() +
1567270730923:linesPlotCustoms
1567270730923:)
1567270823722:# scale_y_log10(expand = c(0,0),
1567270823723:# 							breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270823723:# 							limits = c(1000, 10000000),
1567270823724:# 							labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270823724:# 							) +
1567270826121:scale_y_log10(expand = c(0,0),
1567270826122:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270826122:limits = c(1000, 10000000),
1567270826123:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270826123:) +
1567270831304:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567270831304:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270831305:geom_line(size = 1) +
1567270831305:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270831305:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270831306:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270831306:# scale_x_continuous(expand = c(0,0),
1567270831306:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270831307:# 							limits = c(0, 1e+10)
1567270831307:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270831308:# ) +
1567270831308:scale_y_log10(expand = c(0,0),
1567270831308:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270831309:limits = c(1000, 10000000),
1567270831309:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270831309:) +
1567270831310:scale_fill_manual(values = customPalette
1567270831310:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270831311:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270831311:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270831311:) +
1567270831312:# scale_linetype_manual(
1567270831312:# 	name = "Execution",
1567270831313:# 	labels = c("Single thread", "20 parallel threads"),
1567270831313:# 	values = c(1,2)
1567270831313:# ) +
1567270831314:labs(x = "Reads",
1567270831314:y = "DB Size (bp)") +
1567270831315:publicationTheme() +
1567270831316:linesPlotCustoms
1567270831316:)
1567270841165:dataToPlot
1567270872461:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads/1000)) +
1567270872462:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270872462:geom_line(size = 1) +
1567270872463:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270872463:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270872464:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270872464:# scale_x_continuous(expand = c(0,0),
1567270872464:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270872465:# 							limits = c(0, 1e+10)
1567270872465:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270872466:# ) +
1567270872466:scale_y_log10(expand = c(0,0),
1567270872467:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270872467:limits = c(1000, 10000000),
1567270872468:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270872469:) +
1567270872469:scale_fill_manual(values = customPalette
1567270872470:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270872470:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270872471:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270872473:) +
1567270872474:# scale_linetype_manual(
1567270872474:# 	name = "Execution",
1567270872475:# 	labels = c("Single thread", "20 parallel threads"),
1567270872475:# 	values = c(1,2)
1567270872476:# ) +
1567270872477:labs(x = "Reads",
1567270872477:y = "DB Size (bp)") +
1567270872478:publicationTheme() +
1567270872479:linesPlotCustoms
1567270872479:)
1567270882535:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567270882535:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567270882536:geom_line(size = 1) +
1567270882536:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567270882537:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567270882538:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567270882538:# scale_x_continuous(expand = c(0,0),
1567270882539:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270882539:# 							limits = c(0, 1e+10)
1567270882540:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270882540:# ) +
1567270882541:scale_y_log10(expand = c(0,0),
1567270882541:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567270882542:limits = c(1000, 10000000),
1567270882543:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567270882543:) +
1567270882544:scale_fill_manual(values = customPalette
1567270882545:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567270882545:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567270882546:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567270882546:) +
1567270882547:# scale_linetype_manual(
1567270882548:# 	name = "Execution",
1567270882548:# 	labels = c("Single thread", "20 parallel threads"),
1567270882549:# 	values = c(1,2)
1567270882549:# ) +
1567270882550:labs(x = "Reads",
1567270882550:y = "DB Size (bp)") +
1567270882551:publicationTheme() +
1567270882551:linesPlotCustoms
1567270882552:)
1567275171196:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275171197:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275171197:geom_line(size = 1) +
1567275171198:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275171199:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275171200:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275171200:# scale_x_continuous(expand = c(0,0),
1567275171201:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275171201:# 							limits = c(0, 1e+10)
1567275171202:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275171202:# ) +
1567275171203:scale_x_log10(expand = c(0,0),
1567275171203:breaks = c(1, 1000, 1000000, 1000000000),
1567275171204:limits = c(1, 10000000000),
1567275171205:labels = c(expression(1), expression(10^3), expression(10^6), expression(10^9))) +
1567275171205:scale_y_log10(expand = c(0,0),
1567275171206:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275171207:limits = c(1000, 10000000),
1567275171208:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275171208:) +
1567275171209:scale_fill_manual(values = customPalette
1567275171210:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275171210:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275171211:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275171212:) +
1567275171212:# scale_linetype_manual(
1567275171213:# 	name = "Execution",
1567275171214:# 	labels = c("Single thread", "20 parallel threads"),
1567275171214:# 	values = c(1,2)
1567275171215:# ) +
1567275171216:labs(x = "Reads",
1567275171216:y = "DB Size (bp)") +
1567275171217:publicationTheme() +
1567275171218:linesPlotCustoms
1567275171218:)
1567275240734:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275240734:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275240735:geom_line(size = 1) +
1567275240736:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275240736:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275240737:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275240737:# scale_x_continuous(expand = c(0,0),
1567275240738:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275240739:# 							limits = c(0, 1e+10)
1567275240739:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275240740:# ) +
1567275240740:scale_x_log10(expand = c(0,0),
1567275240741:breaks = c(1e+3, 1e+6, 1e+9),
1567275240741:limits = c(1000, 10000000000),
1567275240743:labels = c(expression(10^3), expression(10^6), expression(10^9))) +
1567275240745:scale_y_log10(expand = c(0,0),
1567275240746:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275240747:limits = c(1000, 10000000),
1567275240747:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275240748:) +
1567275240749:scale_fill_manual(values = customPalette
1567275240749:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275240750:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275240751:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275240752:) +
1567275240752:# scale_linetype_manual(
1567275240753:# 	name = "Execution",
1567275240753:# 	labels = c("Single thread", "20 parallel threads"),
1567275240754:# 	values = c(1,2)
1567275240754:# ) +
1567275240755:labs(x = "Reads",
1567275240756:y = "DB Size (bp)") +
1567275240756:publicationTheme() +
1567275240757:linesPlotCustoms
1567275240757:)
1567275311182:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275311183:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275311183:geom_line(size = 1) +
1567275311184:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275311184:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275311185:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275311185:# scale_x_continuous(expand = c(0,0),
1567275311186:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275311186:# 							limits = c(0, 1e+10)
1567275311187:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275311187:# ) +
1567275311188:scale_x_log10(expand = c(0,0),
1567275311189:breaks = c(1e+3, 1e+4, 1e+5,  1e+6,  1e+7, 1e+9),
1567275311189:limits = c(1000, 10000000000),
1567275311190:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7), expression(10^9))) +
1567275311190:scale_y_log10(expand = c(0,0),
1567275311191:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275311194:limits = c(1000, 10000000),
1567275311198:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275311198:) +
1567275311199:scale_fill_manual(values = customPalette
1567275311199:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275311200:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275311201:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275311201:) +
1567275311202:# scale_linetype_manual(
1567275311202:# 	name = "Execution",
1567275311203:# 	labels = c("Single thread", "20 parallel threads"),
1567275311215:# 	values = c(1,2)
1567275311216:# ) +
1567275311217:labs(x = "Reads",
1567275311217:y = "DB Size (bp)") +
1567275311218:publicationTheme() +
1567275311218:linesPlotCustoms
1567275311219:)
1567275339694:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275339695:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275339695:geom_line(size = 1) +
1567275339696:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275339697:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275339697:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275339698:# scale_x_continuous(expand = c(0,0),
1567275339698:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275339699:# 							limits = c(0, 1e+10)
1567275339700:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275339700:# ) +
1567275339701:scale_x_log10(expand = c(0,0),
1567275339701:breaks = c(1e+3, 1e+4, 1e+5,  1e+6,  1e+7),
1567275339702:limits = c(1000, 1e+7),
1567275339702:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))) +
1567275339703:scale_y_log10(expand = c(0,0),
1567275339703:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275339704:limits = c(1000, 10000000),
1567275339705:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275339705:) +
1567275339706:scale_fill_manual(values = customPalette
1567275339707:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275339707:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275339708:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275339708:) +
1567275339709:# scale_linetype_manual(
1567275339709:# 	name = "Execution",
1567275339710:# 	labels = c("Single thread", "20 parallel threads"),
1567275339711:# 	values = c(1,2)
1567275339712:# ) +
1567275339712:labs(x = "Reads",
1567275339713:y = "DB Size (bp)") +
1567275339714:publicationTheme() +
1567275339714:linesPlotCustoms
1567275339715:)
1567275453878:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/ggplot_theme.R')
1567275464101:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275464101:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275464102:geom_line(size = 1) +
1567275464102:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275464103:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275464103:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275464104:# scale_x_continuous(expand = c(0,0),
1567275464104:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275464105:# 							limits = c(0, 1e+10)
1567275464105:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275464106:# ) +
1567275464106:scale_x_log10(expand = c(0,0),
1567275464107:breaks = c(1e+3, 1e+4, 1e+5,  1e+6,  1e+7),
1567275464107:limits = c(1000, 1e+7),
1567275464108:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))) +
1567275464108:scale_y_log10(expand = c(0,0),
1567275464109:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275464110:limits = c(1000, 10000000),
1567275464111:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275464113:) +
1567275464114:scale_fill_manual(values = customPalette
1567275464115:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275464116:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275464117:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275464117:) +
1567275464118:# scale_linetype_manual(
1567275464119:# 	name = "Execution",
1567275464119:# 	labels = c("Single thread", "20 parallel threads"),
1567275464120:# 	values = c(1,2)
1567275464121:# ) +
1567275464121:labs(x = "Reads",
1567275464122:y = "DB Size (bp)") +
1567275464123:publicationTheme() +
1567275464124:linesPlotCustoms2 +
1567275464124:theme(
1567275464125:)
1567275464126:)
1567275468290:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/ggplot_theme.R')
1567275478155:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275478155:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275478155:geom_line(size = 1) +
1567275478156:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275478156:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275478156:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275478157:# scale_x_continuous(expand = c(0,0),
1567275478157:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275478158:# 							limits = c(0, 1e+10)
1567275478158:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275478158:# ) +
1567275478159:scale_x_log10(expand = c(0,0),
1567275478159:breaks = c(1e+3, 1e+4, 1e+5,  1e+6,  1e+7),
1567275478159:limits = c(1000, 1e+7),
1567275478160:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))) +
1567275478160:scale_y_log10(expand = c(0,0),
1567275478160:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275478161:limits = c(1000, 10000000),
1567275478161:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275478162:) +
1567275478162:scale_fill_manual(values = customPalette
1567275478163:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275478163:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275478164:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275478167:) +
1567275478168:# scale_linetype_manual(
1567275478168:# 	name = "Execution",
1567275478170:# 	labels = c("Single thread", "20 parallel threads"),
1567275478172:# 	values = c(1,2)
1567275478172:# ) +
1567275478173:labs(x = "Reads",
1567275478173:y = "DB Size (bp)") +
1567275478174:publicationTheme() +
1567275478175:linesPlotCustoms2
1567275478175:)
1567275499698:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275499698:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275499699:geom_line(size = 1) +
1567275499699:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275499700:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275499700:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275499700:# scale_x_continuous(expand = c(0,0),
1567275499701:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275499701:# 							limits = c(0, 1e+10)
1567275499701:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275499702:# ) +
1567275499702:scale_x_log10(expand = c(0,0),
1567275499702:breaks = c(1e+3, 1e+4, 1e+5,  1e+6,  1e+7),
1567275499703:limits = c(1000, 1e+7),
1567275499703:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))) +
1567275499704:scale_y_log10(expand = c(0,0),
1567275499704:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275499705:limits = c(1000, 10000000),
1567275499705:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275499706:) +
1567275499706:scale_fill_manual(values = customPalette
1567275499707:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275499708:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275499708:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275499709:) +
1567275499710:# scale_linetype_manual(
1567275499711:# 	name = "Execution",
1567275499711:# 	labels = c("Single thread", "20 parallel threads"),
1567275499711:# 	values = c(1,2)
1567275499712:# ) +
1567275499712:labs(x = "Reads",
1567275499713:y = "DB Size (bp)") +
1567275499713:publicationTheme()
1567275499714:# linesPlotCustoms2
1567275499714:)
1567275581203:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275581204:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275581205:geom_line(size = 1, color = "#444444") +
1567275581205:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275581206:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275581206:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275581207:# scale_x_continuous(expand = c(0,0),
1567275581208:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275581208:# 							limits = c(0, 1e+10)
1567275581209:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275581209:# ) +
1567275581210:scale_x_log10(expand = c(0,0),
1567275581210:breaks = c(1e+3, 1e+4, 1e+5,  1e+6,  1e+7),
1567275581211:limits = c(1000, 1e+7),
1567275581211:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))) +
1567275581212:scale_y_log10(expand = c(0,0),
1567275581212:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275581213:limits = c(1000, 10000000),
1567275581214:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275581214:) +
1567275581215:scale_fill_manual(values = customPalette
1567275581217:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275581218:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275581218:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275581219:) +
1567275581220:# scale_linetype_manual(
1567275581221:# 	name = "Execution",
1567275581222:# 	labels = c("Single thread", "20 parallel threads"),
1567275581223:# 	values = c(1,2)
1567275581223:# ) +
1567275581224:labs(x = "Reads",
1567275581224:y = "DB Size (bp)") +
1567275581225:publicationTheme()
1567275581239:# linesPlotCustoms2
1567275581239:)
1567275643424:dataToPlot$Reads
1567275647796:max(dataToPlot$Reads)
1567275659515:max(dataToPlot$Size)
1567275670951:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size/1000, y = Reads)) +
1567275670951:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275670952:geom_line(size = 1, color = "#444444") +
1567275670952:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275670953:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275670954:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275670954:# scale_x_continuous(expand = c(0,0),
1567275670955:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275670956:# 							limits = c(0, 1e+10)
1567275670956:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275670957:# ) +
1567275670957:scale_x_log10(expand = c(0,0),
1567275670958:breaks = c(1e+3, 1e+4, 1e+5,  1e+6),
1567275670958:limits = c(1000, max(dataToPlot$Size)),
1567275670959:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6))) +
1567275670960:scale_y_log10(expand = c(0,0),
1567275670971:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275670972:limits = c(1000, 10000000),
1567275670972:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275670973:) +
1567275670974:scale_fill_manual(values = customPalette
1567275670974:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275670975:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275670975:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275670976:) +
1567275670977:# scale_linetype_manual(
1567275670977:# 	name = "Execution",
1567275670978:# 	labels = c("Single thread", "20 parallel threads"),
1567275670979:# 	values = c(1,2)
1567275670979:# ) +
1567275670980:labs(x = "Reads",
1567275670980:y = "DB Size (bp)") +
1567275670981:publicationTheme()
1567275670982:# linesPlotCustoms2
1567275670982:)
1567275722059:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275722060:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275722061:geom_line(size = 1, color = "#444444") +
1567275722061:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275722062:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275722062:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275722063:# scale_x_continuous(expand = c(0,0),
1567275722064:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275722064:# 							limits = c(0, 1e+10)
1567275722065:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275722065:# ) +
1567275722066:scale_x_log10(expand = c(0,0),
1567275722067:breaks = c(1e+3, 1e+4, 1e+5,  1e+6),
1567275722067:limits = c(1000, max(dataToPlot$Size)),
1567275722068:labels = c(expression(10^3), expression(10^4), expression(10^5), expression(10^6))) +
1567275722071:scale_y_log10(expand = c(0,0),
1567275722072:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275722073:limits = c(1000, 10000000),
1567275722073:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275722074:) +
1567275722075:scale_fill_manual(values = customPalette
1567275722075:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275722076:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275722077:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275722087:) +
1567275722088:# scale_linetype_manual(
1567275722088:# 	name = "Execution",
1567275722089:# 	labels = c("Single thread", "20 parallel threads"),
1567275722090:# 	values = c(1,2)
1567275722090:# ) +
1567275722091:labs(x = "Reads",
1567275722092:y = "DB Size (bp)") +
1567275722092:publicationTheme()
1567275722093:# linesPlotCustoms2
1567275722094:)
1567275759922:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275759923:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275759924:geom_line(size = 1, color = "#444444") +
1567275759924:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275759925:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275759925:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275759926:# scale_x_continuous(expand = c(0,0),
1567275759926:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275759927:# 							limits = c(0, 1e+10)
1567275759927:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275759928:# ) +
1567275759928:scale_x_log10(expand = c(0,0),
1567275759929:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275759929:limits = c(1000, max(dataToPlot$Size)),
1567275759930:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275759932:scale_y_log10(expand = c(0,0),
1567275759944:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275759944:limits = c(1000, 10000000),
1567275759945:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275759945:) +
1567275759946:scale_fill_manual(values = customPalette
1567275759947:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275759947:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275759948:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275759949:) +
1567275759949:# scale_linetype_manual(
1567275759950:# 	name = "Execution",
1567275759951:# 	labels = c("Single thread", "20 parallel threads"),
1567275759951:# 	values = c(1,2)
1567275759952:# ) +
1567275759953:labs(x = "Reads",
1567275759953:y = "DB Size (bp)") +
1567275759954:publicationTheme()
1567275759961:# linesPlotCustoms2
1567275759962:)
1567275777868:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275777869:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275777869:geom_line(size = 1, color = "#444444") +
1567275777869:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275777870:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275777870:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275777870:# scale_x_continuous(expand = c(0,0),
1567275777871:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275777871:# 							limits = c(0, 1e+10)
1567275777871:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275777872:# ) +
1567275777872:scale_x_log10(expand = c(0,0),
1567275777872:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275777873:limits = c(1e+6, max(dataToPlot$Size)),
1567275777873:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275777874:scale_y_log10(expand = c(0,0),
1567275777874:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275777874:limits = c(1000, 10000000),
1567275777875:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275777875:) +
1567275777876:scale_fill_manual(values = customPalette
1567275777876:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275777877:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275777877:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275777878:) +
1567275777879:# scale_linetype_manual(
1567275777880:# 	name = "Execution",
1567275777880:# 	labels = c("Single thread", "20 parallel threads"),
1567275777881:# 	values = c(1,2)
1567275777881:# ) +
1567275777882:labs(x = "Reads",
1567275777882:y = "DB Size (bp)") +
1567275777883:publicationTheme()
1567275777883:# linesPlotCustoms2
1567275777883:)
1567275792352:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275792352:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275792353:geom_line(size = 1, color = "#444444") +
1567275792353:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275792354:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275792354:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275792355:# scale_x_continuous(expand = c(0,0),
1567275792355:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275792356:# 							limits = c(0, 1e+10)
1567275792356:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275792357:# ) +
1567275792357:scale_x_log10(expand = c(0,0),
1567275792358:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275792358:limits = c(1e+6, 1e+10),
1567275792359:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275792359:scale_y_log10(expand = c(0,0),
1567275792360:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275792360:limits = c(1000, 10000000),
1567275792361:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275792362:) +
1567275792362:scale_fill_manual(values = customPalette
1567275792363:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275792363:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275792364:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275792365:) +
1567275792365:# scale_linetype_manual(
1567275792366:# 	name = "Execution",
1567275792367:# 	labels = c("Single thread", "20 parallel threads"),
1567275792368:# 	values = c(1,2)
1567275792369:# ) +
1567275792369:labs(x = "Reads",
1567275792370:y = "DB Size (bp)") +
1567275792371:publicationTheme()
1567275792371:# linesPlotCustoms2
1567275792372:)
1567275816465:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275816466:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275816468:geom_line(size = 1, color = "#444444") +
1567275816469:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275816469:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275816470:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275816471:# scale_x_continuous(expand = c(0,0),
1567275816471:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275816472:# 							limits = c(0, 1e+10)
1567275816472:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275816473:# ) +
1567275816473:scale_x_log10(expand = c(0,0),
1567275816474:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275816479:limits = c(1e+6, max(dataToPlot$Size)*1.10),
1567275816480:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275816481:scale_y_log10(expand = c(0,0),
1567275816481:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275816482:limits = c(1000, 10000000),
1567275816482:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275816484:) +
1567275816485:scale_fill_manual(values = customPalette
1567275816485:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275816486:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275816487:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275816488:) +
1567275816488:# scale_linetype_manual(
1567275816489:# 	name = "Execution",
1567275816489:# 	labels = c("Single thread", "20 parallel threads"),
1567275816490:# 	values = c(1,2)
1567275816491:# ) +
1567275816495:labs(x = "Reads",
1567275816495:y = "DB Size (bp)") +
1567275816496:publicationTheme()
1567275816497:# linesPlotCustoms2
1567275816498:)
1567275825448:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275825449:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275825449:geom_line(size = 1, color = "#444444") +
1567275825450:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275825451:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275825451:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275825452:# scale_x_continuous(expand = c(0,0),
1567275825452:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275825453:# 							limits = c(0, 1e+10)
1567275825453:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275825454:# ) +
1567275825454:scale_x_log10(expand = c(0,0),
1567275825455:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275825455:limits = c(1e+6, max(dataToPlot$Size)*1.5),
1567275825456:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275825456:scale_y_log10(expand = c(0,0),
1567275825457:breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275825458:limits = c(1000, 10000000),
1567275825458:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275825459:) +
1567275825460:scale_fill_manual(values = customPalette
1567275825460:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275825461:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275825461:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275825462:) +
1567275825463:# scale_linetype_manual(
1567275825463:# 	name = "Execution",
1567275825464:# 	labels = c("Single thread", "20 parallel threads"),
1567275825465:# 	values = c(1,2)
1567275825465:# ) +
1567275825466:labs(x = "Reads",
1567275825467:y = "DB Size (bp)") +
1567275825467:publicationTheme()
1567275825468:# linesPlotCustoms2
1567275825468:)
1567275914980:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275914981:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275914981:geom_line(size = 1, color = "#444444") +
1567275914982:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275914982:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275914983:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275914984:# scale_x_continuous(expand = c(0,0),
1567275914984:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275914985:# 							limits = c(0, 1e+10)
1567275914985:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275914986:# ) +
1567275914986:scale_x_log10(expand = c(0,0),
1567275914986:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275914987:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567275914987:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275914988:scale_y_log10(expand = c(0,0),
1567275914988:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567275914988:limits = c(1e+3, 1e+7),
1567275914989:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275914989:) +
1567275914989:scale_fill_manual(values = customPalette
1567275914990:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275914990:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275914991:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275914991:) +
1567275914991:# scale_linetype_manual(
1567275914992:# 	name = "Execution",
1567275914992:# 	labels = c("Single thread", "20 parallel threads"),
1567275914993:# 	values = c(1,2)
1567275914993:# ) +
1567275914993:labs(x = "Reads",
1567275914994:y = "DB Size (bp)") +
1567275914994:publicationTheme()
1567275914995:# linesPlotCustoms2
1567275914996:)
1567275984423:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567275984423:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567275984424:geom_line(size = 1, color = "#444444") +
1567275984425:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567275984425:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567275984426:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567275984426:# scale_x_continuous(expand = c(0,0),
1567275984426:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567275984427:# 							limits = c(0, 1e+10)
1567275984427:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275984427:# ) +
1567275984428:scale_x_log10(expand = c(0,0),
1567275984428:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567275984429:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567275984429:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567275984429:scale_y_log10(expand = c(0,0),
1567275984430:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567275984430:limits = c(1e+3, 1e+7),
1567275984431:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567275984431:) +
1567275984431:scale_fill_manual(values = customPalette
1567275984432:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567275984432:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567275984433:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567275984433:) +
1567275984434:# scale_linetype_manual(
1567275984435:# 	name = "Execution",
1567275984436:# 	labels = c("Single thread", "20 parallel threads"),
1567275984437:# 	values = c(1,2)
1567275984437:# ) +
1567275984438:labs(x = "Useful Reads",
1567275984439:y = "DB Size (bp)") +
1567275984440:publicationTheme()
1567275984441:# linesPlotCustoms2
1567275984441:)
1567276014687:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567276014688:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567276014688:geom_line(size = 1, color = "#444444") +
1567276014689:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567276014689:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567276014690:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567276014690:# scale_x_continuous(expand = c(0,0),
1567276014691:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567276014691:# 							limits = c(0, 1e+10)
1567276014692:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276014692:# ) +
1567276014693:scale_x_log10(expand = c(0,0),
1567276014693:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567276014694:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567276014694:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567276014695:scale_y_log10(expand = c(0,0),
1567276014696:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567276014696:limits = c(1e+3, 1e+7),
1567276014697:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276014697:) +
1567276014698:scale_fill_manual(values = customPalette
1567276014700:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567276014701:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567276014702:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567276014703:) +
1567276014704:# scale_linetype_manual(
1567276014704:# 	name = "Execution",
1567276014705:# 	labels = c("Single thread", "20 parallel threads"),
1567276014706:# 	values = c(1,2)
1567276014706:# ) +
1567276014707:labs(x = "DB Size (bp)",
1567276014707:y = "Useful Reads") +
1567276014708:publicationTheme()
1567276014709:# linesPlotCustoms2
1567276014709:)
1567276093621:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567276093622:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567276093622:geom_line(size = 1, color = "#444444") +
1567276093622:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567276093623:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567276093623:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567276093624:# scale_x_continuous(expand = c(0,0),
1567276093624:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567276093625:# 							limits = c(0, 1e+10)
1567276093625:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276093626:# ) +
1567276093636:scale_x_log10(expand = c(0,0),
1567276093636:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567276093637:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567276093637:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567276093638:scale_y_log10(expand = c(0,0),
1567276093639:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567276093639:limits = c(1e+3, 1e+7),
1567276093640:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276093640:) +
1567276093641:scale_fill_manual(values = customPalette
1567276093650:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567276093651:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567276093652:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567276093659:) +
1567276093659:# scale_linetype_manual(
1567276093660:# 	name = "Execution",
1567276093661:# 	labels = c("Single thread", "20 parallel threads"),
1567276093661:# 	values = c(1,2)
1567276093662:# ) +
1567276093662:labs(x = "DB Size (bp)",
1567276093663:y = "Useful Reads") +
1567276093664:publicationTheme()
1567276093664:+ theme(panel.grid.minor = element_blank())
1567276093665:)
1567276131695:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567276131696:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567276131697:geom_line(size = 1, color = "#444444") +
1567276131697:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567276131698:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567276131698:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567276131699:# scale_x_continuous(expand = c(0,0),
1567276131699:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567276131700:# 							limits = c(0, 1e+10)
1567276131700:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276131701:# ) +
1567276131701:scale_x_log10(expand = c(0,0),
1567276131701:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567276131702:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567276131704:limits = c(1e+6, 1e+10),
1567276131705:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567276131705:scale_y_log10(expand = c(0,0),
1567276131706:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567276131715:limits = c(1e+3, 1e+7),
1567276131715:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276131716:) +
1567276131717:scale_fill_manual(values = customPalette
1567276131718:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567276131718:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567276131719:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567276131720:) +
1567276131720:# scale_linetype_manual(
1567276131721:# 	name = "Execution",
1567276131722:# 	labels = c("Single thread", "20 parallel threads"),
1567276131722:# 	values = c(1,2)
1567276131723:# ) +
1567276131723:labs(x = "DB Size (bp)",
1567276131724:y = "Useful Reads") +
1567276131724:publicationTheme()
1567276131725:+ theme(panel.grid.minor = element_blank())
1567276131726:)
1567276152141:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567276152141:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567276152142:geom_line(size = 1, color = "#444444") +
1567276152142:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567276152143:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567276152143:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567276152144:# scale_x_continuous(expand = c(0,0),
1567276152144:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567276152147:# 							limits = c(0, 1e+10)
1567276152148:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276152149:# ) +
1567276152149:scale_x_log10(expand = c(0,0),
1567276152150:breaks = c(1e+6, 1e+7, 1e+8,  1e+9),
1567276152151:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567276152151:limits = c(1e+6, 1e+10),
1567276152152:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9), expression(10^10))) +
1567276152153:scale_y_log10(expand = c(0,0),
1567276152153:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567276152154:limits = c(1e+3, 1e+7),
1567276152154:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276152157:) +
1567276152158:scale_fill_manual(values = customPalette
1567276152158:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567276152159:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567276152160:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567276152160:) +
1567276152161:# scale_linetype_manual(
1567276152161:# 	name = "Execution",
1567276152162:# 	labels = c("Single thread", "20 parallel threads"),
1567276152163:# 	values = c(1,2)
1567276152163:# ) +
1567276152164:labs(x = "DB Size (bp)",
1567276152165:y = "Useful Reads") +
1567276152165:publicationTheme()
1567276152166:+ theme(panel.grid.minor = element_blank())
1567276152167:)
1567276162647:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567276162648:# geom_hline(yintercept = timeGuides, size = lineSize/1.5, color = markColor) +
1567276162648:geom_line(size = 1, color = "#444444") +
1567276162649:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567276162649:# scale_color_manual(values = c("#9EC542", "#114A72"),
1567276162650:# scale_color_manual(values = rev(c('#e8702a', "#114A72")),
1567276162650:# scale_x_continuous(expand = c(0,0),
1567276162651:# # 							# breaks = c(1000, 10000, 100000, 1000000, 10000000),
1567276162651:# 							limits = c(0, 1e+10)
1567276162652:# # 							# labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276162652:# ) +
1567276162653:scale_x_log10(expand = c(0,0),
1567276162653:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567276162654:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567276162655:limits = c(1e+6, 1e+10),
1567276162655:labels = c(expression(10^6), expression(10^7), expression(10^8), expression(10^9), expression(10^10))) +
1567276162656:scale_y_log10(expand = c(0,0),
1567276162656:breaks = c(1e+3, 1e+4, 1e+5, 1e+6, 1e+7),
1567276162657:limits = c(1e+3, 1e+7),
1567276162658:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567276162658:) +
1567276162659:scale_fill_manual(values = customPalette
1567276162660:# # , labels = expression(italic("Campylobacter jejuni"), italic("Neisseria meningitidis (n=725)"))) +
1567276162660:# , labels = c(substitute(paste(italic("Campylobacter jejuni"), " (", italic(n), "=581)")),
1567276162661:# 						 substitute(paste(italic("Neisseria meningitidis"), " (", italic(n), "=725)")))
1567276162662:) +
1567276162662:# scale_linetype_manual(
1567276162663:# 	name = "Execution",
1567276162664:# 	labels = c("Single thread", "20 parallel threads"),
1567276162664:# 	values = c(1,2)
1567276162665:# ) +
1567276162665:labs(x = "DB Size (bp)",
1567276162666:y = "Useful Reads") +
1567276162666:publicationTheme()
1567276162667:+ theme(panel.grid.minor = element_blank())
1567276162668:)
1567276320152:dataToPlot
1567276406657:seq(5,9)
1567276529114:vapply(as.list(seq(5,9)), function(x){ expression(10^x) })
1567276674742:sapply(seq(5,9), function(x){ expression(10^x) })
1567276688368:lapply(seq(5,9), function(x){ expression(10^x) })
1567276755071:sapply(seq(5,9), function(x){ expression(10^x) }, simplify = "array")
1567276759492:lapply(seq(5,9), function(x){ expression(10^x) }, simplify = "array")
1567276800443:unlist(lapply(seq(5,9), function(x){ expression(10^x) }))
1567276806873:lapply(seq(5,9), function(x){ expression(10^x) })
1567276817407:as.vector(lapply(seq(5,9), function(x){ expression(10^x) }))
1567276828540:as.vector(lapply(seq(5,9), function(x){ expression(10^"x") }))
1567276851385:as.vector(lapply(seq(5,9), function(x){ paste0("expression(10^",x)) }))
1567276858821:as.vector(lapply(seq(5,9), function(x){ paste0("expression(10^",x) }))
1567276866581:as.vector(lapply(seq(5,9), function(x){ paste0("expression(10^",x,")") }))
1567276874075:unlist(lapply(seq(5,9), function(x){ paste0("expression(10^",x,")") }))
1567276903457:c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))
1567276918512:(sapply(seq(5,9), function(x){ paste0("expression(10^",x,")") }))
1567276964905:(sapply(seq(5,9), function(x){ expression(10^x)}))
1567277069691:y.labels <-  sapply(5:9, function(u) as.expression(bquote(10^.(u))))
1567277071622:y.labels
1567287128200:lim <- 5:9
1567287147159:lim <- 5:9
1567287150865:10^(lim)
1567287159430:y.labels
1567287231833:# Useful reads per DB ---------------------------------------------------------------
1567287231834:x_lim <- c(6,10)
1567287241366:10^(lim)
1567287258194:# Useful reads per DB ---------------------------------------------------------------
1567287258195:x_lim <- c(6,10)
1567287262589:10^(x_lim)
1567287319615:c(10^(x_lim))
1567287324933:as.vector(10^(x_lim))
1567287384041:10^(6:10)
1567287404545:c(1e+6, 1e+10)
1567287416686:# Useful reads per DB ---------------------------------------------------------------
1567287416687:x_lim <- c(6,10)
1567287441489:10^(x_lim)
1567287462103:10^(x_lim[1]:x_lim[2])
1567287503593:# Useful reads per DB ---------------------------------------------------------------
1567287503594:x_lim <- c(6,10)
1567287503985:y_lim <- c(3,7)
1567287514081:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567287523015:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567287567857:# Useful reads per DB ---------------------------------------------------------------
1567287567858:x_lim <- c(6,10)
1567287568075:y_lim <- c(3,7)
1567287568329:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567287568557:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567287569110:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287569111:geom_line(size = 1, color = "#444444") +
1567287569111:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567287569112:scale_x_log10(expand = c(0,0),
1567287569112:breaks = 10^(x_lim[1]:x_lim[2]),
1567287569113:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567287569113:limits = 10^(x_lim),
1567287569114:labels = x_labels) +
1567287569114:scale_y_log10(expand = c(0,0),
1567287569115:breaks = 10^(y_lim[1]:y_lim[2]),
1567287569115:limits = y_lim,
1567287569116:labels = y_labels
1567287569117:) +
1567287569117:scale_fill_manual(values = customPalette) +
1567287569118:labs(x = "DB Size (bp)",
1567287569119:y = "Useful Reads") +
1567287569119:publicationTheme()
1567287569120:+ theme(panel.grid.minor = element_blank())
1567287569122:)
1567287584671:10^(x_lim)
1567287591875:10^(x_lim[1]:x_lim[2])
1567287600141:x_labels
1567287623983:# Useful reads per DB ---------------------------------------------------------------
1567287623984:x_lim <- c(6:10)
1567287624400:y_lim <- c(3:7)
1567287624844:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567287625265:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567287641347:10^(x_lim)
1567287654723:10^(x_lim)
1567287692756:c(1,length(x_lim)-1)]
1567287694369:c(1,length(x_lim)-1)
1567287701057:c(1,length(x_lim))
1567287723230:x_lim[c(1,length(x_lim))]
1567287730055:# Useful reads per DB ---------------------------------------------------------------
1567287730055:x_lim <- c(6:10)
1567287730307:y_lim <- c(3:7)
1567287730699:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567287731081:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567287731592:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287731593:geom_line(size = 1, color = "#444444") +
1567287731593:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567287731594:scale_x_log10(expand = c(0,0),
1567287731594:breaks = 10^(x_lim),
1567287731595:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567287731596:limits = 10^(x_lim[c(1,length(x_lim))]),
1567287731596:labels = x_labels) +
1567287731597:scale_y_log10(expand = c(0,0),
1567287731598:breaks = 10^(y_lim[1]:y_lim[2]),
1567287731598:limits = y_lim,
1567287731599:labels = y_labels
1567287731600:) +
1567287731601:scale_fill_manual(values = customPalette) +
1567287731605:labs(x = "DB Size (bp)",
1567287731605:y = "Useful Reads") +
1567287731606:publicationTheme()
1567287731607:+ theme(panel.grid.minor = element_blank())
1567287731608:)
1567287744832:10^(x_lim[c(1,length(x_lim))]
1567287747357:)
1567287764893:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287764894:geom_line(size = 1, color = "#444444") +
1567287764894:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567287764895:scale_x_log10(expand = c(0,0),
1567287764895:breaks = 10^(x_lim),
1567287764896:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567287764897:limits = 10^(x_lim[c(1,length(x_lim))]),
1567287764897:labels = x_labels) +
1567287764898:scale_y_log10(expand = c(0,0),
1567287764898:breaks = 10^(y_lim[c(1,length(y_lim))]),
1567287764899:limits = y_lim,
1567287764900:labels = y_labels
1567287764900:) +
1567287764901:scale_fill_manual(values = customPalette) +
1567287764901:labs(x = "DB Size (bp)",
1567287764902:y = "Useful Reads") +
1567287764903:publicationTheme()
1567287764905:+ theme(panel.grid.minor = element_blank())
1567287764913:)
1567287777353:ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287777354:geom_line(size = 1, color = "#444444") +
1567287777407:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8)
1567287791584:ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287791585:geom_line(size = 1, color = "#444444") +
1567287791585:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567287791586:scale_x_log10(expand = c(0,0),
1567287791586:breaks = 10^(x_lim),
1567287791587:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567287791587:limits = 10^(x_lim[c(1,length(x_lim))]),
1567287791588:labels = x_labels)
1567287813407:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287813407:geom_line(size = 1, color = "#444444") +
1567287813408:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567287813409:scale_x_log10(expand = c(0,0),
1567287813409:breaks = 10^(x_lim),
1567287813410:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567287813411:limits = 10^(x_lim[c(1,length(x_lim))]),
1567287813411:labels = x_labels) +
1567287813412:scale_y_log10(expand = c(0,0),
1567287813412:breaks = 10^(y_lim),
1567287813413:limits = 10^(y_lim[c(1,length(y_lim))]),
1567287813414:labels = y_labels
1567287813414:) +
1567287813415:scale_fill_manual(values = customPalette) +
1567287813415:labs(x = "DB Size (bp)",
1567287813416:y = "Useful Reads") +
1567287813417:publicationTheme()
1567287813419:+ theme(panel.grid.minor = element_blank())
1567287813419:)
1567287847534:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567287847535:geom_line(size = 1, color = "#666666") +
1567287847535:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567287847535:scale_x_log10(expand = c(0,0),
1567287847536:breaks = 10^(x_lim),
1567287847536:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567287847536:limits = 10^(x_lim[c(1,length(x_lim))]),
1567287847537:labels = x_labels) +
1567287847537:scale_y_log10(expand = c(0,0),
1567287847537:breaks = 10^(y_lim),
1567287847538:limits = 10^(y_lim[c(1,length(y_lim))]),
1567287847538:labels = y_labels
1567287847539:) +
1567287847539:scale_fill_manual(values = customPalette) +
1567287847540:labs(x = "DB Size (bp)",
1567287847540:y = "Useful Reads") +
1567287847540:publicationTheme()
1567287847541:+ theme(panel.grid.minor = element_blank())
1567287847541:)
1567287911253:# SChem DB Size Plot ------------------------------------------------
1567287911253:y_lim <- c(0:10)
1567287912539:y_lim
1567287924722:# SChem DB Size Plot ------------------------------------------------
1567287924722:y_lim <- c(1:10)
1567287934140:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567287935876:y_labels
1567288144437:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567288146577:y_labels
1567288162190:# SChem DB Size Plot ------------------------------------------------
1567288162191:y_lim    <- seq(1,9, by = 3)
1567288163956:y_lim
1567288181078:# SChem DB Size Plot ------------------------------------------------
1567288181078:y_lim    <- seq(1,9, by = 2)
1567288182926:y_lim
1567288262576:(dbSizePlot <-
1567288262577:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288262577:fill = Scheme)) +
1567288262578:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288262579:stat  = "identity",
1567288262579:position = position_dodge(width=0.9)
1567288262580:, show.legend = F
1567288262580:) +
1567288262581:scale_y_log10(expand = c(0,0),
1567288262581:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288262582:limits = c(1, 1e+9),
1567288262583:labels = sapply(c(1, 1e+3, 1e+6, 1e+9), function(u) as.expression(bquote(10^.(u))))) +
1567288262583:scale_fill_manual(values = rev(customPalette),
1567288262584:# labels = typeLabels,
1567288262585:name   = "Scheme"
1567288262591:) +
1567288262592:labs(x = "Scheme",
1567288262592:y = "DB Size (bp)") +
1567288262593:publicationTheme() +
1567288262594:barPlotCustomsVertical +
1567288262594:theme (axis.text.y = element_text(family = baseFontFamily))
1567288262595:)
1567288270989:(dbSizePlot <-
1567288270990:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288270990:fill = Scheme)) +
1567288270991:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288270991:stat  = "identity",
1567288270992:position = position_dodge(width=0.9)
1567288270992:, show.legend = F
1567288270992:) +
1567288270993:scale_y_log10(expand = c(0,0),
1567288270993:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288270993:limits = c(1, 1e+10),
1567288270994:labels = sapply(c(1, 1e+3, 1e+6, 1e+9), function(u) as.expression(bquote(10^.(u))))) +
1567288270994:scale_fill_manual(values = rev(customPalette),
1567288270995:# labels = typeLabels,
1567288270996:name   = "Scheme"
1567288270996:) +
1567288270996:labs(x = "Scheme",
1567288270997:y = "DB Size (bp)") +
1567288270997:publicationTheme() +
1567288270998:barPlotCustomsVertical +
1567288270998:theme (axis.text.y = element_text(family = baseFontFamily))
1567288270998:)
1567288288545:(dbSizePlot <-
1567288288545:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288288546:fill = Scheme)) +
1567288288546:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288288547:stat  = "identity",
1567288288548:position = position_dodge(width=0.9)
1567288288548:, show.legend = F
1567288288549:) +
1567288288550:scale_y_log10(expand = c(0,0),
1567288288550:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288288551:limits = c(1, 1e+10),
1567288288552:labels = sapply(c(1, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))) +
1567288288552:scale_fill_manual(values = rev(customPalette),
1567288288553:# labels = typeLabels,
1567288288554:name   = "Scheme"
1567288288554:) +
1567288288555:labs(x = "Scheme",
1567288288556:y = "DB Size (bp)") +
1567288288556:publicationTheme() +
1567288288557:barPlotCustomsVertical +
1567288288558:theme (axis.text.y = element_text(family = baseFontFamily))
1567288288559:)
1567288318715:(dbSizePlot <-
1567288318716:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288318716:fill = Scheme)) +
1567288318716:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288318717:stat  = "identity",
1567288318717:position = position_dodge(width=0.9)
1567288318717:, show.legend = F
1567288318718:) +
1567288318718:# scale_y_log10(expand = c(0,0),
1567288318718:# 							breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288318719:# 							limits = c(1, 1e+10),
1567288318719:# 							labels = sapply(c(1, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))) +
1567288318719:scale_fill_manual(values = rev(customPalette),
1567288318720:# labels = typeLabels,
1567288318720:name   = "Scheme"
1567288318720:) +
1567288318721:labs(x = "Scheme",
1567288318721:y = "DB Size (bp)") +
1567288318721:publicationTheme() +
1567288318722:barPlotCustomsVertical +
1567288318722:theme (axis.text.y = element_text(family = baseFontFamily))
1567288318722:)
1567288341942:(dbSizePlot <-
1567288341943:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288341943:fill = Scheme)) +
1567288341944:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288341944:stat  = "identity",
1567288341945:position = position_dodge(width=0.9)
1567288341945:, show.legend = F
1567288341946:) +
1567288341946:scale_y_log10(expand = c(0,0)#,
1567288341947:# 							breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288341947:# 							limits = c(1, 1e+10),
1567288341948:# 							labels = sapply(c(1, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288341948:) +
1567288341949:scale_fill_manual(values = rev(customPalette),
1567288341950:# labels = typeLabels,
1567288341950:name   = "Scheme"
1567288341951:) +
1567288341951:labs(x = "Scheme",
1567288341952:y = "DB Size (bp)") +
1567288341952:publicationTheme() +
1567288341953:barPlotCustomsVertical +
1567288341954:theme (axis.text.y = element_text(family = baseFontFamily))
1567288341954:)
1567288351332:1e+0
1567288395248:(dbSizePlot <-
1567288395249:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288395249:fill = Scheme)) +
1567288395250:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288395250:stat  = "identity",
1567288395251:position = position_dodge(width=0.9)
1567288395251:, show.legend = F
1567288395251:) +
1567288395252:scale_y_log10(expand = c(0,0),
1567288395252:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288395253:limits = c(1, 1e+(*1.20)),
1567288395254:labels = sapply(c(0, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288395263:) +
1567288395263:scale_fill_manual(values = rev(customPalette),
1567288395263:# labels = typeLabels,
1567288395264:name   = "Scheme"
1567288395264:) +
1567288395264:labs(x = "Scheme",
1567288395264:y = "DB Size (bp)") +
1567288395265:publicationTheme() +
1567288395265:barPlotCustomsVertical +
1567288395265:theme (axis.text.y = element_text(family = baseFontFamily))
1567288395268:)
1567288417372:(dbSizePlot <-
1567288417372:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288417373:fill = Scheme)) +
1567288417374:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288417374:stat  = "identity",
1567288417375:position = position_dodge(width=0.9)
1567288417375:, show.legend = F
1567288417376:) +
1567288417377:scale_y_log10(expand = c(0,0),
1567288417377:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288417378:limits = c(1, 1e+9*1.20),
1567288417378:labels = sapply(c(0, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288417379:) +
1567288417380:scale_fill_manual(values = rev(customPalette),
1567288417380:# labels = typeLabels,
1567288417381:name   = "Scheme"
1567288417382:) +
1567288417382:labs(x = "Scheme",
1567288417385:y = "DB Size (bp)") +
1567288417386:publicationTheme() +
1567288417386:barPlotCustomsVertical +
1567288417387:theme (axis.text.y = element_text(family = baseFontFamily))
1567288417387:)
1567288424739:(dbSizePlot <-
1567288424739:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288424740:fill = Scheme)) +
1567288424740:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288424741:stat  = "identity",
1567288424741:position = position_dodge(width=0.9)
1567288424742:, show.legend = F
1567288424742:) +
1567288424743:scale_y_log10(expand = c(0,0),
1567288424743:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288424744:limits = c(1, 1e+9*1.5),
1567288424744:labels = sapply(c(0, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288424745:) +
1567288424746:scale_fill_manual(values = rev(customPalette),
1567288424746:# labels = typeLabels,
1567288424747:name   = "Scheme"
1567288424748:) +
1567288424748:labs(x = "Scheme",
1567288424753:y = "DB Size (bp)") +
1567288424753:publicationTheme() +
1567288424754:barPlotCustomsVertical +
1567288424755:theme (axis.text.y = element_text(family = baseFontFamily))
1567288424755:)
1567288432855:(dbSizePlot <-
1567288432856:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288432856:fill = Scheme)) +
1567288432857:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288432858:stat  = "identity",
1567288432858:position = position_dodge(width=0.9)
1567288432859:, show.legend = F
1567288432859:) +
1567288432860:scale_y_log10(expand = c(0,0),
1567288432860:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288432861:limits = c(1, 1e+9*1.8),
1567288432862:labels = sapply(c(0, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288432862:) +
1567288432863:scale_fill_manual(values = rev(customPalette),
1567288432864:# labels = typeLabels,
1567288432865:name   = "Scheme"
1567288432868:) +
1567288432869:labs(x = "Scheme",
1567288432871:y = "DB Size (bp)") +
1567288432872:publicationTheme() +
1567288432872:barPlotCustomsVertical +
1567288432873:theme (axis.text.y = element_text(family = baseFontFamily))
1567288432874:)
1567288466538:(dbSizePlot <-
1567288466538:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288466538:fill = Scheme)) +
1567288466539:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288466540:stat  = "identity",
1567288466540:position = position_dodge(width=0.9)
1567288466540:, show.legend = F
1567288466541:) +
1567288466541:scale_y_log10(expand = c(0,0),
1567288466541:breaks = c(0, 1e+3, 1e+6, 1e+9),
1567288466542:limits = c(0, 1e+9*1.8),
1567288466542:labels = sapply(c(0, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288466542:) +
1567288466543:scale_fill_manual(values = rev(customPalette),
1567288466543:# labels = typeLabels,
1567288466543:name   = "Scheme"
1567288466544:) +
1567288466544:labs(x = "Scheme",
1567288466545:y = "DB Size (bp)") +
1567288466545:publicationTheme() +
1567288466546:barPlotCustomsVertical +
1567288466547:theme (axis.text.y = element_text(family = baseFontFamily))
1567288466547:)
1567288479453:(dbSizePlot <-
1567288479454:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288479455:fill = Scheme)) +
1567288479455:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288479456:stat  = "identity",
1567288479457:position = position_dodge(width=0.9)
1567288479457:, show.legend = F
1567288479458:) +
1567288479458:scale_y_log10(expand = c(0,0),
1567288479459:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288479459:limits = c(1, 1e+9*1.8),
1567288479460:labels = sapply(c(0, 3, 6, 9), function(u) as.expression(bquote(10^.(u))))
1567288479461:) +
1567288479461:scale_fill_manual(values = rev(customPalette),
1567288479462:# labels = typeLabels,
1567288479462:name   = "Scheme"
1567288479463:) +
1567288479467:labs(x = "Scheme",
1567288479468:y = "DB Size (bp)") +
1567288479469:publicationTheme() +
1567288479469:barPlotCustomsVertical +
1567288479470:theme (axis.text.y = element_text(family = baseFontFamily))
1567288479471:)
1567288511909:(dbSizePlot <-
1567288511910:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567288511911:fill = Scheme)) +
1567288511911:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567288511912:stat  = "identity",
1567288511912:position = position_dodge(width=0.9)
1567288511913:, show.legend = F
1567288511913:) +
1567288511914:scale_y_log10(expand = c(0,0),
1567288511915:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567288511915:limits = c(1, 1e+9*1.8),
1567288511916:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567288511917:) +
1567288511917:scale_fill_manual(values = rev(customPalette),
1567288511918:# labels = typeLabels,
1567288511918:name   = "Scheme"
1567288511919:) +
1567288511920:labs(x = "Scheme",
1567288511921:y = "DB Size (bp)") +
1567288511921:publicationTheme() +
1567288511922:barPlotCustomsVertical +
1567288511923:theme (axis.text.y = element_text(family = baseFontFamily))
1567288511923:)
1567288530131:# Useful reads per DB ---------------------------------------------------------------
1567288530132:x_lim <- c(6:10)
1567288531522:y_lim <- c(3:7)
1567288531903:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567288532197:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567288532586:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288532586:geom_line(size = 1, color = "#666666") +
1567288532587:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288532587:scale_x_log10(expand = c(0,0),
1567288532588:breaks = 10^(x_lim),
1567288532588:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288532588:limits = 10^(x_lim[c(1,length(x_lim))]),
1567288532589:labels = x_labels) +
1567288532590:scale_y_log10(expand = c(0,0),
1567288532590:breaks = 10^(y_lim),
1567288532591:limits = 10^(y_lim[c(1,length(y_lim))]),
1567288532591:labels = y_labels
1567288532592:) +
1567288532592:scale_fill_manual(values = customPalette) +
1567288532593:labs(x = "DB Size (bp)",
1567288532593:y = "Useful Reads") +
1567288532594:publicationTheme()
1567288532595:+ theme(panel.grid.minor = element_blank())
1567288532595:)
1567288547177:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288547177:geom_line(size = 1, color = "#666666") +
1567288547178:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288547178:scale_x_log10(expand = c(0,0),
1567288547179:breaks = 10^(x_lim),
1567288547180:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288547180:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288547181:labels = x_labels) +
1567288547181:scale_y_log10(expand = c(0,0),
1567288547182:breaks = 10^(y_lim),
1567288547183:limits = 10^(y_lim[c(1,length(y_lim))]),
1567288547183:labels = y_labels
1567288547184:) +
1567288547185:scale_fill_manual(values = customPalette) +
1567288547185:labs(x = "DB Size (bp)",
1567288547186:y = "Useful Reads") +
1567288547187:publicationTheme()
1567288547187:+ theme(panel.grid.minor = element_blank())
1567288547188:)
1567288573686:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288573687:geom_line(size = 1, color = "#666666") +
1567288573688:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288573689:scale_x_log10(expand = c(0,0),
1567288573689:breaks = 10^(x_lim),
1567288573689:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288573690:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288573690:labels = x_labels) +
1567288573690:scale_y_log10(expand = c(0,0),
1567288573691:breaks = 10^(y_lim),
1567288573691:# limits = 10^(y_lim[c(1,length(y_lim))]),
1567288573691:limits = c(1e+6, max(dataToPlot$Reads)*1.6),
1567288573692:labels = y_labels
1567288573692:) +
1567288573693:scale_fill_manual(values = customPalette) +
1567288573693:labs(x = "DB Size (bp)",
1567288573693:y = "Useful Reads") +
1567288573694:publicationTheme()
1567288573694:+ theme(panel.grid.minor = element_blank())
1567288573695:)
1567288581294:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288581295:geom_line(size = 1, color = "#666666") +
1567288581295:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288581296:scale_x_log10(expand = c(0,0),
1567288581297:breaks = 10^(x_lim),
1567288581297:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288581298:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288581298:labels = x_labels) +
1567288581299:scale_y_log10(expand = c(0,0),
1567288581300:breaks = 10^(y_lim),
1567288581300:# limits = 10^(y_lim[c(1,length(y_lim))]),
1567288581301:limits = c(1e+6, max(dataToPlot$Reads)*1.9),
1567288581302:labels = y_labels
1567288581302:) +
1567288581303:scale_fill_manual(values = customPalette) +
1567288581303:labs(x = "DB Size (bp)",
1567288581304:y = "Useful Reads") +
1567288581305:publicationTheme()
1567288581305:+ theme(panel.grid.minor = element_blank())
1567288581306:)
1567288608704:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288608704:geom_line(size = 1, color = "#666666") +
1567288608705:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288608705:scale_x_log10(expand = c(0,0),
1567288608706:breaks = 10^(x_lim),
1567288608706:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288608707:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288608708:labels = x_labels) +
1567288608708:scale_y_log10(expand = c(0,0),
1567288608709:breaks = 10^(y_lim),
1567288608709:limits = 10^(y_lim[c(1,length(y_lim))]),
1567288608710:labels = y_labels
1567288608712:) +
1567288608713:scale_fill_manual(values = customPalette) +
1567288608714:labs(x = "DB Size (bp)",
1567288608715:y = "Useful Reads") +
1567288608716:publicationTheme()
1567288608716:+ theme(panel.grid.minor = element_blank())
1567288608717:)
1567288644222:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288644222:geom_line(size = 1, color = "#666666") +
1567288644223:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288644224:scale_x_log10(expand = c(0,0),
1567288644224:breaks = 10^(x_lim),
1567288644225:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288644225:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288644226:labels = x_labels) +
1567288644227:scale_y_log10(expand = c(0,0),
1567288644227:breaks = 10^(y_lim),
1567288644228:limits = 10^(y_lim[c(1,length(y_lim))]),
1567288644229:labels = y_labels
1567288644229:) +
1567288644230:scale_fill_manual(values = customPalette) +
1567288644231:labs(x = "DB Size (bp)",
1567288644231:y = "Useful Reads") +
1567288644232:publicationTheme()
1567288644234:+ theme(panel.grid.minor = element_blank())
1567288644235:)
1567288655827:y_lim <- c(3:6)
1567288656256:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567288656520:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567288656684:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288656684:geom_line(size = 1, color = "#666666") +
1567288656685:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288656685:scale_x_log10(expand = c(0,0),
1567288656685:breaks = 10^(x_lim),
1567288656686:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288656686:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288656687:labels = x_labels) +
1567288656687:scale_y_log10(expand = c(0,0),
1567288656688:breaks = 10^(y_lim),
1567288656688:limits = 10^(y_lim[c(1,length(y_lim))]),
1567288656689:labels = y_labels
1567288656690:) +
1567288656690:scale_fill_manual(values = customPalette) +
1567288656691:labs(x = "DB Size (bp)",
1567288656691:y = "Useful Reads") +
1567288656692:publicationTheme()
1567288656692:+ theme(panel.grid.minor = element_blank())
1567288656693:)
1567288720736:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288720737:geom_line(size = 1, color = "#666666") +
1567288720738:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288720738:scale_x_log10(expand = c(0,0),
1567288720739:breaks = 10^(x_lim),
1567288720739:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288720740:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288720740:labels = x_labels) +
1567288720741:scale_y_log10(expand = c(0,0),
1567288720741:breaks = 10^(y_lim),
1567288720742:limits = c(1e+3, 1e-6*1.6),
1567288720742:labels = y_labels
1567288720743:) +
1567288720743:scale_fill_manual(values = customPalette) +
1567288720744:labs(x = "DB Size (bp)",
1567288720744:y = "Useful Reads") +
1567288720745:publicationTheme()
1567288720745:+ theme(panel.grid.minor = element_blank())
1567288720746:)
1567288732453:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288732454:geom_line(size = 1, color = "#666666") +
1567288732454:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288732455:scale_x_log10(expand = c(0,0),
1567288732455:breaks = 10^(x_lim),
1567288732456:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288732457:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288732457:labels = x_labels) +
1567288732458:scale_y_log10(expand = c(0,0),
1567288732459:breaks = 10^(y_lim),
1567288732459:limits = c(1e+3, 1e-6*1.8),
1567288732460:labels = y_labels
1567288732460:) +
1567288732461:scale_fill_manual(values = customPalette) +
1567288732462:labs(x = "DB Size (bp)",
1567288732462:y = "Useful Reads") +
1567288732463:publicationTheme()
1567288732464:+ theme(panel.grid.minor = element_blank())
1567288732464:)
1567288742875:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288742875:geom_line(size = 1, color = "#666666") +
1567288742876:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288742876:scale_x_log10(expand = c(0,0),
1567288742877:breaks = 10^(x_lim),
1567288742877:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288742878:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288742878:labels = x_labels) +
1567288742879:scale_y_log10(expand = c(0,0),
1567288742879:breaks = 10^(y_lim),
1567288742880:limits = c(1e+3, 1e-7),
1567288742881:labels = y_labels
1567288742882:) +
1567288742882:scale_fill_manual(values = customPalette) +
1567288742883:labs(x = "DB Size (bp)",
1567288742883:y = "Useful Reads") +
1567288742886:publicationTheme()
1567288742887:+ theme(panel.grid.minor = element_blank())
1567288742888:)
1567288760788:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288760788:geom_line(size = 1, color = "#666666") +
1567288760788:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288760789:scale_x_log10(expand = c(0,0),
1567288760789:breaks = 10^(x_lim),
1567288760790:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288760790:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288760790:labels = x_labels) +
1567288760791:scale_y_log10(expand = c(0,0),
1567288760791:breaks = 10^(y_lim),
1567288760792:limits = c(1e+3, 1e+7),
1567288760792:labels = y_labels
1567288760792:) +
1567288760793:scale_fill_manual(values = customPalette) +
1567288760793:labs(x = "DB Size (bp)",
1567288760794:y = "Useful Reads") +
1567288760794:publicationTheme()
1567288760794:+ theme(panel.grid.minor = element_blank())
1567288760795:)
1567288769185:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288769185:geom_line(size = 1, color = "#666666") +
1567288769186:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288769186:scale_x_log10(expand = c(0,0),
1567288769187:breaks = 10^(x_lim),
1567288769187:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288769188:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288769188:labels = x_labels) +
1567288769189:scale_y_log10(expand = c(0,0),
1567288769189:breaks = 10^(y_lim),
1567288769190:limits = c(1e+3, 1e+6*1.5),
1567288769190:labels = y_labels
1567288769191:) +
1567288769191:scale_fill_manual(values = customPalette) +
1567288769192:labs(x = "DB Size (bp)",
1567288769193:y = "Useful Reads") +
1567288769194:publicationTheme()
1567288769195:+ theme(panel.grid.minor = element_blank())
1567288769195:)
1567288774424:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288774425:geom_line(size = 1, color = "#666666") +
1567288774425:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288774425:scale_x_log10(expand = c(0,0),
1567288774426:breaks = 10^(x_lim),
1567288774426:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288774426:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288774427:labels = x_labels) +
1567288774427:scale_y_log10(expand = c(0,0),
1567288774427:breaks = 10^(y_lim),
1567288774428:limits = c(1e+3, 1e+6*1.8),
1567288774428:labels = y_labels
1567288774429:) +
1567288774429:scale_fill_manual(values = customPalette) +
1567288774429:labs(x = "DB Size (bp)",
1567288774430:y = "Useful Reads") +
1567288774430:publicationTheme()
1567288774430:+ theme(panel.grid.minor = element_blank())
1567288774431:)
1567288785679:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288785679:geom_line(size = 1, color = "#666666") +
1567288785680:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288785680:scale_x_log10(expand = c(0,0),
1567288785681:breaks = 10^(x_lim),
1567288785681:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288785681:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288785682:labels = x_labels) +
1567288785682:scale_y_log10(expand = c(0,0),
1567288785683:breaks = 10^(y_lim),
1567288785683:limits = c(1e+3, 1e+6*1.9),
1567288785684:labels = y_labels
1567288785684:) +
1567288785684:scale_fill_manual(values = customPalette) +
1567288785685:labs(x = "DB Size (bp)",
1567288785685:y = "Useful Reads") +
1567288785685:publicationTheme()
1567288785686:+ theme(panel.grid.minor = element_blank())
1567288785686:)
1567288799163:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288799163:geom_line(size = 1, color = "#666666") +
1567288799164:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288799164:scale_x_log10(expand = c(0,0),
1567288799164:breaks = 10^(x_lim),
1567288799165:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288799165:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288799165:labels = x_labels) +
1567288799166:scale_y_log10(expand = c(0,0),
1567288799166:breaks = 10^(y_lim),
1567288799166:limits = c(1e+3, 1e+7),
1567288799167:labels = y_labels
1567288799169:) +
1567288799170:scale_fill_manual(values = customPalette) +
1567288799170:labs(x = "DB Size (bp)",
1567288799171:y = "Useful Reads") +
1567288799172:publicationTheme()
1567288799172:+ theme(panel.grid.minor = element_blank())
1567288799173:)
1567288827983:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288827984:geom_line(size = 1, color = "#666666") +
1567288827984:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288827985:scale_x_log10(expand = c(0,0),
1567288827986:breaks = 10^(x_lim),
1567288827986:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288827987:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288827987:labels = x_labels) +
1567288827988:scale_y_log10(expand = c(0,0),
1567288827988:breaks = 10^(y_lim),
1567288827988:limits = c(1e+3, 1e+6*2),
1567288827989:labels = y_labels
1567288827989:) +
1567288827990:scale_fill_manual(values = customPalette) +
1567288827991:labs(x = "DB Size (bp)",
1567288827991:y = "Useful Reads") +
1567288827992:publicationTheme()
1567288827993:+ theme(panel.grid.minor = element_blank())
1567288827993:)
1567288834270:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288834271:geom_line(size = 1, color = "#666666") +
1567288834271:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288834272:scale_x_log10(expand = c(0,0),
1567288834272:breaks = 10^(x_lim),
1567288834273:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288834274:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288834274:labels = x_labels) +
1567288834275:scale_y_log10(expand = c(0,0),
1567288834275:breaks = 10^(y_lim),
1567288834276:limits = c(1e+3, 1e+6*7),
1567288834276:labels = y_labels
1567288834277:) +
1567288834277:scale_fill_manual(values = customPalette) +
1567288834277:labs(x = "DB Size (bp)",
1567288834278:y = "Useful Reads") +
1567288834278:publicationTheme()
1567288834279:+ theme(panel.grid.minor = element_blank())
1567288834279:)
1567288848211:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288848211:geom_line(size = 1, color = "#666666") +
1567288848212:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288848212:scale_x_log10(expand = c(0,0),
1567288848213:breaks = 10^(x_lim),
1567288848213:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288848214:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288848214:labels = x_labels) +
1567288848215:scale_y_log10(expand = c(0,0),
1567288848215:breaks = 10^(y_lim),
1567288848216:limits = c(1e+3, 1e+7),
1567288848216:labels = y_labels
1567288848217:) +
1567288848217:scale_fill_manual(values = customPalette) +
1567288848218:labs(x = "DB Size (bp)",
1567288848218:y = "Useful Reads") +
1567288848219:publicationTheme()
1567288848219:+ theme(panel.grid.minor = element_blank())
1567288848221:)
1567288851596:y_lim <- c(3:7)
1567288852636:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567288852847:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567288852958:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288852958:geom_line(size = 1, color = "#666666") +
1567288852959:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288852960:scale_x_log10(expand = c(0,0),
1567288852960:breaks = 10^(x_lim),
1567288852961:limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288852962:# limits = 10^(x_lim[c(1,length(x_lim))]),
1567288852963:labels = x_labels) +
1567288852963:scale_y_log10(expand = c(0,0),
1567288852964:breaks = 10^(y_lim),
1567288852965:limits = c(1e+3, 1e+7),
1567288852965:labels = y_labels
1567288852966:) +
1567288852967:scale_fill_manual(values = customPalette) +
1567288852967:labs(x = "DB Size (bp)",
1567288852967:y = "Useful Reads") +
1567288852972:publicationTheme()
1567288852973:+ theme(panel.grid.minor = element_blank())
1567288852973:)
1567288853759:# Processed k-mers per DB ---------------------------------------------------------------
1567288853760:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567288853760:geom_line(size = 1, color = "#444444") +
1567288853761:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288853761:scale_x_log10(expand = c(0,0),
1567288853762:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567288853762:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288853763:limits = c(1e+6, 1e+10),
1567288853763:labels = c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567288853764:scale_y_log10(expand = c(0,0),
1567288853764:breaks = c(1e+5, 1e+6, 1e+7, 1e+8, 1e+9),
1567288853765:limits = c(1e+5, 1e+9),
1567288853765:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567288853766:) +
1567288853766:scale_fill_manual(values = customPalette) +
1567288853767:labs(x = "DB Size (bp)",
1567288853768:y = "Useful Reads") +
1567288853768:publicationTheme()
1567288853769:+ theme(panel.grid.minor = element_blank())
1567288853770:)
1567288871373:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567288871373:geom_line(size = 1, color = "#666666") +
1567288871374:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288871374:scale_x_log10(expand = c(0,0),
1567288871375:breaks = 10^(x_lim),
1567288871377:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288871377:limits = 10^(x_lim[c(1,length(x_lim))]),
1567288871378:labels = x_labels) +
1567288871378:scale_y_log10(expand = c(0,0),
1567288871379:breaks = 10^(y_lim),
1567288871379:limits = c(1e+3, 1e+7),
1567288871380:labels = y_labels
1567288871380:) +
1567288871380:scale_fill_manual(values = customPalette) +
1567288871381:labs(x = "DB Size (bp)",
1567288871381:y = "Useful Reads") +
1567288871382:publicationTheme()
1567288871382:+ theme(panel.grid.minor = element_blank())
1567288871382:)
1567288889335:# Processed k-mers per DB ---------------------------------------------------------------
1567288889335:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567288889336:geom_line(size = 1, color = "#444444") +
1567288889336:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288889336:scale_x_log10(expand = c(0,0),
1567288889337:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567288889337:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288889337:limits = c(1e+6, 1e+10),
1567288889338:labels = c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567288889338:scale_y_log10(expand = c(0,0),
1567288889339:breaks = c(1e+5, 1e+6, 1e+7, 1e+8, 1e+9),
1567288889339:limits = c(1e+5, 1e+9),
1567288889339:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567288889340:) +
1567288889340:scale_fill_manual(values = customPalette) +
1567288889341:labs(x = "DB Size (bp)",
1567288889341:y = "Useful Reads") +
1567288889341:publicationTheme()
1567288889342:+ theme(panel.grid.minor = element_blank())
1567288889342:)
1567288996176:# Processed k-mers per DB ---------------------------------------------------------------
1567288996176:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567288996177:geom_line(size = 1, color = "#444444") +
1567288996177:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567288996178:scale_x_log10(expand = c(0,0),
1567288996179:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567288996179:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567288996180:limits = c(1e+6, 1e+10),
1567288996180:labels = c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567288996181:scale_y_log10(expand = c(0,0),
1567288996181:breaks = c(1e+5, 1e+6, 1e+7, 1e+8, 1e+9),
1567288996182:limits = c(1e+5, 1e+9),
1567288996183:labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567288996183:) +
1567288996184:scale_fill_manual(values = customPalette) +
1567288996185:labs(x = "DB Size (bp)",
1567288996186:y = "Processed k-mers") +
1567288996186:publicationTheme()
1567288996187:+ theme(panel.grid.minor = element_blank())
1567288996188:)
1567289099497:# Processed k-mers per DB ---------------------------------------------------------------
1567289099498:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289099498:geom_line(size = 1, color = "#444444") +
1567289099499:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289099499:scale_x_log10(expand = c(0,0),
1567289099500:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567289099500:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289099501:limits = c(1e+6, 1e+10),
1567289099502:labels = c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567289099502:# scale_y_log10(expand = c(0,0),
1567289099503:# 							breaks = c(1e+5, 1e+6, 1e+7, 1e+8, 1e+9),
1567289099503:# 							limits = c(1e+5, 1e+9),
1567289099504:# 							labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567289099505:# ) +
1567289099505:scale_fill_manual(values = customPalette) +
1567289099506:labs(x = "DB Size (bp)",
1567289099506:y = "Processed k-mers") +
1567289099507:publicationTheme()
1567289099507:+ theme(panel.grid.minor = element_blank())
1567289099508:)
1567289114334:# Processed k-mers per DB ---------------------------------------------------------------
1567289114334:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289114335:geom_line(size = 1, color = "#444444") +
1567289114335:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289114336:scale_x_log10(expand = c(0,0),
1567289114336:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567289114337:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289114338:limits = c(1e+6, 1e+10),
1567289114338:labels = c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567289114339:scale_y_log10(expand = c(0,0)#,
1567289114340:# breaks = c(1e+5, 1e+6, 1e+7, 1e+8, 1e+9),
1567289114340:# 							limits = c(1e+5, 1e+9),
1567289114341:# 							labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567289114342:) +
1567289114346:scale_fill_manual(values = customPalette) +
1567289114348:labs(x = "DB Size (bp)",
1567289114348:y = "Processed k-mers") +
1567289114349:publicationTheme()
1567289114349:+ theme(panel.grid.minor = element_blank())
1567289114351:)
1567289172704:# Processed k-mers per DB ---------------------------------------------------------------
1567289172705:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289172705:geom_line(size = 1, color = "#444444") +
1567289172705:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289172706:scale_x_log10(expand = c(0,0),
1567289172706:breaks = c(1e+6, 1e+7, 1e+8,  1e+9, 1e+10),
1567289172707:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289172707:limits = c(1e+6, 1e+10),
1567289172708:labels = c(expression(10^5), expression(10^6), expression(10^7), expression(10^8), expression(10^9))) +
1567289172709:scale_y_log10(expand = c(0,0),
1567289172709:breaks = c(1e+5, 1e+6, 1e+7, 1e+8, 1e+9),
1567289172710:# 							limits = c(1e+5, 1e+9),
1567289172710:# 							labels = c( expression(10^3), expression(10^4), expression(10^5), expression(10^6), expression(10^7))
1567289172711:) +
1567289172711:scale_fill_manual(values = customPalette) +
1567289172711:labs(x = "DB Size (bp)",
1567289172712:y = "Processed k-mers") +
1567289172712:publicationTheme()
1567289172713:+ theme(panel.grid.minor = element_blank())
1567289172713:)
1567289253153:# Processed k-mers per DB ---------------------------------------------------------------
1567289253153:x_lim <- c(6:9)
1567289253374:y_lim <- c(5:9)
1567289253614:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289253850:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289254198:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processsed_kmers)) +
1567289254198:geom_line(size = 1, color = "#666666") +
1567289254199:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289254199:scale_x_log10(expand = c(0,0),
1567289254199:breaks = 10^(x_lim),
1567289254200:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289254200:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289254201:labels = x_labels) +
1567289254201:scale_y_log10(expand = c(0,0),
1567289254201:breaks = 10^(y_lim),
1567289254202:limits = 10^(y_lim[c(1,length(y_lim))]),
1567289254202:labels = y_labels
1567289254203:) +
1567289254203:scale_fill_manual(values = customPalette) +
1567289254203:labs(x = "DB Size (bp)",
1567289254204:y = "Useful Reads") +
1567289254204:publicationTheme()
1567289254205:+ theme(panel.grid.minor = element_blank())
1567289254205:)
1567289261279:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289261280:geom_line(size = 1, color = "#666666") +
1567289261280:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289261281:scale_x_log10(expand = c(0,0),
1567289261281:breaks = 10^(x_lim),
1567289261282:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289261283:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289261283:labels = x_labels) +
1567289261284:scale_y_log10(expand = c(0,0),
1567289261284:breaks = 10^(y_lim),
1567289261285:limits = 10^(y_lim[c(1,length(y_lim))]),
1567289261285:labels = y_labels
1567289261286:) +
1567289261286:scale_fill_manual(values = customPalette) +
1567289261287:labs(x = "DB Size (bp)",
1567289261288:y = "Useful Reads") +
1567289261288:publicationTheme()
1567289261289:+ theme(panel.grid.minor = element_blank())
1567289261302:)
1567289274975:# scale_y_log10(expand = c(0,0),
1567289274975:# 							breaks = 10^(y_lim),
1567289274976:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567289274976:# 							labels = y_labels
1567289274977:# ) +
1567289276974:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289276975:geom_line(size = 1, color = "#666666") +
1567289276975:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289276976:scale_x_log10(expand = c(0,0),
1567289276976:breaks = 10^(x_lim),
1567289276977:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289276977:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289276978:labels = x_labels) +
1567289276978:# scale_y_log10(expand = c(0,0),
1567289276979:# 							breaks = 10^(y_lim),
1567289276979:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567289276980:# 							labels = y_labels
1567289276980:# ) +
1567289276981:scale_fill_manual(values = customPalette) +
1567289276981:labs(x = "DB Size (bp)",
1567289276982:y = "Useful Reads") +
1567289276982:publicationTheme()
1567289276989:+ theme(panel.grid.minor = element_blank())
1567289276990:)
1567289304693:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567289304693:geom_line(size = 1, color = "#666666") +
1567289304694:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289304695:scale_x_log10(expand = c(0,0),
1567289304695:breaks = 10^(x_lim),
1567289304696:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289304696:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289304697:labels = x_labels) +
1567289304697:scale_y_log10(expand = c(0,0),
1567289304698:breaks = 10^(y_lim),
1567289304699:limits = c(1e+3, 1e+7),
1567289304699:labels = y_labels
1567289304700:) +
1567289304700:scale_fill_manual(values = customPalette) +
1567289304701:labs(x = "DB Size (bp)",
1567289304702:y = "Useful Reads") +
1567289304703:publicationTheme()
1567289304705:+ theme(panel.grid.minor = element_blank())
1567289304705:)
1567289308092:# Useful reads per DB ---------------------------------------------------------------
1567289308092:x_lim <- c(6:9)
1567289308303:y_lim <- c(3:7)
1567289308380:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289308683:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289309049:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567289309050:geom_line(size = 1, color = "#666666") +
1567289309050:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289309051:scale_x_log10(expand = c(0,0),
1567289309051:breaks = 10^(x_lim),
1567289309052:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289309052:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289309054:labels = x_labels) +
1567289309054:scale_y_log10(expand = c(0,0),
1567289309055:breaks = 10^(y_lim),
1567289309055:limits = c(1e+3, 1e+7),
1567289309056:labels = y_labels
1567289309056:) +
1567289309057:scale_fill_manual(values = customPalette) +
1567289309057:labs(x = "DB Size (bp)",
1567289309058:y = "Useful Reads") +
1567289309059:publicationTheme()
1567289309059:+ theme(panel.grid.minor = element_blank())
1567289309072:)
1567289314940:(dbSizePlot <-
1567289314941:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567289314941:fill = Scheme)) +
1567289314942:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567289314942:stat  = "identity",
1567289314943:position = position_dodge(width=0.9)
1567289314944:, show.legend = F
1567289314945:) +
1567289314946:scale_y_log10(expand = c(0,0),
1567289314946:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567289314947:limits = c(1, 1e+9*1.8),
1567289314948:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567289314948:) +
1567289314949:scale_fill_manual(values = rev(customPalette),
1567289314949:# labels = typeLabels,
1567289314950:name   = "Scheme"
1567289314950:) +
1567289314951:labs(x = "Scheme",
1567289314951:y = "DB Size (bp)") +
1567289314952:publicationTheme() +
1567289314952:barPlotCustomsVertical +
1567289314953:theme (axis.text.y = element_text(family = baseFontFamily))
1567289314954:)
1567289315580:# Useful reads per DB ---------------------------------------------------------------
1567289315581:x_lim <- c(6:9)
1567289316228:y_lim <- c(3:7)
1567289316664:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289317129:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289318193:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567289318194:geom_line(size = 1, color = "#666666") +
1567289318194:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289318195:scale_x_log10(expand = c(0,0),
1567289318195:breaks = 10^(x_lim),
1567289318196:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289318196:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289318197:labels = x_labels) +
1567289318197:scale_y_log10(expand = c(0,0),
1567289318198:breaks = 10^(y_lim),
1567289318199:limits = c(1e+3, 1e+7),
1567289318199:labels = y_labels
1567289318200:) +
1567289318201:scale_fill_manual(values = customPalette) +
1567289318202:labs(x = "DB Size (bp)",
1567289318203:y = "Useful Reads") +
1567289318206:publicationTheme()
1567289318207:+ theme(panel.grid.minor = element_blank())
1567289318207:)
1567289336037:dataToPlot
1567289351009:# Useful reads per DB ---------------------------------------------------------------
1567289351010:x_lim <- c(6:10)
1567289351438:y_lim <- c(3:7)
1567289351814:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289352173:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289352641:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567289352642:geom_line(size = 1, color = "#666666") +
1567289352642:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289352643:scale_x_log10(expand = c(0,0),
1567289352643:breaks = 10^(x_lim),
1567289352644:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289352645:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289352645:labels = x_labels) +
1567289352646:scale_y_log10(expand = c(0,0),
1567289352647:breaks = 10^(y_lim),
1567289352648:limits = c(1e+3, 1e+7),
1567289352649:labels = y_labels
1567289352649:) +
1567289352650:scale_fill_manual(values = customPalette) +
1567289352651:labs(x = "DB Size (bp)",
1567289352653:y = "Useful Reads") +
1567289352654:publicationTheme()
1567289352654:+ theme(panel.grid.minor = element_blank())
1567289352655:)
1567289362830:# Processed k-mers per DB ---------------------------------------------------------------
1567289362830:x_lim <- c(6:10)
1567289363094:y_lim <- c(5:9)
1567289363287:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289363546:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289363845:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289363846:geom_line(size = 1, color = "#666666") +
1567289363846:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289363847:scale_x_log10(expand = c(0,0),
1567289363847:breaks = 10^(x_lim),
1567289363848:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289363848:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289363849:labels = x_labels) +
1567289363849:# scale_y_log10(expand = c(0,0),
1567289363850:# 							breaks = 10^(y_lim),
1567289363853:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567289363854:# 							labels = y_labels
1567289363859:# ) +
1567289363859:scale_fill_manual(values = customPalette) +
1567289363860:labs(x = "DB Size (bp)",
1567289363861:y = "Useful Reads") +
1567289363861:publicationTheme()
1567289363862:+ theme(panel.grid.minor = element_blank())
1567289363862:)
1567289376797:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289376797:geom_line(size = 1, color = "#666666") +
1567289376798:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289376798:scale_x_log10(expand = c(0,0),
1567289376799:breaks = 10^(x_lim),
1567289376799:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289376800:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289376800:labels = x_labels) +
1567289376802:scale_y_log10(expand = c(0,0),
1567289376802:breaks = 10^(y_lim),
1567289376803:limits = 10^(y_lim[c(1,length(y_lim))]),
1567289376804:labels = y_labels
1567289376804:) +
1567289376805:scale_fill_manual(values = customPalette) +
1567289376805:labs(x = "DB Size (bp)",
1567289376814:y = "Useful Reads") +
1567289376816:publicationTheme()
1567289376816:+ theme(panel.grid.minor = element_blank())
1567289376817:)
1567289393950:# MLST comparative test
1567289393951:# Install an load packages ------------------------------------------------
1567289393951:installAndLoadPackages <- function(pkg){
1567289393952:cat("Please wait a moment! Checking for required packages... ")
1567289393952:cat("Done!\n")
1567289393952:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567289393953:if (length(new.pkg)) {
1567289393953:cat("Installing new packages... ")
1567289393953:install.packages(new.pkg, dependencies = TRUE,
1567289393954:repos="http://cran.rstudio.com/")
1567289393954:cat("Done!\n")
1567289393955:}
1567289393956:cat("Loading packages... \n")
1567289393956:sapply(pkg, require, character.only = TRUE)
1567289393956:cat("Done!\n")
1567289393957:}
1567289393958:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567289393958:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567289393959:installAndLoadPackages(requiredPackages)
1567289394064:# Format bar annotation text ----------------------------------------------
1567289394065:getAnnotationText <- function(value){
1567289394065:lapply(value, function(x) {
1567289394066:result = ""
1567289394066:if (x != 1) {
1567289394068:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567289394069:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567289394069:}
1567289394070:result
1567289394070:})
1567289394071:}
1567289394073:# Sources -----------------------------------------------------------------
1567289394077:source(file = "scripts/ggplot_theme.R")
1567289394397:# Loading Data ------------------------------------------------------------
1567289394398:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567289394398:excel_sheets(inFile)
1567289394408:(inData <- read_excel(inFile, sheet = "data"))
1567289394671:# General configuration ---------------------------------------------------
1567289394672:saveFigures <- TRUE
1567289394673:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567289394673:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567289394673:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567289394674:generalPalette <- c(
1567289394674:"MLST"   = '#0a4f75',
1567289394675:"rMLST"  = '#FFB238',
1567289394675:"cgMLST" = '#91bbe4'
1567289394676:# , "MLST"    = '#d7e4f5'
1567289394676:# , "rMLST"   = '#FFD592'
1567289394677:)
1567289394678:show_col(generalPalette)
1567289394705:annotTextColors       <- c(axisColor, "#ffffff")
1567289394706:baseVariantFontFamily <- baseFontFamily
1567289394707:# Preparing data ----------------------------------------------------------
1567289394708:customPalette   <- generalPalette
1567289394709:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567289394709:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567289394710:(dataToPlot <- inData %>%
1567289394711:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567289395188:# SChem DB Size Plot ------------------------------------------------
1567289395188:y_lim    <- seq(1,9, by = 2)
1567289395189:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289395196:(dbSizePlot <-
1567289395197:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567289395197:fill = Scheme)) +
1567289395198:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567289395198:stat  = "identity",
1567289395199:position = position_dodge(width=0.9)
1567289395199:, show.legend = F
1567289395200:) +
1567289395200:scale_y_log10(expand = c(0,0),
1567289395201:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567289395202:limits = c(1, 1e+9*1.8),
1567289395202:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567289395203:) +
1567289395203:scale_fill_manual(values = rev(customPalette),
1567289395204:# labels = typeLabels,
1567289395204:name   = "Scheme"
1567289395205:) +
1567289395205:labs(x = "Scheme",
1567289395206:y = "DB Size (bp)") +
1567289395206:publicationTheme() +
1567289395207:barPlotCustomsVertical +
1567289395207:theme (axis.text.y = element_text(family = baseFontFamily))
1567289395208:)
1567289395744:# Useful reads per DB ---------------------------------------------------------------
1567289395744:x_lim <- c(6:10)
1567289395745:y_lim <- c(3:7)
1567289395746:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289395754:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289395760:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567289395761:geom_line(size = 1, color = "#666666") +
1567289395761:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289395761:scale_x_log10(expand = c(0,0),
1567289395762:breaks = 10^(x_lim),
1567289395762:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289395762:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289395763:labels = x_labels) +
1567289395763:scale_y_log10(expand = c(0,0),
1567289395763:breaks = 10^(y_lim),
1567289395764:limits = c(1e+3, 1e+7),
1567289395764:labels = y_labels
1567289395765:) +
1567289395765:scale_fill_manual(values = customPalette) +
1567289395765:labs(x = "DB Size (bp)",
1567289395766:y = "Useful Reads") +
1567289395766:publicationTheme()
1567289395767:+ theme(panel.grid.minor = element_blank())
1567289395768:)
1567289401855:# MLST comparative test
1567289401856:# Install an load packages ------------------------------------------------
1567289401857:installAndLoadPackages <- function(pkg){
1567289401857:cat("Please wait a moment! Checking for required packages... ")
1567289401858:cat("Done!\n")
1567289401858:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567289401859:if (length(new.pkg)) {
1567289401859:cat("Installing new packages... ")
1567289401860:install.packages(new.pkg, dependencies = TRUE,
1567289401860:repos="http://cran.rstudio.com/")
1567289401861:cat("Done!\n")
1567289401861:}
1567289401862:cat("Loading packages... \n")
1567289401863:sapply(pkg, require, character.only = TRUE)
1567289401863:cat("Done!\n")
1567289401864:}
1567289401865:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567289401866:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567289401867:installAndLoadPackages(requiredPackages)
1567289401874:# Format bar annotation text ----------------------------------------------
1567289401874:getAnnotationText <- function(value){
1567289401875:lapply(value, function(x) {
1567289401875:result = ""
1567289401876:if (x != 1) {
1567289401876:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567289401877:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567289401877:}
1567289401878:result
1567289401878:})
1567289401879:}
1567289401880:# Sources -----------------------------------------------------------------
1567289401881:source(file = "scripts/ggplot_theme.R")
1567289401986:# Loading Data ------------------------------------------------------------
1567289401986:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567289401987:excel_sheets(inFile)
1567289402012:(inData <- read_excel(inFile, sheet = "data"))
1567289402278:# General configuration ---------------------------------------------------
1567289402279:saveFigures <- TRUE
1567289402279:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567289402280:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567289402280:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567289402280:generalPalette <- c(
1567289402280:"MLST"   = '#0a4f75',
1567289402281:"rMLST"  = '#FFB238',
1567289402281:"cgMLST" = '#91bbe4'
1567289402281:# , "MLST"    = '#d7e4f5'
1567289402282:# , "rMLST"   = '#FFD592'
1567289402282:)
1567289402283:show_col(generalPalette)
1567289402304:annotTextColors       <- c(axisColor, "#ffffff")
1567289402305:baseVariantFontFamily <- baseFontFamily
1567289402305:# Preparing data ----------------------------------------------------------
1567289402306:customPalette   <- generalPalette
1567289402306:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567289402306:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567289402307:(dataToPlot <- inData %>%
1567289402307:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567289402810:# SChem DB Size Plot ------------------------------------------------
1567289402810:y_lim    <- seq(1,9, by = 2)
1567289402811:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289402820:(dbSizePlot <-
1567289402821:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567289402821:fill = Scheme)) +
1567289402821:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567289402822:stat  = "identity",
1567289402822:position = position_dodge(width=0.9)
1567289402822:, show.legend = F
1567289402823:) +
1567289402823:scale_y_log10(expand = c(0,0),
1567289402823:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567289402824:limits = c(1, 1e+9*1.8),
1567289402824:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567289402824:) +
1567289402825:scale_fill_manual(values = rev(customPalette),
1567289402825:# labels = typeLabels,
1567289402826:name   = "Scheme"
1567289402826:) +
1567289402826:labs(x = "Scheme",
1567289402827:y = "DB Size (bp)") +
1567289402827:publicationTheme() +
1567289402827:barPlotCustomsVertical +
1567289402828:theme (axis.text.y = element_text(family = baseFontFamily))
1567289402828:)
1567289403346:# Useful reads per DB ---------------------------------------------------------------
1567289403346:x_lim <- c(6:10)
1567289403347:y_lim <- c(3:7)
1567289403347:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289403352:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289403357:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567289403357:geom_line(size = 1, color = "#666666") +
1567289403357:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289403358:scale_x_log10(expand = c(0,0),
1567289403358:breaks = 10^(x_lim),
1567289403358:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289403359:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289403359:labels = x_labels) +
1567289403359:scale_y_log10(expand = c(0,0),
1567289403360:breaks = 10^(y_lim),
1567289403360:limits = c(1e+3, 1e+7),
1567289403360:labels = y_labels
1567289403361:) +
1567289403362:scale_fill_manual(values = customPalette) +
1567289403362:labs(x = "DB Size (bp)",
1567289403363:y = "Useful Reads") +
1567289403364:publicationTheme()
1567289403365:+ theme(panel.grid.minor = element_blank())
1567289403365:)
1567289404020:# Processed k-mers per DB ---------------------------------------------------------------
1567289404021:x_lim <- c(6:10)
1567289404021:y_lim <- c(5:9)
1567289404022:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289404029:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567289404035:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289404036:geom_line(size = 1, color = "#666666") +
1567289404036:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289404037:scale_x_log10(expand = c(0,0),
1567289404037:breaks = 10^(x_lim),
1567289404038:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289404039:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289404039:labels = x_labels) +
1567289404040:scale_y_log10(expand = c(0,0),
1567289404040:breaks = 10^(y_lim),
1567289404041:limits = 10^(y_lim[c(1,length(y_lim))]),
1567289404041:labels = y_labels
1567289404042:) +
1567289404042:scale_fill_manual(values = customPalette) +
1567289404043:labs(x = "DB Size (bp)",
1567289404043:y = "Useful Reads") +
1567289404044:publicationTheme()
1567289404045:+ theme(panel.grid.minor = element_blank())
1567289404045:)
1567289524413:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567289524414:geom_line(size = 1, color = "#666666") +
1567289524414:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567289524414:scale_x_log10(expand = c(0,0),
1567289524415:breaks = 10^(x_lim),
1567289524415:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567289524415:limits = 10^(x_lim[c(1,length(x_lim))]),
1567289524416:labels = x_labels) +
1567289524416:scale_y_log10(expand = c(0,0),
1567289524416:breaks = 10^(y_lim),
1567289524417:limits = 10^(y_lim[c(1,length(y_lim))]),
1567289524417:labels = y_labels
1567289524418:) +
1567289524418:scale_fill_manual(values = customPalette) +
1567289524418:labs(x = "DB Size (bp)",
1567289524419:y = "Processed k-mers") +
1567289524419:publicationTheme()
1567289524420:+ theme(panel.grid.minor = element_blank())
1567289524420:)
1567289657567:# Runtime per DB ---------------------------------------------------------------
1567289657584:x_lim <- c(6:10)
1567289658362:y_lim <- c(0,4)
1567289659523:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567289660327:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567290039325:inData
1567290065952:names(inData)
1567290086515:names(inData)[1:8]
1567290103051:names(inData)[1:8]
1567290106772:(dataToPlot <- inData %>%
1567290106772:gather(Time_type, Time, -c(names(inData)[1:8]))
1567290106773:)
1567290265039:(dataToPlot <- inData %>%
1567290265039:select(Scheme, Size, Searching_time, Index_loading_time, Total_time) %>%
1567290265040:gather(Time_type, Time, -c("Scheme", "Size"))
1567290265041:)
1567290382557:(dataToPlot <- inData %>%
1567290382558:select(Scheme, Size, Searching_time, Index_loading_time, Total_time) %>%
1567290382559:gather(Time_type, Time, -c("Scheme", "Size"))
1567290382559:)
1567290392078:x_lim <- c(6:10)
1567290392341:y_lim <- c(0,4)
1567290392571:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567290393078:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567290393610:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290393611:geom_line(aes(type = Time_type), size = 1) +
1567290393611:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290393612:scale_x_log10(expand = c(0,0),
1567290393612:breaks = 10^(x_lim),
1567290393613:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290393613:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290393623:labels = x_labels) +
1567290393624:# scale_y_log10(expand = c(0,0),
1567290393624:# 							breaks = 10^(y_lim),
1567290393625:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290393626:# 							labels = y_labels
1567290393626:# ) +
1567290393627:scale_fill_manual(values = customPalette) +
1567290393628:labs(x = "DB Size (bp)",
1567290393628:y = "Processed k-mers") +
1567290393629:publicationTheme()
1567290393629:+ theme(panel.grid.minor = element_blank())
1567290393630:)
1567290443667:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290443668:geom_line(aes(linetype = Time_type), size = 1, color = "#666666") +
1567290443668:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290443669:scale_x_log10(expand = c(0,0),
1567290443669:breaks = 10^(x_lim),
1567290443671:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290443672:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290443673:labels = x_labels) +
1567290443673:# scale_y_log10(expand = c(0,0),
1567290443674:# 							breaks = 10^(y_lim),
1567290443675:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290443675:# 							labels = y_labels
1567290443676:# ) +
1567290443677:scale_fill_manual(values = customPalette) +
1567290443678:labs(x = "DB Size (bp)",
1567290443679:y = "Processed k-mers") +
1567290443680:publicationTheme()
1567290443680:+ theme(panel.grid.minor = element_blank())
1567290443681:)
1567290499472:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290499472:geom_line(aes(color = Time_type), size = 1, color = "#666666") +
1567290499473:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290499473:scale_x_log10(expand = c(0,0),
1567290499474:breaks = 10^(x_lim),
1567290499474:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290499475:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290499476:labels = x_labels) +
1567290499477:# scale_y_log10(expand = c(0,0),
1567290499478:# 							breaks = 10^(y_lim),
1567290499478:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290499479:# 							labels = y_labels
1567290499480:# ) +
1567290499480:scale_fill_manual(values = customPalette) +
1567290499481:labs(x = "DB Size (bp)",
1567290499482:y = "Processed k-mers") +
1567290499482:publicationTheme()
1567290499483:+ theme(panel.grid.minor = element_blank())
1567290499484:)
1567290515875:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290515876:geom_line(aes(color = Time_type), size = 1) + #, color = "#666666") +
1567290515876:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290515877:scale_x_log10(expand = c(0,0),
1567290515878:breaks = 10^(x_lim),
1567290515878:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290515879:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290515879:labels = x_labels) +
1567290515880:# scale_y_log10(expand = c(0,0),
1567290515880:# 							breaks = 10^(y_lim),
1567290515881:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290515881:# 							labels = y_labels
1567290515882:# ) +
1567290515882:scale_fill_manual(values = customPalette) +
1567290515883:labs(x = "DB Size (bp)",
1567290515883:y = "Processed k-mers") +
1567290515884:publicationTheme()
1567290515884:+ theme(panel.grid.minor = element_blank())
1567290515885:)
1567290586579:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290586580:geom_line(aes(color = Time_type), size = 1) + #, color = "#666666") +
1567290586580:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290586581:scale_x_log10(expand = c(0,0),
1567290586582:breaks = 10^(x_lim),
1567290586582:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290586583:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290586584:labels = x_labels) +
1567290586584:# scale_y_log10(expand = c(0,0),
1567290586585:# 							breaks = 10^(y_lim),
1567290586586:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290586587:# 							labels = y_labels
1567290586587:# ) +
1567290586588:scale_fill_manual(values = customPalette) +
1567290586588:labs(x = "DB Size (bp)",
1567290586589:y = "Time (s)") +
1567290586589:publicationTheme()
1567290586589:+ theme(panel.grid.minor = element_blank())
1567290586590:)
1567290729733:(dataToPlot <- inData %>%
1567290729733:select(Scheme, Size, Searching_time, Index_loading_time, Total_time) %>%
1567290729734:gather(Time_type, Time, -c("Scheme", "Size")) %>%
1567290729734:mutate(Time_type = factor(Time_type, levels = c("Index loading", "k-mer searching", "Total")))
1567290729735:)
1567290742509:inData %>%
1567290742509:select(Scheme, Size, Searching_time, Index_loading_time, Total_time) %>%
1567290742510:gather(Time_type, Time, -c("Scheme", "Size"))
1567290845940:(dataToPlot <- inData %>%
1567290845941:select(Scheme, Size,
1567290845941:"k-mer searching" = Searching_time,
1567290845942:"Index loading"   = Index_loading_time,
1567290845942:"Total" = Total_time) %>%
1567290845942:gather(`Time type`, Time, -c("Scheme", "Size"))
1567290845943:)
1567290846440:x_lim <- c(6:10)
1567290846806:y_lim <- c(0,4)
1567290846950:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567290847279:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567290849321:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290849322:geom_line(aes(color = Time_type), size = 1) + #, color = "#666666") +
1567290849323:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290849323:scale_x_log10(expand = c(0,0),
1567290849325:breaks = 10^(x_lim),
1567290849326:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290849326:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290849327:labels = x_labels) +
1567290849327:# scale_y_log10(expand = c(0,0),
1567290849328:# 							breaks = 10^(y_lim),
1567290849329:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290849329:# 							labels = y_labels
1567290849330:# ) +
1567290849330:scale_fill_manual(values = customPalette) +
1567290849331:labs(x = "DB Size (bp)",
1567290849332:y = "Time (s)") +
1567290849332:publicationTheme()
1567290849333:+ theme(panel.grid.minor = element_blank())
1567290849334:)
1567290859992:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290859993:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567290859993:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290859994:scale_x_log10(expand = c(0,0),
1567290859994:breaks = 10^(x_lim),
1567290859995:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290859995:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290859996:labels = x_labels) +
1567290859996:# scale_y_log10(expand = c(0,0),
1567290859997:# 							breaks = 10^(y_lim),
1567290859997:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290859998:# 							labels = y_labels
1567290859999:# ) +
1567290859999:scale_fill_manual(values = customPalette) +
1567290859999:labs(x = "DB Size (bp)",
1567290860000:y = "Time (s)") +
1567290860001:publicationTheme()
1567290860001:+ theme(panel.grid.minor = element_blank())
1567290860002:)
1567290878789:(dataToPlot <- inData %>%
1567290878790:select(Scheme, Size,
1567290878791:"k-mer searching" = Searching_time,
1567290878792:"Index loading"   = Index_loading_time,
1567290878792:"Total" = Total_time) %>%
1567290878793:gather("Time type", Time, -c("Scheme", "Size"))
1567290878793:)
1567290879289:x_lim <- c(6:10)
1567290879633:y_lim <- c(0,4)
1567290879951:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567290880213:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567290880482:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290880483:geom_line(aes(color = "Time type"), size = 1) + #, color = "#666666") +
1567290880483:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290880484:scale_x_log10(expand = c(0,0),
1567290880484:breaks = 10^(x_lim),
1567290880485:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290880485:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290880486:labels = x_labels) +
1567290880487:# scale_y_log10(expand = c(0,0),
1567290880487:# 							breaks = 10^(y_lim),
1567290880488:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290880488:# 							labels = y_labels
1567290880489:# ) +
1567290880490:scale_fill_manual(values = customPalette) +
1567290880490:labs(x = "DB Size (bp)",
1567290880491:y = "Time (s)") +
1567290880492:publicationTheme()
1567290880494:+ theme(panel.grid.minor = element_blank())
1567290880495:)
1567290892174:(dataToPlot <- inData %>%
1567290892174:select(Scheme, Size,
1567290892175:"k-mer searching" = Searching_time,
1567290892175:"Index loading"   = Index_loading_time,
1567290892176:"Total" = Total_time) %>%
1567290892176:gather("Time type", Time, -c("Scheme", "Size"))
1567290892177:)
1567290904756:(dataToPlot <- inData %>%
1567290904756:select(Scheme, Size,
1567290904757:"k-mer searching" = Searching_time,
1567290904757:"Index loading"   = Index_loading_time,
1567290904758:"Total" = Total_time) %>%
1567290904759:gather("Time type", Time, -c("Scheme", "Size"))
1567290904759:)
1567290905409:x_lim <- c(6:10)
1567290905597:y_lim <- c(0,4)
1567290905665:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567290905963:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567290906329:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290906330:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567290906330:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290906331:scale_x_log10(expand = c(0,0),
1567290906331:breaks = 10^(x_lim),
1567290906332:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290906332:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290906333:labels = x_labels) +
1567290906333:# scale_y_log10(expand = c(0,0),
1567290906334:# 							breaks = 10^(y_lim),
1567290906335:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290906335:# 							labels = y_labels
1567290906336:# ) +
1567290906336:scale_fill_manual(values = customPalette) +
1567290906337:labs(x = "DB Size (bp)",
1567290906338:y = "Time (s)") +
1567290906338:publicationTheme()
1567290906340:+ theme(panel.grid.minor = element_blank())
1567290906349:)
1567290920215:(dataToPlot <- inData %>%
1567290920215:select(Scheme, Size,
1567290920216:"k-mer searching" = Searching_time,
1567290920216:"Index loading"   = Index_loading_time,
1567290920217:"Total" = Total_time) %>%
1567290920217:gather("Time type", Time, -c("Scheme", "Size"))
1567290920218:)
1567290925195:x_lim <- c(6:10)
1567290925965:y_lim <- c(0,4)
1567290926371:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567290926684:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567290927555:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567290927556:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567290927556:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567290927557:scale_x_log10(expand = c(0,0),
1567290927558:breaks = 10^(x_lim),
1567290927559:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567290927560:limits = 10^(x_lim[c(1,length(x_lim))]),
1567290927560:labels = x_labels) +
1567290927561:# scale_y_log10(expand = c(0,0),
1567290927562:# 							breaks = 10^(y_lim),
1567290927563:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567290927563:# 							labels = y_labels
1567290927564:# ) +
1567290927564:scale_fill_manual(values = customPalette) +
1567290927565:labs(x = "DB Size (bp)",
1567290927566:y = "Time (s)") +
1567290927567:publicationTheme()
1567290927567:+ theme(panel.grid.minor = element_blank())
1567290927568:)
1567291126219:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291126220:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291126220:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291126221:scale_x_log10(expand = c(0,0),
1567291126221:breaks = 10^(x_lim),
1567291126222:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291126222:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291126223:labels = x_labels) +
1567291126223:# scale_y_log10(expand = c(0,0),
1567291126224:# 							breaks = 10^(y_lim),
1567291126224:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291126225:# 							labels = y_labels
1567291126225:# ) +
1567291126226:scale_fill_manual(values = customPalette) +
1567291126226:scale_color_npg() +
1567291126227:labs(x = "DB Size (bp)",
1567291126229:y = "Time (s)") +
1567291126231:publicationTheme()
1567291126231:+ theme(panel.grid.minor = element_blank())
1567291126232:)
1567291195081:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291195082:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291195082:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291195083:scale_x_log10(expand = c(0,0),
1567291195083:breaks = 10^(x_lim),
1567291195084:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291195085:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291195085:labels = x_labels) +
1567291195086:# scale_y_log10(expand = c(0,0),
1567291195087:# 							breaks = 10^(y_lim),
1567291195087:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291195088:# 							labels = y_labels
1567291195089:# ) +
1567291195093:scale_fill_manual(values = customPalette) +
1567291195095:scale_color_aaas() +
1567291195095:labs(x = "DB Size (bp)",
1567291195096:y = "Time (s)") +
1567291195097:publicationTheme()
1567291195097:+ theme(panel.grid.minor = element_blank())
1567291195098:)
1567291296156:inData
1567291328179:(dataToPlot <- inData %>%
1567291328179:select(Scheme, Size,
1567291328180:"Alleles" = Total_alleles,
1567291328180:"k-mer searching" = Searching_time,
1567291328181:"Index loading"   = Index_loading_time,
1567291328181:"Total" = Total_time) %>%
1567291328182:gather("Time type", Time, -c("Scheme", "Size"))
1567291328182:)
1567291328945:x_lim <- c(6:10)
1567291329160:y_lim <- c(0,4)
1567291329358:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567291329594:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291329938:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291329938:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291329939:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291329939:scale_x_log10(expand = c(0,0),
1567291329940:breaks = 10^(x_lim),
1567291329940:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291329941:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291329941:labels = x_labels) +
1567291329942:# scale_y_log10(expand = c(0,0),
1567291329942:# 							breaks = 10^(y_lim),
1567291329943:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291329944:# 							labels = y_labels
1567291329944:# ) +
1567291329945:scale_fill_manual(values = customPalette) +
1567291329945:scale_color_aaas() +
1567291329945:labs(x = "DB Size (bp)",
1567291329946:y = "Time (s)") +
1567291329946:publicationTheme()
1567291329947:+ theme(panel.grid.minor = element_blank())
1567291329947:)
1567291339177:(dataToPlot <- inData %>%
1567291339178:select(Scheme, Size,
1567291339178:"Alleles" = Total_alleles,
1567291339179:"k-mer searching" = Searching_time,
1567291339179:"Index loading"   = Index_loading_time,
1567291339180:"Total" = Total_time) %>%
1567291339180:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567291339181:)
1567291339782:x_lim <- c(6:10)
1567291340047:y_lim <- c(0,4)
1567291340208:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567291340433:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291340516:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291340517:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291340517:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291340518:scale_x_log10(expand = c(0,0),
1567291340518:breaks = 10^(x_lim),
1567291340519:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291340520:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291340520:labels = x_labels) +
1567291340521:# scale_y_log10(expand = c(0,0),
1567291340521:# 							breaks = 10^(y_lim),
1567291340522:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291340522:# 							labels = y_labels
1567291340523:# ) +
1567291340524:scale_fill_manual(values = customPalette) +
1567291340524:scale_color_aaas() +
1567291340525:labs(x = "DB Size (bp)",
1567291340525:y = "Time (s)") +
1567291340526:publicationTheme()
1567291340527:+ theme(panel.grid.minor = element_blank())
1567291340527:)
1567291349367:(runtimePlot <- ggplot(dataToPlot, aes(x = Alleles, y = Time)) +
1567291349368:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291349368:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291349369:scale_x_log10(expand = c(0,0),
1567291349369:breaks = 10^(x_lim),
1567291349370:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291349370:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291349371:labels = x_labels) +
1567291349372:# scale_y_log10(expand = c(0,0),
1567291349372:# 							breaks = 10^(y_lim),
1567291349373:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291349373:# 							labels = y_labels
1567291349374:# ) +
1567291349383:scale_fill_manual(values = customPalette) +
1567291349383:scale_color_aaas() +
1567291349384:labs(x = "DB Size (bp)",
1567291349385:y = "Time (s)") +
1567291349385:publicationTheme()
1567291349386:+ theme(panel.grid.minor = element_blank())
1567291349386:)
1567291366611:(runtimePlot <- ggplot(dataToPlot, aes(x = Alleles, y = Time)) +
1567291366612:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291366616:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291366616:# scale_x_log10(expand = c(0,0),
1567291366617:# 							breaks = 10^(x_lim),
1567291366617:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291366618:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567291366618:# 							labels = x_labels) +
1567291366619:# scale_y_log10(expand = c(0,0),
1567291366619:# 							breaks = 10^(y_lim),
1567291366620:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291366620:# 							labels = y_labels
1567291366621:# ) +
1567291366621:scale_fill_manual(values = customPalette) +
1567291366622:scale_color_aaas() +
1567291366622:labs(x = "DB Size (bp)",
1567291366624:y = "Time (s)") +
1567291366625:publicationTheme()
1567291366625:+ theme(panel.grid.minor = element_blank())
1567291366626:)
1567291551149:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291551150:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291551151:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291551151:# scale_x_log10(expand = c(0,0),
1567291551152:# 							breaks = 10^(x_lim),
1567291551152:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291551153:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567291551153:# 							labels = x_labels) +
1567291551154:# scale_y_log10(expand = c(0,0),
1567291551154:# 							breaks = 10^(y_lim),
1567291551155:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291551155:# 							labels = y_labels
1567291551156:# ) +
1567291551156:scale_fill_manual(values = customPalette) +
1567291551157:scale_color_aaas() +
1567291551158:labs(x = "DB Size (bp)",
1567291551159:y = "Time (s)") +
1567291551160:publicationTheme()
1567291551162:+ theme(panel.grid.minor = element_blank())
1567291551163:)
1567291601050:scale_x_log10(expand = c(0,0),
1567291601051:breaks = 10^(x_lim),
1567291601051:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291601052:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291601052:labels = x_labels) +
1567291608387:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291608388:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291608389:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291608389:scale_x_log10(expand = c(0,0),
1567291608390:breaks = 10^(x_lim),
1567291608391:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291608391:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291608391:labels = x_labels) +
1567291608392:# scale_y_log10(expand = c(0,0),
1567291608392:# 							breaks = 10^(y_lim),
1567291608393:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291608393:# 							labels = y_labels
1567291608394:# ) +
1567291608394:scale_fill_manual(values = customPalette) +
1567291608395:scale_color_aaas() +
1567291608395:labs(x = "DB Size (bp)",
1567291608395:y = "Time (s)") +
1567291608396:publicationTheme()
1567291608396:+ theme(panel.grid.minor = element_blank())
1567291608397:)
1567291645592:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291645593:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291645594:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291645595:scale_x_log10(expand = c(0,0),
1567291645595:breaks = 10^(x_lim),
1567291645596:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291645596:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291645597:labels = x_labels) +
1567291645598:# scale_y_log10(expand = c(0,0),
1567291645598:# 							breaks = 10^(y_lim),
1567291645599:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291645600:# 							labels = y_labels
1567291645600:# ) +
1567291645601:scale_fill_manual(values = customPalette) +
1567291645602:scale_color_aaas(name = "Type") +
1567291645602:labs(x = "DB Size (bp)",
1567291645603:y = "Time (s)") +
1567291645604:publicationTheme()
1567291645604:+ theme(panel.grid.minor = element_blank())
1567291645605:)
1567291670077:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291670077:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291670078:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291670078:scale_x_log10(expand = c(0,0),
1567291670079:breaks = 10^(x_lim),
1567291670079:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291670080:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291670081:labels = x_labels) +
1567291670081:# scale_y_log10(expand = c(0,0),
1567291670082:# 							breaks = 10^(y_lim),
1567291670083:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291670086:# 							labels = y_labels
1567291670087:# ) +
1567291670087:scale_fill_manual(values = customPalette) +
1567291670088:scale_color_aaas(name = "Time category") +
1567291670088:labs(x = "DB Size (bp)",
1567291670088:y = "Time (s)") +
1567291670089:publicationTheme()
1567291670089:+ theme(panel.grid.minor = element_blank())
1567291670090:)
1567291738265:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291738265:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291738266:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291738267:scale_x_log10(expand = c(0,0),
1567291738267:breaks = 10^(x_lim),
1567291738268:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291738268:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291738269:labels = x_labels) +
1567291738270:# scale_y_log10(expand = c(0,0),
1567291738271:# 							breaks = 10^(y_lim),
1567291738271:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291738272:# 							labels = y_labels
1567291738273:# ) +
1567291738273:scale_fill_manual(values = customPalette) +
1567291738274:scale_color_aaas(name = "Task") +
1567291738278:labs(x = "DB Size (bp)",
1567291738278:y = "Time (s)") +
1567291738279:publicationTheme()
1567291738280:+ theme(panel.grid.minor = element_blank())
1567291738280:)
1567291749837:(dataToPlot <- inData %>%
1567291749838:select(Scheme, Size,
1567291749838:"Alleles" = Total_alleles,
1567291749839:"k-mer searching" = Searching_time,
1567291749839:"Index loading"   = Index_loading_time,
1567291749840:"Whole typing process" = Total_time) %>%
1567291749841:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567291749841:)
1567291750060:x_lim <- c(6:10)
1567291750232:y_lim <- c(0,4)
1567291750359:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567291750519:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291750931:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291750931:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291750932:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291750932:scale_x_log10(expand = c(0,0),
1567291750933:breaks = 10^(x_lim),
1567291750933:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291750934:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291750934:labels = x_labels) +
1567291750935:# scale_y_log10(expand = c(0,0),
1567291750935:# 							breaks = 10^(y_lim),
1567291750936:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291750937:# 							labels = y_labels
1567291750937:# ) +
1567291750938:scale_fill_manual(values = customPalette) +
1567291750938:scale_color_aaas(name = "Task") +
1567291750939:labs(x = "DB Size (bp)",
1567291750939:y = "Time (s)") +
1567291750940:publicationTheme()
1567291750940:+ theme(panel.grid.minor = element_blank())
1567291750945:)
1567291855888:(inData <- inData %>%
1567291855888:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567291856291:(dataToPlot <- inData)
1567291857057:# SChem DB Size Plot ------------------------------------------------
1567291857057:y_lim    <- seq(1,9, by = 2)
1567291857502:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291857710:(dbSizePlot <-
1567291857710:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567291857711:fill = Scheme)) +
1567291857712:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567291857712:stat  = "identity",
1567291857713:position = position_dodge(width=0.9)
1567291857713:, show.legend = F
1567291857714:) +
1567291857714:scale_y_log10(expand = c(0,0),
1567291857715:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567291857716:limits = c(1, 1e+9*1.8),
1567291857716:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567291857717:) +
1567291857718:scale_fill_manual(values = rev(customPalette),
1567291857718:# labels = typeLabels,
1567291857719:name   = "Scheme"
1567291857720:) +
1567291857720:labs(x = "Scheme",
1567291857721:y = "DB Size (bp)") +
1567291857721:publicationTheme() +
1567291857722:barPlotCustomsVertical +
1567291857722:theme (axis.text.y = element_text(family = baseFontFamily))
1567291857723:)
1567291858163:# Useful reads per DB ---------------------------------------------------------------
1567291858163:x_lim <- c(6:10)
1567291858164:y_lim <- c(3:7)
1567291859113:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567291859121:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291859128:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567291859128:geom_line(size = 1, color = "#666666") +
1567291859129:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291859129:scale_x_log10(expand = c(0,0),
1567291859130:breaks = 10^(x_lim),
1567291859130:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291859131:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291859131:labels = x_labels) +
1567291859132:scale_y_log10(expand = c(0,0),
1567291859132:breaks = 10^(y_lim),
1567291859133:limits = c(1e+3, 1e+7),
1567291859133:labels = y_labels
1567291859134:) +
1567291859134:scale_fill_manual(values = customPalette) +
1567291859135:labs(x = "DB Size (bp)",
1567291859136:y = "Useful Reads") +
1567291859136:publicationTheme()
1567291859137:+ theme(panel.grid.minor = element_blank())
1567291859137:)
1567291859729:# Processed k-mers per DB ---------------------------------------------------------------
1567291859730:x_lim <- c(6:10)
1567291859730:y_lim <- c(5:9)
1567291859731:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567291859735:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291859739:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567291859740:geom_line(size = 1, color = "#666666") +
1567291859740:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291859740:scale_x_log10(expand = c(0,0),
1567291859741:breaks = 10^(x_lim),
1567291859741:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291859741:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291859742:labels = x_labels) +
1567291859742:scale_y_log10(expand = c(0,0),
1567291859742:breaks = 10^(y_lim),
1567291859743:limits = 10^(y_lim[c(1,length(y_lim))]),
1567291859743:labels = y_labels
1567291859744:) +
1567291859744:scale_fill_manual(values = customPalette) +
1567291859744:labs(x = "DB Size (bp)",
1567291859745:y = "Processed k-mers") +
1567291859745:publicationTheme()
1567291859745:+ theme(panel.grid.minor = element_blank())
1567291859746:)
1567291860722:(dataToPlot <- inData %>%
1567291860724:select(Scheme, Size,
1567291860724:"Alleles" = Total_alleles,
1567291860725:"k-mer searching" = Searching_time,
1567291860725:"Index loading"   = Index_loading_time,
1567291860726:"Whole typing process" = Total_time) %>%
1567291860726:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567291860727:)
1567291862102:x_lim <- c(6:10)
1567291862103:y_lim <- c(0,4)
1567291862104:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567291862110:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567291862118:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567291862119:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567291862121:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567291862122:scale_x_log10(expand = c(0,0),
1567291862122:breaks = 10^(x_lim),
1567291862123:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567291862123:limits = 10^(x_lim[c(1,length(x_lim))]),
1567291862124:labels = x_labels) +
1567291862125:# scale_y_log10(expand = c(0,0),
1567291862125:# 							breaks = 10^(y_lim),
1567291862126:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567291862127:# 							labels = y_labels
1567291862127:# ) +
1567291862128:scale_fill_manual(values = customPalette) +
1567291862128:scale_color_aaas(name = "Task") +
1567291862129:labs(x = "DB Size (bp)",
1567291862130:y = "Time (s)") +
1567291862130:publicationTheme()
1567291862131:+ theme(panel.grid.minor = element_blank())
1567291862132:)
1567291945991:3000/60
1567349812025:# MLST comparative test
1567349812091:# Install an load packages ------------------------------------------------
1567349812092:installAndLoadPackages <- function(pkg){
1567349812092:cat("Please wait a moment! Checking for required packages... ")
1567349812093:cat("Done!\n")
1567349812093:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567349812094:if (length(new.pkg)) {
1567349812094:cat("Installing new packages... ")
1567349812095:install.packages(new.pkg, dependencies = TRUE,
1567349812095:repos="http://cran.rstudio.com/")
1567349812096:cat("Done!\n")
1567349812097:}
1567349812097:cat("Loading packages... \n")
1567349812098:sapply(pkg, require, character.only = TRUE)
1567349812099:cat("Done!\n")
1567349812101:}
1567349812102:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567349812103:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567349812104:installAndLoadPackages(requiredPackages)
1567349825454:# Format bar annotation text ----------------------------------------------
1567349825455:getAnnotationText <- function(value){
1567349825455:lapply(value, function(x) {
1567349825456:result = ""
1567349825456:if (x != 1) {
1567349825457:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567349825457:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567349825458:}
1567349825458:result
1567349825459:})
1567349825459:}
1567349825460:# Sources -----------------------------------------------------------------
1567349825460:source(file = "scripts/ggplot_theme.R")
1567349825512:# Loading Data ------------------------------------------------------------
1567349825512:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567349825513:excel_sheets(inFile)
1567349825548:(inData <- read_excel(inFile, sheet = "data"))
1567349826386:# General configuration ---------------------------------------------------
1567349826387:saveFigures <- TRUE
1567349826388:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567349826388:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567349826389:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567349826389:generalPalette <- c(
1567349826390:"MLST"   = '#0a4f75',
1567349826390:"rMLST"  = '#FFB238',
1567349826391:"cgMLST" = '#91bbe4'
1567349826392:# , "MLST"    = '#d7e4f5'
1567349826392:# , "rMLST"   = '#FFD592'
1567349826393:)
1567349826394:show_col(generalPalette)
1567349826564:annotTextColors       <- c(axisColor, "#ffffff")
1567349826565:baseVariantFontFamily <- baseFontFamily
1567349826566:# Preparing data ----------------------------------------------------------
1567349826567:customPalette   <- generalPalette
1567349826568:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567349826589:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567349826590:(inData <- inData %>%
1567349826590:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567349827273:(dataToPlot <- inData)
1567349827438:# SChem DB Size Plot ------------------------------------------------
1567349827438:y_lim    <- seq(1,9, by = 2)
1567349827439:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567349827446:(dbSizePlot <-
1567349827446:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567349827447:fill = Scheme)) +
1567349827447:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567349827448:stat  = "identity",
1567349827448:position = position_dodge(width=0.9)
1567349827449:, show.legend = F
1567349827449:) +
1567349827449:scale_y_log10(expand = c(0,0),
1567349827450:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567349827450:limits = c(1, 1e+9*1.8),
1567349827451:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567349827451:) +
1567349827452:scale_fill_manual(values = rev(customPalette),
1567349827452:# labels = typeLabels,
1567349827453:name   = "Scheme"
1567349827453:) +
1567349827454:labs(x = "Scheme",
1567349827454:y = "DB Size (bp)") +
1567349827455:publicationTheme() +
1567349827456:barPlotCustomsVertical +
1567349827456:theme (axis.text.y = element_text(family = baseFontFamily))
1567349827457:)
1567349829157:# Useful reads per DB ---------------------------------------------------------------
1567349829158:x_lim <- c(6:10)
1567349829158:y_lim <- c(3:7)
1567349829159:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567349829174:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567349829190:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567349829191:geom_line(size = 1, color = "#666666") +
1567349829191:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567349829192:scale_x_log10(expand = c(0,0),
1567349829192:breaks = 10^(x_lim),
1567349829193:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567349829193:limits = 10^(x_lim[c(1,length(x_lim))]),
1567349829194:labels = x_labels) +
1567349829194:scale_y_log10(expand = c(0,0),
1567349829195:breaks = 10^(y_lim),
1567349829195:limits = c(1e+3, 1e+7),
1567349829198:labels = y_labels
1567349829199:) +
1567349829199:scale_fill_manual(values = customPalette) +
1567349829200:labs(x = "DB Size (bp)",
1567349829200:y = "Useful Reads") +
1567349829205:publicationTheme()
1567349829205:+ theme(panel.grid.minor = element_blank())
1567349829206:)
1567349831926:# Processed k-mers per DB ---------------------------------------------------------------
1567349831927:x_lim <- c(6:10)
1567349831927:y_lim <- c(5:9)
1567349831928:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567349831932:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567349831941:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567349831941:geom_line(size = 1, color = "#666666") +
1567349831942:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567349831942:scale_x_log10(expand = c(0,0),
1567349831943:breaks = 10^(x_lim),
1567349831944:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567349831944:limits = 10^(x_lim[c(1,length(x_lim))]),
1567349831944:labels = x_labels) +
1567349831945:scale_y_log10(expand = c(0,0),
1567349831945:breaks = 10^(y_lim),
1567349831945:limits = 10^(y_lim[c(1,length(y_lim))]),
1567349831946:labels = y_labels
1567349831946:) +
1567349831946:scale_fill_manual(values = customPalette) +
1567349831947:labs(x = "DB Size (bp)",
1567349831947:y = "Processed k-mers") +
1567349831948:publicationTheme()
1567349831948:+ theme(panel.grid.minor = element_blank())
1567349831948:)
1567349833521:# Runtime per DB ---------------------------------------------------------------
1567349833522:(dataToPlot <- inData %>%
1567349833522:select(Scheme, Size,
1567349833523:"Alleles" = Total_alleles,
1567349833523:"k-mer searching" = Searching_time,
1567349833524:"Index loading"   = Index_loading_time,
1567349833524:"Whole typing process" = Total_time) %>%
1567349833525:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567349833526:)
1567349834643:x_lim <- c(6:10)
1567349834644:y_lim <- c(0,4)
1567349834645:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567349834651:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567349834674:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567349834674:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567349834675:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567349834675:scale_x_log10(expand = c(0,0),
1567349834676:breaks = 10^(x_lim),
1567349834677:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567349834678:limits = 10^(x_lim[c(1,length(x_lim))]),
1567349834679:labels = x_labels) +
1567349834679:# scale_y_log10(expand = c(0,0),
1567349834680:# 							breaks = 10^(y_lim),
1567349834680:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567349834681:# 							labels = y_labels
1567349834681:# ) +
1567349834682:scale_fill_manual(values = customPalette) +
1567349834682:scale_color_aaas(name = "Task") +
1567349834683:labs(x = "DB Size (bp)",
1567349834683:y = "Time (s)") +
1567349834684:publicationTheme()
1567349834685:+ theme(panel.grid.minor = element_blank())
1567349834685:)
1567349835749:# Runtime per task and DB size --------------------------------------------
1567349835749:(dataToPlot <- inData %>%
1567349835750:select(Scheme, Size,
1567349835750:"Alleles" = Total_alleles,
1567349835750:"k-mer searching" = Searching_time,
1567349835751:"Index loading"   = Index_loading_time,
1567349835751:"Whole typing process" = Total_time) %>%
1567349835751:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567349835752:)
1567349837369:x_lim <- c(6:10)
1567349837370:y_lim <- c(0,4)
1567349837371:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567349837380:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567349837389:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567349837389:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567349837390:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567349837390:scale_x_log10(expand = c(0,0),
1567349837391:breaks = 10^(x_lim),
1567349837391:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567349837392:limits = 10^(x_lim[c(1,length(x_lim))]),
1567349837392:labels = x_labels) +
1567349837393:# scale_y_log10(expand = c(0,0),
1567349837393:# 							breaks = 10^(y_lim),
1567349837394:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567349837394:# 							labels = y_labels
1567349837395:# ) +
1567349837395:scale_fill_manual(values = customPalette) +
1567349837413:scale_color_aaas(name = "Task") +
1567349837414:labs(x = "DB Size (bp)",
1567349837414:y = "Time (s)") +
1567349837415:publicationTheme()
1567349837416:+ theme(panel.grid.minor = element_blank())
1567349837416:)
1567349945041:inData
1567350065242:(dataToPlot <- inData %>%
1567350065242:select(Scheme, Size, Processed_kmers,
1567350065243:"Alleles" = Total_alleles,
1567350065243:"k-mer searching" = Searching_time,
1567350065243:"Index loading"   = Index_loading_time,
1567350065243:"Whole typing process" = Total_time) %>%
1567350065244:gather("Time type", Time, -c("Scheme", "Size", "Alleles")) %>%
1567350065244:filter("Time type" = "k-mer searching")
1567350065244:)
1567350070268:(dataToPlot <- inData %>%
1567350070269:select(Scheme, Size, Processed_kmers,
1567350070270:"Alleles" = Total_alleles,
1567350070270:"k-mer searching" = Searching_time,
1567350070271:"Index loading"   = Index_loading_time,
1567350070271:"Whole typing process" = Total_time) %>%
1567350070273:gather("Time type", Time, -c("Scheme", "Size", "Alleles")) %>%
1567350070274:filter("Time type" == "k-mer searching")
1567350070275:)
1567350084010:dataToPlot
1567350179728:(dataToPlot <- inData %>%
1567350179728:select(Scheme, Size, Processed_kmers,
1567350179729:"Alleles" = Total_alleles,
1567350179730:"k-mer searching" = Searching_time,
1567350179730:"Index loading"   = Index_loading_time,
1567350179731:"Whole typing process" = Total_time) %>%
1567350179738:gather("Time type", Time, -c("Scheme", "Size", "Alleles")) %>%
1567350179739:filter(`Time type` == "k-mer searching")
1567350179740:)
1567350221286:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350221287:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350221288:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350221288:# scale_x_log10(expand = c(0,0),
1567350221289:# 							breaks = 10^(x_lim),
1567350221289:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350221290:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350221291:# 							labels = x_labels) +
1567350221291:# scale_y_log10(expand = c(0,0),
1567350221292:# 							breaks = 10^(y_lim),
1567350221293:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350221294:# 							labels = y_labels
1567350221294:# ) +
1567350221295:scale_fill_manual(values = customPalette) +
1567350221295:scale_color_aaas(name = "Task") +
1567350221298:labs(x = "DB Size (bp)",
1567350221299:y = "Time (s)") +
1567350221300:publicationTheme()
1567350221300:+ theme(panel.grid.minor = element_blank())
1567350221305:)
1567350228250:(dataToPlot <- inData %>%
1567350228251:select(Scheme, Size, Processed_kmers,
1567350228251:"Alleles" = Total_alleles,
1567350228252:"k-mer searching" = Searching_time,
1567350228252:"Index loading"   = Index_loading_time,
1567350228254:"Whole typing process" = Total_time) %>%
1567350228256:gather("Time type", Time, -c("Scheme", "Size", "Alleles")) %>%
1567350228258:filter(`Time type` == "k-mer searching")
1567350228259:)
1567350241342:(dataToPlot <- inData %>%
1567350241343:select(Scheme, Size, Processed_kmers,
1567350241344:"Alleles" = Total_alleles,
1567350241345:"k-mer searching" = Searching_time,
1567350241346:"Index loading"   = Index_loading_time,
1567350241348:"Whole typing process" = Total_time) %>%
1567350241349:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567350241350:filter(`Time type` == "k-mer searching")
1567350241350:)
1567350243760:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350243761:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350243762:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350243762:# scale_x_log10(expand = c(0,0),
1567350243763:# 							breaks = 10^(x_lim),
1567350243765:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350243766:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350243766:# 							labels = x_labels) +
1567350243767:# scale_y_log10(expand = c(0,0),
1567350243767:# 							breaks = 10^(y_lim),
1567350243768:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350243769:# 							labels = y_labels
1567350243770:# ) +
1567350243772:scale_fill_manual(values = customPalette) +
1567350243781:scale_color_aaas(name = "Task") +
1567350243782:labs(x = "DB Size (bp)",
1567350243785:y = "Time (s)") +
1567350243786:publicationTheme()
1567350243791:+ theme(panel.grid.minor = element_blank())
1567350243792:)
1567350269889:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350269889:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350269890:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350269890:# scale_x_log10(expand = c(0,0),
1567350269890:# 							breaks = 10^(x_lim),
1567350269891:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350269891:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350269892:# 							labels = x_labels) +
1567350269892:# scale_y_log10(expand = c(0,0),
1567350269892:# 							breaks = 10^(y_lim),
1567350269893:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350269893:# 							labels = y_labels
1567350269893:# ) +
1567350269893:scale_fill_manual(values = customPalette) +
1567350269894:scale_color_aaas(name = "Task") +
1567350269894:labs(x = "Porcessed k-mers",
1567350269894:y = "Time (s)") +
1567350269895:publicationTheme()
1567350269895:+ theme(panel.grid.minor = element_blank())
1567350269895:)
1567350293715:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350293716:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350293716:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350293717:scale_x_log10(expand = c(0,0)#,
1567350293717:# 							breaks = 10^(x_lim),
1567350293718:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350293719:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350293719:# 							labels = x_labels
1567350293720:) +
1567350293721:# scale_y_log10(expand = c(0,0),
1567350293722:# 							breaks = 10^(y_lim),
1567350293723:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350293724:# 							labels = y_labels
1567350293724:# ) +
1567350293725:scale_fill_manual(values = customPalette) +
1567350293726:scale_color_aaas(name = "Task") +
1567350293726:labs(x = "Porcessed k-mers",
1567350293727:y = "Time (s)") +
1567350293727:publicationTheme()
1567350293728:+ theme(panel.grid.minor = element_blank())
1567350293728:)
1567350401259:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350401260:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350401260:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350401261:# scale_x_log10(expand = c(0,0)#,
1567350401262:# 							breaks = 10^(x_lim),
1567350401263:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350401265:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350401266:# 							labels = x_labels
1567350401268:# ) +
1567350401269:# scale_y_log10(expand = c(0,0),
1567350401271:# 							breaks = 10^(y_lim),
1567350401277:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350401278:# 							labels = y_labels
1567350401278:# ) +
1567350401279:scale_fill_manual(values = customPalette) +
1567350401279:scale_color_aaas(name = "Task") +
1567350401281:labs(x = "Porcessed k-mers",
1567350401281:y = "Time (s)") +
1567350401282:publicationTheme()
1567350401283:+ theme(panel.grid.minor = element_blank())
1567350401283:)
1567350437920:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350437921:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350437921:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350437922:scale_x_log10(expand = c(0,0)#,
1567350437922:# 							breaks = 10^(x_lim),
1567350437923:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350437923:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350437924:# 							labels = x_labels
1567350437924:) +
1567350437925:# scale_y_log10(expand = c(0,0),
1567350437925:# 							breaks = 10^(y_lim),
1567350437926:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350437926:# 							labels = y_labels
1567350437927:# ) +
1567350437927:scale_fill_manual(values = customPalette) +
1567350437928:scale_color_aaas(name = "Task") +
1567350437929:labs(x = "Porcessed k-mers",
1567350437929:y = "Time (s)") +
1567350437933:publicationTheme()
1567350437933:+ theme(panel.grid.minor = element_blank())
1567350437934:)
1567350447316:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350447317:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350447317:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350447318:scale_x_log10(expand = c(0,0)#,
1567350447318:# 							breaks = 10^(x_lim),
1567350447319:# 							# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350447319:# 							limits = 10^(x_lim[c(1,length(x_lim))]),
1567350447319:# 							labels = x_labels
1567350447320:) +
1567350447320:# scale_y_log10(expand = c(0,0),
1567350447321:# 							breaks = 10^(y_lim),
1567350447321:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350447322:# 							labels = y_labels
1567350447322:# ) +
1567350447322:scale_fill_manual(values = customPalette) +
1567350447323:scale_color_aaas(name = "Task") +
1567350447323:labs(x = "Porcessed k-mers",
1567350447324:y = "Time (s)") +
1567350447324:publicationTheme()
1567350447324:+ theme(panel.grid.minor = element_blank())
1567350447333:)
1567350508109:dataToPlot
1567350562818:x_lim <- c(4:8)
1567350563799:y_lim <- c(0,4)
1567350564285:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567350565011:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567350583706:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350583706:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350583707:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350583707:scale_x_log10(expand = c(0,0)#,
1567350583708:breaks = 10^(x_lim),
1567350583709:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350583709:limits = 10^(x_lim[c(1,length(x_lim))]),
1567350583710:labels = x_labels
1567350583710:) +
1567350583711:# scale_y_log10(expand = c(0,0),
1567350583711:# 							breaks = 10^(y_lim),
1567350583712:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350583712:# 							labels = y_labels
1567350583713:# ) +
1567350583713:scale_fill_manual(values = customPalette) +
1567350583714:scale_color_aaas(name = "Task") +
1567350583714:labs(x = "Porcessed k-mers",
1567350583715:y = "Time (s)") +
1567350583716:publicationTheme()
1567350583718:+ theme(panel.grid.minor = element_blank())
1567350583720:)
1567350587752:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350587753:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350587753:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350587754:scale_x_log10(expand = c(0,0),
1567350587755:breaks = 10^(x_lim),
1567350587755:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350587756:limits = 10^(x_lim[c(1,length(x_lim))]),
1567350587757:labels = x_labels
1567350587757:) +
1567350587758:# scale_y_log10(expand = c(0,0),
1567350587759:# 							breaks = 10^(y_lim),
1567350587760:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350587761:# 							labels = y_labels
1567350587762:# ) +
1567350587764:scale_fill_manual(values = customPalette) +
1567350587765:scale_color_aaas(name = "Task") +
1567350587765:labs(x = "Porcessed k-mers",
1567350587766:y = "Time (s)") +
1567350587767:publicationTheme()
1567350587767:+ theme(panel.grid.minor = element_blank())
1567350587768:)
1567350597884:x_lim <- c(4:9)
1567350598086:y_lim <- c(0,4)
1567350598258:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567350598531:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567350625778:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350625778:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350625779:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350625779:scale_x_log10(expand = c(0,0),
1567350625780:breaks = 10^(x_lim),
1567350625780:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350625781:limits = 10^(x_lim[c(4,length(x_lim))]),
1567350625782:labels = x_labels
1567350625782:) +
1567350625783:# scale_y_log10(expand = c(0,0),
1567350625784:# 							breaks = 10^(y_lim),
1567350625785:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350625789:# 							labels = y_labels
1567350625790:# ) +
1567350625790:scale_fill_manual(values = customPalette) +
1567350625795:scale_color_aaas(name = "Task") +
1567350625796:labs(x = "Porcessed k-mers",
1567350625797:y = "Time (s)") +
1567350625798:publicationTheme()
1567350625798:+ theme(panel.grid.minor = element_blank())
1567350625799:)
1567350634313:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350634313:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350634314:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350634314:scale_x_log10(expand = c(0,0),
1567350634315:breaks = 10^(x_lim),
1567350634316:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350634317:limits = 10^(x_lim[c(3,length(x_lim))]),
1567350634318:labels = x_labels
1567350634318:) +
1567350634319:# scale_y_log10(expand = c(0,0),
1567350634319:# 							breaks = 10^(y_lim),
1567350634320:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350634321:# 							labels = y_labels
1567350634321:# ) +
1567350634322:scale_fill_manual(values = customPalette) +
1567350634323:scale_color_aaas(name = "Task") +
1567350634327:labs(x = "Porcessed k-mers",
1567350634328:y = "Time (s)") +
1567350634329:publicationTheme()
1567350634329:+ theme(panel.grid.minor = element_blank())
1567350634330:)
1567350642484:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567350642485:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567350642485:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567350642486:scale_x_log10(expand = c(0,0),
1567350642487:breaks = 10^(x_lim),
1567350642488:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567350642489:limits = 10^(x_lim[c(2,length(x_lim))]),
1567350642490:labels = x_labels
1567350642491:) +
1567350642491:# scale_y_log10(expand = c(0,0),
1567350642492:# 							breaks = 10^(y_lim),
1567350642493:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567350642494:# 							labels = y_labels
1567350642495:# ) +
1567350642497:scale_fill_manual(values = customPalette) +
1567350642498:scale_color_aaas(name = "Task") +
1567350642498:labs(x = "Porcessed k-mers",
1567350642499:y = "Time (s)") +
1567350642501:publicationTheme()
1567350642502:+ theme(panel.grid.minor = element_blank())
1567350642502:)
1567350780768:show_col(pal_aaas())
1567350877038:mypal = pal_aaas("default")(9)
1567350877700:show_col(pal_aaas())
1567350887496:pal_aaas("default")(9)
1567350896067:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567350896067:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567350899338:installAndLoadPackages(requiredPackages)
1567350941566:pal_aaas("default")
1567350953561:pal_aaas()
1567350956998:al_aaas()(9)
1567350961331:pal_aaas()(9)
1567350965863:mypal = pal_aaas()(9)
1567350967902:show_col(pal_aaas())
1567350972828:show_col(mypal)
1567351007173:mypal
1567351017475:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567351017476:geom_line(aes(color = `Time type`), size = 1, color = "#EE0000FF") +
1567351017476:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351017477:scale_x_log10(expand = c(0,0),
1567351017478:breaks = 10^(x_lim),
1567351017479:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351017479:limits = 10^(x_lim[c(2,length(x_lim))]),
1567351017480:labels = x_labels
1567351017481:) +
1567351017483:# scale_y_log10(expand = c(0,0),
1567351017484:# 							breaks = 10^(y_lim),
1567351017490:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351017491:# 							labels = y_labels
1567351017491:# ) +
1567351017492:scale_fill_manual(values = customPalette) +
1567351017493:scale_color_aaas(name = "Task") +
1567351017494:labs(x = "Porcessed k-mers",
1567351017494:y = "Time (s)") +
1567351017495:publicationTheme()
1567351017495:+ theme(panel.grid.minor = element_blank())
1567351017496:)
1567351056286:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567351056286:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567351056287:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351056287:scale_x_log10(expand = c(0,0),
1567351056288:breaks = 10^(x_lim),
1567351056288:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351056289:limits = 10^(x_lim[c(2,length(x_lim))]),
1567351056290:labels = x_labels
1567351056290:) +
1567351056291:# scale_y_log10(expand = c(0,0),
1567351056292:# 							breaks = 10^(y_lim),
1567351056292:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351056293:# 							labels = y_labels
1567351056293:# ) +
1567351056294:scale_fill_manual(values = customPalette) +
1567351056298:scale_color_aaas(name = "Task") +
1567351056300:labs(x = "Porcessed k-mers",
1567351056301:y = "Time (s)") +
1567351056301:publicationTheme()
1567351056302:+ theme(panel.grid.minor = element_blank())
1567351056303:)
1567351085997:(runtimePlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567351085997:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567351085997:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351085998:scale_x_log10(expand = c(0,0),
1567351085998:breaks = 10^(x_lim),
1567351085999:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351085999:limits = 10^(x_lim[c(2,length(x_lim))]),
1567351085999:labels = x_labels
1567351086000:) +
1567351086000:# scale_y_log10(expand = c(0,0),
1567351086001:# 							breaks = 10^(y_lim),
1567351086001:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351086001:# 							labels = y_labels
1567351086002:# ) +
1567351086002:scale_fill_manual(values = customPalette) +
1567351086003:# scale_color_aaas(name = "Task") +
1567351086003:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567351086004:labs(x = "Porcessed k-mers",
1567351086004:y = "Time (s)") +
1567351086005:publicationTheme()
1567351086006:+ theme(panel.grid.minor = element_blank())
1567351086007:)
1567351153442:runtimePlot
1567351175346:(dataToPlot <- inData %>%
1567351175347:select(Scheme, Size, Processed_kmers,
1567351175347:"Alleles" = Total_alleles,
1567351175348:"k-mer searching" = Searching_time,
1567351175349:"Index loading"   = Index_loading_time,
1567351175349:"Whole typing process" = Total_time) %>%
1567351175350:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567351175351:filter(`Time type` == "k-mer searching")
1567351175353:)
1567351175813:x_lim <- c(4:9)
1567351176150:y_lim <- c(0,4)
1567351176274:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351176519:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351176840:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567351176840:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567351176841:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351176841:scale_x_log10(expand = c(0,0),
1567351176842:breaks = 10^(x_lim),
1567351176843:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351176843:limits = 10^(x_lim[c(2,length(x_lim))]),
1567351176844:labels = x_labels
1567351176844:) +
1567351176856:# scale_y_log10(expand = c(0,0),
1567351176857:# 							breaks = 10^(y_lim),
1567351176858:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351176859:# 							labels = y_labels
1567351176865:# ) +
1567351176866:scale_fill_manual(values = customPalette) +
1567351176867:# scale_color_aaas(name = "Task") +
1567351176867:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567351176868:labs(x = "Porcessed k-mers",
1567351176873:y = "Time (s)") +
1567351176874:publicationTheme()
1567351176875:+ theme(panel.grid.minor = element_blank())
1567351176878:)
1567351182965:# Runtime per Task and DB -----------------------------------------------------
1567351182966:(dataToPlot <- inData %>%
1567351182966:select(Scheme, Size,
1567351182967:"Alleles" = Total_alleles,
1567351182967:"k-mer searching" = Searching_time,
1567351182968:"Index loading"   = Index_loading_time,
1567351182968:"Whole typing process" = Total_time) %>%
1567351182969:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567351182969:)
1567351183272:x_lim <- c(6:10)
1567351183274:y_lim <- c(0,4)
1567351183275:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351183284:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351183292:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567351183293:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567351183294:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351183297:scale_x_log10(expand = c(0,0),
1567351183297:breaks = 10^(x_lim),
1567351183298:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351183299:limits = 10^(x_lim[c(1,length(x_lim))]),
1567351183300:labels = x_labels) +
1567351183300:# scale_y_log10(expand = c(0,0),
1567351183301:# 							breaks = 10^(y_lim),
1567351183302:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351183302:# 							labels = y_labels
1567351183303:# ) +
1567351183304:scale_fill_manual(values = customPalette) +
1567351183305:scale_color_aaas(name = "Task") +
1567351183305:labs(x = "DB Size (bp)",
1567351183306:y = "Time (s)") +
1567351183307:publicationTheme()
1567351183307:+ theme(panel.grid.minor = element_blank())
1567351183308:)
1567351196291:# MLST comparative test
1567351196292:# Install an load packages ------------------------------------------------
1567351196292:installAndLoadPackages <- function(pkg){
1567351196293:cat("Please wait a moment! Checking for required packages... ")
1567351196293:cat("Done!\n")
1567351196293:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567351196294:if (length(new.pkg)) {
1567351196295:cat("Installing new packages... ")
1567351196295:install.packages(new.pkg, dependencies = TRUE,
1567351196296:repos="http://cran.rstudio.com/")
1567351196296:cat("Done!\n")
1567351196297:}
1567351196297:cat("Loading packages... \n")
1567351196298:sapply(pkg, require, character.only = TRUE)
1567351196299:cat("Done!\n")
1567351196299:}
1567351196301:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567351196301:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567351196305:installAndLoadPackages(requiredPackages)
1567351196312:# Format bar annotation text ----------------------------------------------
1567351196312:getAnnotationText <- function(value){
1567351196314:lapply(value, function(x) {
1567351196314:result = ""
1567351196315:if (x != 1) {
1567351196316:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567351196316:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567351196317:}
1567351196318:result
1567351196318:})
1567351196320:}
1567351196321:# Sources -----------------------------------------------------------------
1567351196322:source(file = "scripts/ggplot_theme.R")
1567351196402:# Loading Data ------------------------------------------------------------
1567351196403:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567351196404:excel_sheets(inFile)
1567351196445:(inData <- read_excel(inFile, sheet = "data"))
1567351196988:# General configuration ---------------------------------------------------
1567351196988:saveFigures <- TRUE
1567351196989:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567351196989:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567351196990:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567351196990:generalPalette <- c(
1567351196991:"MLST"   = '#0a4f75',
1567351196991:"rMLST"  = '#FFB238',
1567351196991:"cgMLST" = '#91bbe4'
1567351196992:# , "MLST"    = '#d7e4f5'
1567351196992:# , "rMLST"   = '#FFD592'
1567351196992:)
1567351196993:show_col(generalPalette)
1567351197022:annotTextColors       <- c(axisColor, "#ffffff")
1567351197023:baseVariantFontFamily <- baseFontFamily
1567351197024:# Preparing data ----------------------------------------------------------
1567351197025:customPalette   <- generalPalette
1567351197026:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567351197027:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567351197028:(inData <- inData %>%
1567351197028:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567351198146:(dataToPlot <- inData)
1567351198383:# SChem DB Size Plot ------------------------------------------------
1567351198383:y_lim    <- seq(1,9, by = 2)
1567351198384:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351198390:(dbSizePlot <-
1567351198390:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567351198391:fill = Scheme)) +
1567351198391:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567351198391:stat  = "identity",
1567351198392:position = position_dodge(width=0.9)
1567351198392:, show.legend = F
1567351198392:) +
1567351198393:scale_y_log10(expand = c(0,0),
1567351198393:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567351198393:limits = c(1, 1e+9*1.8),
1567351198394:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567351198394:) +
1567351198395:scale_fill_manual(values = rev(customPalette),
1567351198395:# labels = typeLabels,
1567351198396:name   = "Scheme"
1567351198397:) +
1567351198397:labs(x = "Scheme",
1567351198398:y = "DB Size (bp)") +
1567351198398:publicationTheme() +
1567351198399:barPlotCustomsVertical +
1567351198400:theme (axis.text.y = element_text(family = baseFontFamily))
1567351198400:)
1567351199143:# Useful reads per DB ---------------------------------------------------------------
1567351199144:x_lim <- c(6:10)
1567351199145:y_lim <- c(3:7)
1567351199146:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351199163:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351199177:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567351199183:geom_line(size = 1, color = "#666666") +
1567351199184:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351199184:scale_x_log10(expand = c(0,0),
1567351199185:breaks = 10^(x_lim),
1567351199185:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351199186:limits = 10^(x_lim[c(1,length(x_lim))]),
1567351199186:labels = x_labels) +
1567351199187:scale_y_log10(expand = c(0,0),
1567351199187:breaks = 10^(y_lim),
1567351199188:limits = c(1e+3, 1e+7),
1567351199194:labels = y_labels
1567351199194:) +
1567351199195:scale_fill_manual(values = customPalette) +
1567351199195:labs(x = "DB Size (bp)",
1567351199196:y = "Useful Reads") +
1567351199197:publicationTheme()
1567351199198:+ theme(panel.grid.minor = element_blank())
1567351199201:)
1567351200551:# Processed k-mers per DB ---------------------------------------------------------------
1567351200552:x_lim <- c(6:10)
1567351200552:y_lim <- c(5:9)
1567351200553:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351200559:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351200564:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567351200565:geom_line(size = 1, color = "#666666") +
1567351200565:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351200566:scale_x_log10(expand = c(0,0),
1567351200566:breaks = 10^(x_lim),
1567351200567:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351200567:limits = 10^(x_lim[c(1,length(x_lim))]),
1567351200567:labels = x_labels) +
1567351200568:scale_y_log10(expand = c(0,0),
1567351200568:breaks = 10^(y_lim),
1567351200568:limits = 10^(y_lim[c(1,length(y_lim))]),
1567351200569:labels = y_labels
1567351200569:) +
1567351200570:scale_fill_manual(values = customPalette) +
1567351200571:labs(x = "DB Size (bp)",
1567351200571:y = "Processed k-mers") +
1567351200572:publicationTheme()
1567351200572:+ theme(panel.grid.minor = element_blank())
1567351200573:)
1567351202447:# Runtime per Task and DB -----------------------------------------------------
1567351202447:(dataToPlot <- inData %>%
1567351202448:select(Scheme, Size,
1567351202448:"Alleles" = Total_alleles,
1567351202448:"k-mer searching" = Searching_time,
1567351202449:"Index loading"   = Index_loading_time,
1567351202449:"Whole typing process" = Total_time) %>%
1567351202449:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567351202455:)
1567351204356:x_lim <- c(6:10)
1567351204357:y_lim <- c(0,4)
1567351204358:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351204363:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351204371:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567351204371:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567351204371:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351204372:scale_x_log10(expand = c(0,0),
1567351204372:breaks = 10^(x_lim),
1567351204372:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351204373:limits = 10^(x_lim[c(1,length(x_lim))]),
1567351204373:labels = x_labels) +
1567351204373:# scale_y_log10(expand = c(0,0),
1567351204374:# 							breaks = 10^(y_lim),
1567351204374:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351204375:# 							labels = y_labels
1567351204375:# ) +
1567351204376:scale_fill_manual(values = customPalette) +
1567351204376:scale_color_aaas(name = "Task") +
1567351204376:labs(x = "DB Size (bp)",
1567351204377:y = "Time (s)") +
1567351204377:publicationTheme()
1567351204378:+ theme(panel.grid.minor = element_blank())
1567351204378:)
1567351221201:(dataToPlot <- inData %>%
1567351221201:select(Scheme, Size, Processed_kmers,
1567351221202:"Alleles" = Total_alleles,
1567351221202:"k-mer searching" = Searching_time,
1567351221203:"Index loading"   = Index_loading_time,
1567351221203:"Whole typing process" = Total_time) %>%
1567351221204:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567351221204:filter(`Time type` == "k-mer searching")
1567351221205:)
1567351221359:x_lim <- c(4:9)
1567351221360:y_lim <- c(0,4)
1567351221361:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351221371:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351221378:# mypal = pal_aaas()(9)
1567351221378:# show_col(mypal)
1567351221379:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567351221379:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567351221380:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351221380:scale_x_log10(expand = c(0,0),
1567351221380:breaks = 10^(x_lim),
1567351221381:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351221382:limits = 10^(x_lim[c(2,length(x_lim))]),
1567351221383:labels = x_labels
1567351221384:) +
1567351221384:# scale_y_log10(expand = c(0,0),
1567351221385:# 							breaks = 10^(y_lim),
1567351221385:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351221386:# 							labels = y_labels
1567351221386:# ) +
1567351221387:scale_fill_manual(values = customPalette) +
1567351221388:# scale_color_aaas(name = "Task") +
1567351221389:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567351221389:labs(x = "Porcessed k-mers",
1567351221390:y = "Time (s)") +
1567351221391:publicationTheme()
1567351221392:+ theme(panel.grid.minor = element_blank())
1567351221393:)
1567351236994:(dataToPlot <- inData %>%
1567351236995:select(Scheme, Size, Processed_kmers,
1567351236995:"Alleles" = Total_alleles,
1567351236996:"k-mer searching" = Searching_time,
1567351236997:"Index loading"   = Index_loading_time,
1567351236997:"Whole typing process" = Total_time) %>%
1567351236998:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567351236999:filter(`Time type` == "k-mer searching")
1567351236999:)
1567351237151:x_lim <- c(4:9)
1567351237151:y_lim <- c(0,4)
1567351237152:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567351237161:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567351237170:# mypal = pal_aaas()(9)
1567351237172:# show_col(mypal)
1567351237173:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567351237173:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567351237174:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567351237174:scale_x_log10(expand = c(0,0),
1567351237175:breaks = 10^(x_lim),
1567351237175:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567351237176:limits = 10^(x_lim[c(2,length(x_lim))]),
1567351237176:labels = x_labels
1567351237177:) +
1567351237177:# scale_y_log10(expand = c(0,0),
1567351237178:# 							breaks = 10^(y_lim),
1567351237178:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567351237179:# 							labels = y_labels
1567351237179:# ) +
1567351237180:scale_fill_manual(values = customPalette) +
1567351237181:# scale_color_aaas(name = "Task") +
1567351237181:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567351237182:labs(x = "Porcessed k-mers",
1567351237182:y = "Time (s)") +
1567351237183:publicationTheme()
1567351237184:+ theme(panel.grid.minor = element_blank())
1567351237185:)
1567360943734:# MLST comparative test
1567360943736:# Install an load packages ------------------------------------------------
1567360943736:installAndLoadPackages <- function(pkg){
1567360943743:cat("Please wait a moment! Checking for required packages... ")
1567360943744:cat("Done!\n")
1567360943744:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567360943745:if (length(new.pkg)) {
1567360943745:cat("Installing new packages... ")
1567360943746:install.packages(new.pkg, dependencies = TRUE,
1567360943746:repos="http://cran.rstudio.com/")
1567360943746:cat("Done!\n")
1567360943747:}
1567360943747:cat("Loading packages... \n")
1567360943747:sapply(pkg, require, character.only = TRUE)
1567360943748:cat("Done!\n")
1567360943748:}
1567360943749:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567360943749:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567360943753:installAndLoadPackages(requiredPackages)
1567360949641:# Format bar annotation text ----------------------------------------------
1567360949641:getAnnotationText <- function(value){
1567360949642:lapply(value, function(x) {
1567360949642:result = ""
1567360949643:if (x != 1) {
1567360949643:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567360949644:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567360949644:}
1567360949645:result
1567360949645:})
1567360949646:}
1567360949648:# Sources -----------------------------------------------------------------
1567360949648:source(file = "scripts/ggplot_theme.R")
1567360949713:# Loading Data ------------------------------------------------------------
1567360949714:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567360949714:excel_sheets(inFile)
1567360949740:(inData <- read_excel(inFile, sheet = "data"))
1567360950396:# General configuration ---------------------------------------------------
1567360950396:saveFigures <- TRUE
1567360950397:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567360950397:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567360950398:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567360950398:generalPalette <- c(
1567360950398:"MLST"   = '#0a4f75',
1567360950399:"rMLST"  = '#FFB238',
1567360950399:"cgMLST" = '#91bbe4'
1567360950400:# , "MLST"    = '#d7e4f5'
1567360950401:# , "rMLST"   = '#FFD592'
1567360950401:)
1567360950402:show_col(generalPalette)
1567360950524:annotTextColors       <- c(axisColor, "#ffffff")
1567360950525:baseVariantFontFamily <- baseFontFamily
1567360950527:# Preparing data ----------------------------------------------------------
1567360950528:customPalette   <- generalPalette
1567360950529:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567360950530:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567360950531:(inData <- inData %>%
1567360950532:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567360951144:(dataToPlot <- inData)
1567360951557:# SChem DB Size Plot ------------------------------------------------
1567360951557:y_lim    <- seq(1,9, by = 2)
1567360951577:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567360951595:(dbSizePlot <-
1567360951596:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567360951596:fill = Scheme)) +
1567360951597:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567360951597:stat  = "identity",
1567360951598:position = position_dodge(width=0.9)
1567360951598:, show.legend = F
1567360951599:) +
1567360951599:scale_y_log10(expand = c(0,0),
1567360951600:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567360951608:limits = c(1, 1e+9*1.8),
1567360951609:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567360951610:) +
1567360951623:scale_fill_manual(values = rev(customPalette),
1567360951623:# labels = typeLabels,
1567360951624:name   = "Scheme"
1567360951625:) +
1567360951626:labs(x = "Scheme",
1567360951626:y = "DB Size (bp)") +
1567360951627:publicationTheme() +
1567360951628:barPlotCustomsVertical +
1567360951628:theme (axis.text.y = element_text(family = baseFontFamily))
1567360951629:)
1567360953527:# Useful reads per DB ---------------------------------------------------------------
1567360953528:x_lim <- c(6:10)
1567360953528:y_lim <- c(3:7)
1567360953529:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567360953534:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567360953539:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567360953539:geom_line(size = 1, color = "#666666") +
1567360953540:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567360953540:scale_x_log10(expand = c(0,0),
1567360953540:breaks = 10^(x_lim),
1567360953541:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567360953541:limits = 10^(x_lim[c(1,length(x_lim))]),
1567360953541:labels = x_labels) +
1567360953542:scale_y_log10(expand = c(0,0),
1567360953542:breaks = 10^(y_lim),
1567360953543:limits = c(1e+3, 1e+7),
1567360953543:labels = y_labels
1567360953543:) +
1567360953544:scale_fill_manual(values = customPalette) +
1567360953544:labs(x = "DB Size (bp)",
1567360953544:y = "Useful Reads") +
1567360953545:publicationTheme()
1567360953545:+ theme(panel.grid.minor = element_blank())
1567360953546:)
1567360956732:# Processed k-mers per DB ---------------------------------------------------------------
1567360956733:x_lim <- c(6:10)
1567360956733:y_lim <- c(5:9)
1567360956734:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567360956745:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567360956754:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567360956754:geom_line(size = 1, color = "#666666") +
1567360956755:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567360956755:scale_x_log10(expand = c(0,0),
1567360956756:breaks = 10^(x_lim),
1567360956757:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567360956757:limits = 10^(x_lim[c(1,length(x_lim))]),
1567360956758:labels = x_labels) +
1567360956758:scale_y_log10(expand = c(0,0),
1567360956759:breaks = 10^(y_lim),
1567360956760:limits = 10^(y_lim[c(1,length(y_lim))]),
1567360956760:labels = y_labels
1567360956761:) +
1567360956762:scale_fill_manual(values = customPalette) +
1567360956762:labs(x = "DB Size (bp)",
1567360956763:y = "Processed k-mers") +
1567360956764:publicationTheme()
1567360956764:+ theme(panel.grid.minor = element_blank())
1567360956765:)
1567360958883:# Runtime per Task and DB -----------------------------------------------------
1567360958884:(dataToPlot <- inData %>%
1567360958884:select(Scheme, Size,
1567360958885:"Alleles" = Total_alleles,
1567360958885:"k-mer searching" = Searching_time,
1567360958886:"Index loading"   = Index_loading_time,
1567360958886:"Whole typing process" = Total_time) %>%
1567360958887:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567360958888:)
1567360959900:x_lim <- c(6:10)
1567360959901:y_lim <- c(0,4)
1567360959902:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567360959910:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567360959916:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567360959916:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567360959917:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567360959917:scale_x_log10(expand = c(0,0),
1567360959917:breaks = 10^(x_lim),
1567360959918:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567360959918:limits = 10^(x_lim[c(1,length(x_lim))]),
1567360959919:labels = x_labels) +
1567360959920:# scale_y_log10(expand = c(0,0),
1567360959921:# 							breaks = 10^(y_lim),
1567360959922:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567360959922:# 							labels = y_labels
1567360959922:# ) +
1567360959923:scale_fill_manual(values = customPalette) +
1567360959923:scale_color_aaas(name = "Task") +
1567360959923:labs(x = "DB Size (bp)",
1567360959924:y = "Time (s)") +
1567360959924:publicationTheme()
1567360959924:+ theme(panel.grid.minor = element_blank())
1567360959925:)
1567360960960:# Runtime per processed k-mers and DB size ------------------------------------
1567360960961:(dataToPlot <- inData %>%
1567360960961:select(Scheme, Size, Processed_kmers,
1567360960962:"Alleles" = Total_alleles,
1567360960962:"k-mer searching" = Searching_time,
1567360960962:"Index loading"   = Index_loading_time,
1567360960963:"Whole typing process" = Total_time) %>%
1567360960963:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567360960964:filter(`Time type` == "k-mer searching")
1567360960964:)
1567360962258:x_lim <- c(4:9)
1567360962259:y_lim <- c(0,4)
1567360962259:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567360962265:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567360962271:# mypal = pal_aaas()(9)
1567360962271:# show_col(mypal)
1567360962272:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567360962272:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567360962273:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567360962273:scale_x_log10(expand = c(0,0),
1567360962274:breaks = 10^(x_lim),
1567360962274:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567360962274:limits = 10^(x_lim[c(2,length(x_lim))]),
1567360962275:labels = x_labels
1567360962275:) +
1567360962276:# scale_y_log10(expand = c(0,0),
1567360962276:# 							breaks = 10^(y_lim),
1567360962277:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567360962277:# 							labels = y_labels
1567360962278:# ) +
1567360962278:scale_fill_manual(values = customPalette) +
1567360962279:# scale_color_aaas(name = "Task") +
1567360962280:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567360962280:labs(x = "Porcessed k-mers",
1567360962280:y = "Time (s)") +
1567360962281:publicationTheme()
1567360962281:+ theme(panel.grid.minor = element_blank())
1567360962282:)
1567361555703:(combinedPlot <- plot_grid(usefulReadsPlot,
1567361555703:processedKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361555704:runtimePlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361555705:runtimeKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361555705:labels = c('A', 'B', 'C', 'D', 'E'),
1567361555706:align = 'h', axis = 'tb',
1567361555711:# hjust = -0.2,
1567361555713:label_size = baseTextSize * 1.2,
1567361555713:ncol = 3, nrow = 3
1567361555714:# , rel_widths = c(1, 0.65, 0.65)
1567361555715:)
1567361555715:)
1567361588239:(combinedPlot <- plot_grid(usefulReadsPlot,
1567361588239:processedKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361588240:runtimePlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361588241:runtimeKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361588241:labels = c('A', 'B', 'C', 'D', 'E'),
1567361588242:align = 'h', axis = 'tb',
1567361588243:# hjust = -0.2,
1567361588243:label_size = baseTextSize * 1.2,
1567361588244:ncol = 2, nrow = 2
1567361588245:# , rel_widths = c(1, 0.65, 0.65)
1567361588246:)
1567361588246:)
1567361864610:row2Plot <- plot_grid(usefulReadsPlot,
1567361864611:processedKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361864611:labels = c('B', 'C'),
1567361864611:align = 'h', axis = 'tb',
1567361864612:# hjust = -0.2,
1567361864612:label_size = baseTextSize * 1.2,
1567361864613:ncol = 2
1567361864613:# , rel_widths = c(1, 0.65, 0.65)
1567361864614:)
1567361895608:(row2Plot <- plot_grid(usefulReadsPlot,
1567361895608:processedKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567361895609:labels = c('B', 'C'),
1567361895609:align = 'h', axis = 'tb',
1567361895610:# hjust = -0.2,
1567361895610:label_size = baseTextSize * 1.2,
1567361895611:ncol = 2
1567361895612:# , rel_widths = c(1, 0.65, 0.65)
1567361895613:))
1567361929848:row2Plot
1567362052821:(row3Plot <- plot_grid(runtimePlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362052822:runtimeKmersPlot,# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362052823:labels = c('D', 'E'),
1567362052824:align = 'h', axis = 'tb',
1567362052825:# hjust = -0.2,
1567362052825:label_size = baseTextSize * 1.2,
1567362052826:ncol = 2
1567362052827:# , rel_widths = c(1, 0.65, 0.65)
1567362052827:))
1567362322801:row3Plot
1567362334148:row2Plot
1567362563898:# Combined plot -----------------------------------------------------------
1567362563899:legend1 <- get_legend(usefulReadsPlot)
1567362565328:(row2Plot <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362565329:processedKmersPlot, + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362565329:legend1,
1567362565330:labels = c('B', 'C'),
1567362565331:align = 'h', axis = 'tb',
1567362565331:# hjust = -0.2,
1567362565332:label_size = baseTextSize * 1.2,
1567362565333:ncol = 3
1567362565333:# , rel_widths = c(1, 0.65, 0.65)
1567362565334:))
1567362576072:(row2Plot <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362576073:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362576073:legend1,
1567362576074:labels = c('B', 'C'),
1567362576074:align = 'h', axis = 'tb',
1567362576075:# hjust = -0.2,
1567362576076:label_size = baseTextSize * 1.2,
1567362576076:ncol = 3
1567362576077:# , rel_widths = c(1, 0.65, 0.65)
1567362576078:))
1567362581283:# Combined plot -----------------------------------------------------------
1567362581284:legend1 <- get_legend(usefulReadsPlot)
1567362583258:legend1
1567362588790:(row2Plot <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362588790:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362588791:legend1,
1567362588791:labels = c('B', 'C'),
1567362588791:align = 'h', axis = 'tb',
1567362588792:# hjust = -0.2,
1567362588792:label_size = baseTextSize * 1.2,
1567362588793:ncol = 3
1567362588793:# , rel_widths = c(1, 0.65, 0.65)
1567362588794:))
1567362600349:# Combined plot -----------------------------------------------------------
1567362600350:legend1 <- get_legend(usefulReadsPlot)
1567362601071:(row2Plot <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362601072:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362601073:legend1,
1567362601073:labels = c('B', 'C', ''),
1567362601074:align = 'h', axis = 'tb',
1567362601074:# hjust = -0.2,
1567362601075:label_size = baseTextSize * 1.2,
1567362601075:ncol = 3
1567362601076:# , rel_widths = c(1, 0.65, 0.65)
1567362601076:))
1567362662658:(row2Plot <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362662659:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362662659:labels = c('B', 'C', ''),
1567362662660:align = 'h', axis = 'tb',
1567362662665:# hjust = -0.2,
1567362662666:label_size = baseTextSize * 1.2,
1567362662667:ncol = 2
1567362662667:# , rel_widths = c(1, 0.65, 0.65)
1567362662668:))
1567362667716:(row2Plot <- plot_grid(row2Plot,
1567362667717:legend1,
1567362667718:# labels = c('B', 'C', ''),
1567362667718:# align = 'h', axis = 'tb',
1567362667719:# hjust = -0.2,
1567362667719:# label_size = baseTextSize * 1.2,
1567362667720:ncol = 2
1567362667720:, rel_widths = c(1, 1)
1567362667721:))
1567362713399:legend1 <- get_legend(usefulReadsPlot)
1567362713774:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362713774:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362713775:labels = c('B', 'C', ''),
1567362713775:align = 'h', axis = 'tb',
1567362713776:# hjust = -0.2,
1567362713776:label_size = baseTextSize * 1.2,
1567362713776:ncol = 2
1567362713777:# , rel_widths = c(1, 0.65, 0.65)
1567362713777:))
1567362715518:(row2 <- plot_grid(row2Plots,
1567362715518:legend1,
1567362715519:# labels = c('B', 'C', ''),
1567362715520:# align = 'h', axis = 'tb',
1567362715520:# hjust = -0.2,
1567362715521:# label_size = baseTextSize * 1.2,
1567362715522:ncol = 2
1567362715522:, rel_widths = c(1, 0.2)
1567362715523:))
1567362737319:(row2 <- plot_grid(row2Plots,
1567362737320:legend1,
1567362737321:# labels = c('B', 'C', ''),
1567362737321:# align = 'h', axis = 'tb',
1567362737322:# hjust = -0.2,
1567362737322:# label_size = baseTextSize * 1.2,
1567362737323:ncol = 2
1567362737323:, rel_widths = c(1, 0.1)
1567362737324:))
1567362747434:(row2 <- plot_grid(row2Plots,
1567362747435:legend1,
1567362747436:# labels = c('B', 'C', ''),
1567362747436:# align = 'h', axis = 'tb',
1567362747437:# hjust = -0.2,
1567362747437:# label_size = baseTextSize * 1.2,
1567362747438:ncol = 2
1567362747438:, rel_widths = c(1, 0.15)
1567362747439:))
1567362858068:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362858069:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362858069:labels = c('B', 'C', ''),
1567362858070:label_y = 0,
1567362858070:align = 'h', axis = 'tb',
1567362858071:# hjust = -0.2,
1567362858071:label_size = baseTextSize * 1.2,
1567362858071:ncol = 2
1567362858072:# , rel_widths = c(1, 0.65, 0.65)
1567362858072:))
1567362882956:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362882957:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362882958:labels = c('B', 'C', ''),
1567362882958:label_y = 1,
1567362882959:align = 'h', axis = 'tb',
1567362882959:# hjust = -0.2,
1567362882960:label_size = baseTextSize * 1.2,
1567362882961:ncol = 2
1567362882961:# , rel_widths = c(1, 0.65, 0.65)
1567362882962:))
1567362894791:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362894792:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362894793:labels = c('B', 'C', ''),
1567362894793:label_y = c(1,1)
1567362894794:align = 'h', axis = 'tb',
1567362894795:# hjust = -0.2,
1567362894795:label_size = baseTextSize * 1.2,
1567362894796:ncol = 2
1567362894797:# , rel_widths = c(1, 0.65, 0.65)
1567362894798:))
1567362900175:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362900176:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362900177:labels = c('B', 'C', ''),
1567362900177:label_y = c(1,1),
1567362900178:align = 'h', axis = 'tb',
1567362900178:# hjust = -0.2,
1567362900179:label_size = baseTextSize * 1.2,
1567362900180:ncol = 2
1567362900180:# , rel_widths = c(1, 0.65, 0.65)
1567362900181:))
1567362915350:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none"),
1567362915350:processedKmersPlot + theme(legend.position = "none"),# + theme(plot.margin = unit(c(1,18,1,1), "mm")) ,
1567362915351:labels = c('B', 'C', ''),
1567362915352:label_y = c(0,0),
1567362915352:align = 'h', axis = 'tb',
1567362915353:# hjust = -0.2,
1567362915354:label_size = baseTextSize * 1.2,
1567362915354:ncol = 2
1567362915355:# , rel_widths = c(1, 0.65, 0.65)
1567362915356:))
1567362964177:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567362964177:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567362964178:labels = c('B', 'C', ''),
1567362964179:label_y = c(0,0),
1567362964179:align = 'h', axis = 'tb',
1567362964180:# hjust = -0.2,
1567362964181:label_size = baseTextSize * 1.2,
1567362964181:ncol = 2
1567362964182:# , rel_widths = c(1, 0.65, 0.65)
1567362964183:))
1567362984196:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567362984197:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567362984197:labels = c('B', 'C', ''),
1567362984198:label_y = c(-1,-1),
1567362984199:align = 'h', axis = 'tb',
1567362984199:# hjust = -0.2,
1567362984201:label_size = baseTextSize * 1.2,
1567362984202:ncol = 2
1567362984202:# , rel_widths = c(1, 0.65, 0.65)
1567362984203:))
1567363009744:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363009744:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363009745:labels = c('B', 'C', ''),
1567363009746:label_x = c(-1,-1),
1567363009747:align = 'h', axis = 'tb',
1567363009748:# hjust = -0.2,
1567363009753:label_size = baseTextSize * 1.2,
1567363009754:ncol = 2
1567363009754:# , rel_widths = c(1, 0.65, 0.65)
1567363009755:))
1567363030032:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363030033:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363030033:labels = c('B', 'C', ''),
1567363030034:# label_x = c(-1,-1),
1567363030034:align = 'h', axis = 'tb',
1567363030035:# hjust = -0.2,
1567363030035:label_size = baseTextSize * 1.2,
1567363030036:ncol = 2
1567363030036:# , rel_widths = c(1, 0.65, 0.65)
1567363030037:))
1567363055815:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,10,1,1), "mm")),
1567363055816:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363055817:labels = c('B', 'C', ''),
1567363055817:# label_x = c(-1,-1),
1567363055818:align = 'h', axis = 'tb',
1567363055819:# hjust = -0.2,
1567363055819:label_size = baseTextSize * 1.2,
1567363055820:ncol = 2
1567363055821:# , rel_widths = c(1, 0.65, 0.65)
1567363055821:))
1567363070772:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363070772:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363070773:labels = c('B', 'C', ''),
1567363070774:# label_x = c(-1,-1),
1567363070774:align = 'h', axis = 'tb',
1567363070775:# hjust = -0.2,
1567363070776:label_size = baseTextSize * 1.2,
1567363070776:ncol = 2
1567363070777:# , rel_widths = c(1, 0.65, 0.65)
1567363070778:))
1567363089992:(row2 <- plot_grid(row2Plots,
1567363089993:legend1,
1567363089994:# labels = c('B', 'C', ''),
1567363089994:# align = 'h', axis = 'tb',
1567363089995:# hjust = -0.2,
1567363089995:# label_size = baseTextSize * 1.2,
1567363089995:ncol = 2
1567363089996:, rel_widths = c(1, 0.15)
1567363090000:))
1567363121586:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363121587:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363121587:labels = c('B', 'C', ''),
1567363121588:# label_x = c(-1,-1),
1567363121588:align = 'h', axis = 'tb',
1567363121589:# hjust = -0.2,
1567363121590:label_size = baseTextSize * 1.2,
1567363121590:ncol = 2
1567363121591:, rel_widths = c(1, 0.65)
1567363121591:))
1567363129415:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363129416:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363129417:labels = c('B', 'C', ''),
1567363129417:# label_x = c(-1,-1),
1567363129418:align = 'h', axis = 'tb',
1567363129418:# hjust = -0.2,
1567363129419:label_size = baseTextSize * 1.2,
1567363129419:ncol = 2
1567363129420:, rel_widths = c(1, 0.8)
1567363129421:))
1567363138302:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363138302:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363138303:labels = c('B', 'C', ''),
1567363138304:# label_x = c(-1,-1),
1567363138304:align = 'h', axis = 'tb',
1567363138305:# hjust = -0.2,
1567363138305:label_size = baseTextSize * 1.2,
1567363138306:ncol = 2
1567363138307:, rel_widths = c(1, 0.9)
1567363138307:))
1567363170454:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363170455:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363170455:labels = c('B', 'C', ''),
1567363170456:# label_x = c(-1,-1),
1567363170457:align = 'h', axis = 'tb',
1567363170457:# hjust = -0.2,
1567363170458:label_size = baseTextSize * 1.2,
1567363170459:ncol = 2
1567363170459:, rel_widths = c(1, 0.92)
1567363170460:))
1567363182747:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363182748:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363182748:labels = c('B', 'C', ''),
1567363182749:# label_x = c(-1,-1),
1567363182749:align = 'h', axis = 'tb',
1567363182749:# hjust = -0.2,
1567363182750:label_size = baseTextSize * 1.2,
1567363182750:ncol = 2
1567363182751:, rel_widths = c(1, 0.91)
1567363182751:))
1567363190805:(row2 <- plot_grid(row2Plots,
1567363190805:legend1,
1567363190806:# labels = c('B', 'C', ''),
1567363190806:# align = 'h', axis = 'tb',
1567363190807:# hjust = -0.2,
1567363190808:# label_size = baseTextSize * 1.2,
1567363190809:ncol = 2
1567363190809:, rel_widths = c(1, 0.2)
1567363190810:))
1567363205594:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363205594:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363205595:labels = c('B', 'C', ''),
1567363205596:# label_x = c(-1,-1),
1567363205596:align = 'h', axis = 'tb',
1567363205597:# hjust = -0.2,
1567363205597:label_size = baseTextSize * 1.2,
1567363205601:ncol = 2
1567363205602:, rel_widths = c(1, 0.9)
1567363205602:))
1567363206835:(row2 <- plot_grid(row2Plots,
1567363206836:legend1,
1567363206836:# labels = c('B', 'C', ''),
1567363206837:# align = 'h', axis = 'tb',
1567363206838:# hjust = -0.2,
1567363206838:# label_size = baseTextSize * 1.2,
1567363206839:ncol = 2
1567363206839:, rel_widths = c(1, 0.2)
1567363206840:))
1567363235677:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363235677:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363235678:labels = c('B', 'C', ''),
1567363235678:# label_x = c(-1,-1),
1567363235679:align = 'h', axis = 'tb',
1567363235679:# hjust = -0.2,
1567363235680:label_size = baseTextSize * 1.2,
1567363235680:ncol = 2
1567363235681:, rel_widths = c(1, 0.88)
1567363235681:))
1567363236867:(row2 <- plot_grid(row2Plots,
1567363236868:legend1,
1567363236868:# labels = c('B', 'C', ''),
1567363236869:# align = 'h', axis = 'tb',
1567363236870:# hjust = -0.2,
1567363236870:# label_size = baseTextSize * 1.2,
1567363236871:ncol = 2
1567363236871:, rel_widths = c(1, 0.2)
1567363236872:))
1567363317878:legend2 <- get_legend(runtimePlot)
1567363318418:(row3Plots <- plot_grid(runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363318419:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363318420:labels = c('D', 'E'),
1567363318420:align = 'h', axis = 'tb',
1567363318424:# hjust = -0.2,
1567363318425:label_size = baseTextSize * 1.2,
1567363318425:ncol = 2
1567363318426:# , rel_widths = c(1, 0.65, 0.65)
1567363318427:))
1567363333594:(row3Plots <- plot_grid(runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363333595:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363333596:labels = c('D', 'E'),
1567363333596:align = 'h', axis = 'tb',
1567363333597:# hjust = -0.2,
1567363333598:label_size = baseTextSize * 1.2,
1567363333598:ncol = 2
1567363333599:, rel_widths = c(1, 0.88)
1567363333600:))
1567363350519:(row3 <- plot_grid(row3Plots,
1567363350519:legend2,
1567363350520:# labels = c('B', 'C', ''),
1567363350520:# align = 'h', axis = 'tb',
1567363350521:# hjust = -0.2,
1567363350521:# label_size = baseTextSize * 1.2,
1567363350522:ncol = 2
1567363350522:, rel_widths = c(1, 0.2)
1567363350523:))
1567363378923:legend2 <- get_legend(runtimePlot)
1567363379275:(row3Plots <- plot_grid(runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363379276:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363379276:labels = c('D', 'E'),
1567363379277:align = 'h', axis = 'tb',
1567363379277:# hjust = -0.2,
1567363379278:label_size = baseTextSize * 1.2,
1567363379278:ncol = 2
1567363379279:, rel_widths = c(1, 0.88)
1567363379279:))
1567363380386:(row3 <- plot_grid(row3Plots,
1567363380387:legend2,
1567363380388:# labels = c('B', 'C', ''),
1567363380388:# align = 'h', axis = 'tb',
1567363380401:# hjust = -0.2,
1567363380401:# label_size = baseTextSize * 1.2,
1567363380402:ncol = 2
1567363380403:, rel_widths = c(1, 0.4)
1567363380403:))
1567363395866:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/figure_S7.R', echo=TRUE)
1567363432725:legend2 <- get_legend(runtimePlot)
1567363433113:(row3Plots <- plot_grid(runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363433113:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363433114:labels = c('D', 'E'),
1567363433114:align = 'h', axis = 'tb',
1567363433115:# hjust = -0.2,
1567363433116:label_size = baseTextSize * 1.2,
1567363433116:ncol = 2
1567363433117:, rel_widths = c(1, 0.88)
1567363433118:))
1567363434242:(row3 <- plot_grid(row3Plots,
1567363434243:legend2,
1567363434244:# labels = c('B', 'C', ''),
1567363434244:# align = 'h', axis = 'tb',
1567363434245:# hjust = -0.2,
1567363434245:# label_size = baseTextSize * 1.2,
1567363434246:ncol = 2
1567363434246:, rel_widths = c(1, 0.3)
1567363434247:))
1567363468514:legend2 <- get_legend(runtimePlot)
1567363469006:(row3Plots <- plot_grid(runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363469007:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363469008:labels = c('D', 'E'),
1567363469009:align = 'h', axis = 'tb',
1567363469010:# hjust = -0.2,
1567363469011:label_size = baseTextSize * 1.2,
1567363469011:ncol = 2
1567363469012:, rel_widths = c(1, 0.8)
1567363469013:))
1567363470355:(row3 <- plot_grid(row3Plots,
1567363470355:legend2,
1567363470356:# labels = c('B', 'C', ''),
1567363470357:# align = 'h', axis = 'tb',
1567363470357:# hjust = -0.2,
1567363470358:# label_size = baseTextSize * 1.2,
1567363470358:ncol = 2
1567363470359:, rel_widths = c(1, 0.3)
1567363470359:))
1567363525127:legend1 <- get_legend(usefulReadsPlot)
1567363525471:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363525472:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363525472:labels = c('B', 'C', ''),
1567363525485:# label_x = c(-1,-1),
1567363525486:align = 'h', axis = 'tb',
1567363525487:# hjust = -0.2,
1567363525488:label_size = baseTextSize * 1.2,
1567363525488:ncol = 2
1567363525489:, rel_widths = c(1, 0.88)
1567363525490:))
1567363527068:(row2 <- plot_grid(row2Plots,
1567363527068:legend1,
1567363527068:# labels = c('B', 'C', ''),
1567363527069:# align = 'h', axis = 'tb',
1567363527069:# hjust = -0.2,
1567363527069:# label_size = baseTextSize * 1.2,
1567363527070:ncol = 2
1567363527070:, rel_widths = c(1, 0.3)
1567363527070:))
1567363581271:(combinedPlot <- plot_grid(row1, row2,
1567363581272:align = 'h', axis = 'tb',
1567363581272:ncol = 2
1567363581273:# , rel_widths = c(1, 0.65, 0.65)
1567363581273:)
1567363581273:)
1567363589405:(combinedPlot <- plot_grid(row2, row3,
1567363589406:align = 'h', axis = 'tb',
1567363589407:ncol = 2
1567363589407:# , rel_widths = c(1, 0.65, 0.65)
1567363589408:)
1567363589409:)
1567363613457:(row3 <- plot_grid(row3Plots,
1567363613457:legend2,
1567363613458:# labels = c('B', 'C', ''),
1567363613458:# align = 'h', axis = 'tb',
1567363613459:# hjust = -0.2,
1567363613460:# label_size = baseTextSize * 1.2,
1567363613461:nrow = 2
1567363613461:, rel_widths = c(1, 0.3)
1567363613462:))
1567363633387:(combinedPlot <- plot_grid(row2, row3,
1567363633388:align = 'h', axis = 'tb',
1567363633388:ncol = 2
1567363633389:# , rel_widths = c(1, 0.65, 0.65)
1567363633389:)
1567363633390:)
1567363646196:legend1 <- get_legend(usefulReadsPlot)
1567363646478:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363646479:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363646479:labels = c('B', 'C', ''),
1567363646480:# label_x = c(-1,-1),
1567363646480:align = 'h', axis = 'tb',
1567363646481:# hjust = -0.2,
1567363646482:label_size = baseTextSize * 1.2,
1567363646482:ncol = 2
1567363646483:, rel_widths = c(1, 0.88)
1567363646484:))
1567363648094:(row2 <- plot_grid(row2Plots,
1567363648095:legend1,
1567363648095:# labels = c('B', 'C', ''),
1567363648096:# align = 'h', axis = 'tb',
1567363648096:# hjust = -0.2,
1567363648097:# label_size = baseTextSize * 1.2,
1567363648097:ncol = 2
1567363648098:, rel_widths = c(1, 0.3)
1567363648098:))
1567363649657:legend2 <- get_legend(runtimePlot)
1567363650123:(row3Plots <- plot_grid(runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363650124:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363650124:labels = c('D', 'E'),
1567363650125:align = 'h', axis = 'tb',
1567363650125:# hjust = -0.2,
1567363650126:label_size = baseTextSize * 1.2,
1567363650127:ncol = 2
1567363650127:, rel_widths = c(1, 0.8)
1567363650128:))
1567363653635:(row3 <- plot_grid(row3Plots,
1567363653636:legend2,
1567363653637:# labels = c('B', 'C', ''),
1567363653637:# align = 'h', axis = 'tb',
1567363653638:# hjust = -0.2,
1567363653651:# label_size = baseTextSize * 1.2,
1567363653652:ncol = 2
1567363653652:, rel_widths = c(1, 0.3)
1567363653653:))
1567363658277:(combinedPlot <- plot_grid(row2, row3,
1567363658277:align = 'h', axis = 'tb',
1567363658278:nrow = 2
1567363658278:# , rel_widths = c(1, 0.65, 0.65)
1567363658278:)
1567363658279:)
1567363790839:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363790840:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363790841:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363790842:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363790842:labels = c('B', 'C', 'D', 'E'),
1567363790843:# label_x = c(-1,-1),
1567363790843:align = 'h', axis = 'tb',
1567363790844:# hjust = -0.2,
1567363790845:label_size = baseTextSize * 1.2,
1567363790845:ncol = 2, nrow = 2
1567363790846:# , rel_widths = c(1, 0.88)
1567363790847:))
1567363815804:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363815805:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363815805:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363815806:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363815807:labels = c('B', 'C', 'D', 'E'),
1567363815807:# label_x = c(-1,-1),
1567363815808:align = 'h', axis = 'tb',
1567363815809:# hjust = -0.2,
1567363815810:label_size = baseTextSize * 1.2,
1567363815810:ncol = 2, nrow = 2
1567363815811:, rel_widths = c(1, 0.88)
1567363815812:))
1567363840221:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363840221:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363840222:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363840223:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363840224:labels = c('B', 'C', 'D', 'E'),
1567363840225:# label_x = c(-1,-1),
1567363840225:align = 'h', axis = 'tb',
1567363840226:# hjust = -0.2,
1567363840226:label_size = baseTextSize * 1.2,
1567363840227:ncol = 2, nrow = 2
1567363840227:# , rel_widths = c(1, 0.88)
1567363840228:))
1567363872378:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363872379:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363872379:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363872380:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363872380:labels = c('B', 'C', 'D', 'E'),
1567363872381:# label_x = c(-1,-1),
1567363872381:align = 'hv', axis = 'tb',
1567363872382:# hjust = -0.2,
1567363872382:label_size = baseTextSize * 1.2,
1567363872383:ncol = 2, nrow = 2
1567363872384:# , rel_widths = c(1, 0.88)
1567363872385:))
1567363909922:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363909922:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363909923:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363909924:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363909924:labels = c('B', 'C', 'D', 'E'),
1567363909925:# label_x = c(-1,-1),
1567363909926:align = 'hv', axis = 'tb',
1567363909927:# hjust = -0.2,
1567363909928:label_size = baseTextSize * 1.2,
1567363909928:ncol = 2, nrow = 2
1567363909929:, rel_widths = c(1, 0.88)
1567363909930:))
1567363929258:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363929258:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363929259:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363929259:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363929260:labels = c('B', 'C', 'D', 'E'),
1567363929261:# label_x = c(-1,-1),
1567363929261:align = 'hv', axis = 'tb',
1567363929262:# hjust = -0.2,
1567363929262:label_size = baseTextSize * 1.2,
1567363929263:ncol = 2, nrow = 2
1567363929264:, rel_widths = c(1, 0.9)
1567363929265:))
1567363951565:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363951566:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363951567:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363951567:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363951568:labels = c('B', 'C', 'D', 'E'),
1567363951569:# label_x = c(-1,-1),
1567363951569:align = 'hv', axis = 'tb',
1567363951570:# hjust = -0.2,
1567363951571:label_size = baseTextSize * 1.2,
1567363951572:ncol = 2, nrow = 2
1567363951572:, rel_widths = c(1, 0.95)
1567363951573:))
1567363982655:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363982656:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363982656:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567363982657:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567363982658:labels = c('B', 'C', 'D', 'E'),
1567363982658:# label_x = c(-1,-1),
1567363982659:align = 'hv', axis = 'tb',
1567363982659:# hjust = -0.2,
1567363982660:label_size = baseTextSize * 1.2,
1567363982661:ncol = 2, nrow = 2
1567363982661:, rel_widths = c(1, 0.97)
1567363982662:))
1567364018720:(row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567364018721:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567364018722:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567364018722:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567364018723:labels = c('B', 'C', 'D', 'E'),
1567364018724:# label_x = c(-1,-1),
1567364018725:align = 'hv', axis = 'tb',
1567364018727:# hjust = -0.2,
1567364018728:label_size = baseTextSize * 1.2,
1567364018729:ncol = 2, nrow = 2
1567364018730:, rel_widths = c(1, 0.98)
1567364018730:))
1567364107602:(legends <- plot_grid(legend1, legend2,
1567364107603:nrow = 2)
1567364107604:)
1567364128009:(legends <- plot_grid(legend1, legend2,
1567364128009:align = 'hv',
1567364128010:nrow = 2)
1567364128010:)
1567364179532:(row2 <- plot_grid(row2Plots,
1567364179533:legends,
1567364179534:ncol = 2
1567364179534:, rel_widths = c(1, 0.3)
1567364179535:))
1567364200827:(row2 <- plot_grid(row2Plots,
1567364200828:legends,
1567364200829:ncol = 2
1567364200829:, rel_widths = c(1, 0.24)
1567364200830:))
1567364302541:(combinedPlot <- plot_grid(dbSizePlot,
1567364302542:row2,
1567364302542:# align = 'h', axis = 'tb',
1567364302543:nrow = 2
1567364302543:# , rel_widths = c(1, 0.65, 0.65)
1567364302544:)
1567364302544:)
1567365720585:lay <- rbind(c(1,NA),
1567365720677:c(2,2))
1567365722049:grid.arrange(dbSizePlot, row2,
1567365722050:layout_matrix = lay)
1567365773866:(combinedPlot <- plot_grid(dbSizePlot, NA,
1567365773867:row2,
1567365773867:# align = 'h', axis = 'tb',
1567365773868:nrow = 2
1567365773868:# , rel_widths = c(1, 0.65, 0.65)
1567365773869:)
1567365773869:)
1567365788412:grid.arrange(dbSizePlot, row2,
1567365788412:layout_matrix = lay)
1567365851829:grid.arrange(dbSizePlot, row2,
1567365851830:layout_matrix = lay,
1567365851830:heights = 1:2)
1567365936577:grid.arrange(dbSizePlot, row2,
1567365936578:layout_matrix = lay,
1567365936578:heights = c(0.5,1))
1567365989684:grid.arrange(dbSizePlot, row2,
1567365989685:layout_matrix = lay,
1567365989685:heights = c(0.5,1),
1567365989686:widths = c(0.4, 1))
1567366017098:grid.arrange(dbSizePlot, row2,
1567366017099:layout_matrix = lay,
1567366017099:heights = c(0.5,1),
1567366017100:widths = c(0.8, 1))
1567366047937:grid.arrange(dbSizePlot, row2,
1567366047938:layout_matrix = lay,
1567366047938:heights = c(0.5,1),
1567366047939:widths = c(0.98, 1))
1567366075962:grid.arrange(dbSizePlot, row2,
1567366075963:layout_matrix = lay,
1567366075963:heights = c(0.5,1),
1567366075964:widths = c(0.85, 1))
1567366107037:grid.arrange(dbSizePlot, row2,
1567366107038:layout_matrix = lay,
1567366107038:heights = c(0.6,1),
1567366107038:widths = c(0.75, 1))
1567366164689:grid.arrange(dbSizePlot, row2,
1567366164690:layout_matrix = lay,
1567366164690:heights = c(0.55,1),
1567366164691:widths = c(0.70, 1))
1567366204650:grid.arrange(dbSizePlot, row2,
1567366204651:layout_matrix = lay,
1567366204651:heights = c(0.5,1),
1567366204652:widths = c(0.65, 1))
1567366245449:grid.arrange(dbSizePlot, row2,
1567366245449:layout_matrix = lay,
1567366245450:heights = c(0.53,1),
1567366245450:widths = c(0.68, 1))
1567366284417:grid.arrange(dbSizePlot, row2,
1567366284417:layout_matrix = lay,
1567366284418:heights = c(0.53,1),
1567366284418:widths = c(0.66, 1))
1567366331251:grid.arrange(dbSizePlot, row2,
1567366331252:layout_matrix = lay,
1567366331252:heights = c(0.54,1),
1567366331253:widths = c(0.66, 1))
1567366912633:ggsave("manuscript_material/fig_S7.pdf", comparisonPlot, width = 14, height = 14)
1567366918914:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567366977101:(combinedPlot <- grid.arrange(dbSizePlot, row2,
1567366977103:layout_matrix = lay,
1567366977104:heights = c(0.54,1),
1567366977104:widths = c(0.66, 1)))
1567366988316:if (export) {
1567366988337:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567366988337:}
1567367010213:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567367079561:(combinedPlot <- grid.arrange(dbSizePlot, row2,
1567367079562:layout_matrix = lay,
1567367079562:heights = c(0.5,1),
1567367079563:widths = c(0.66, 1)))
1567367085465:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567367106946:(combinedPlot <- grid.arrange(dbSizePlot, row2,
1567367106947:layout_matrix = lay,
1567367106947:heights = c(0.53,1),
1567367106948:widths = c(0.66, 1)))
1567367111474:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567367309068:# MLST comparative test
1567367309068:# Install an load packages ------------------------------------------------
1567367309069:installAndLoadPackages <- function(pkg){
1567367309069:cat("Please wait a moment! Checking for required packages... ")
1567367309070:cat("Done!\n")
1567367309070:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567367309070:if (length(new.pkg)) {
1567367309071:cat("Installing new packages... ")
1567367309071:install.packages(new.pkg, dependencies = TRUE,
1567367309071:repos="http://cran.rstudio.com/")
1567367309072:cat("Done!\n")
1567367309072:}
1567367309073:cat("Loading packages... \n")
1567367309073:sapply(pkg, require, character.only = TRUE)
1567367309073:cat("Done!\n")
1567367309074:}
1567367309075:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567367309075:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567367309076:installAndLoadPackages(requiredPackages)
1567367309130:# Format bar annotation text ----------------------------------------------
1567367309130:getAnnotationText <- function(value){
1567367309131:lapply(value, function(x) {
1567367309131:result = ""
1567367309132:if (x != 1) {
1567367309132:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567367309133:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567367309133:}
1567367309134:result
1567367309134:})
1567367309135:}
1567367309137:# Sources -----------------------------------------------------------------
1567367309137:source(file = "scripts/ggplot_theme.R")
1567367309329:# Loading Data ------------------------------------------------------------
1567367309330:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567367309331:excel_sheets(inFile)
1567367309443:(inData <- read_excel(inFile, sheet = "data"))
1567367309805:# General configuration ---------------------------------------------------
1567367309806:saveFigures <- TRUE
1567367309806:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567367309807:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567367309807:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567367309807:generalPalette <- c(
1567367309808:"MLST"   = '#0a4f75',
1567367309808:"rMLST"  = '#FFB238',
1567367309808:"cgMLST" = '#91bbe4'
1567367309809:# , "MLST"    = '#d7e4f5'
1567367309809:# , "rMLST"   = '#FFD592'
1567367309809:)
1567367309810:show_col(generalPalette)
1567367309862:annotTextColors       <- c(axisColor, "#ffffff")
1567367309863:baseVariantFontFamily <- baseFontFamily
1567367309864:# Preparing data ----------------------------------------------------------
1567367309864:customPalette   <- generalPalette
1567367309865:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567367309866:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567367309867:(inData <- inData %>%
1567367309867:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567367312306:(dataToPlot <- inData)
1567367312438:# Scheme DB Size Plot ------------------------------------------------
1567367312438:y_lim    <- seq(1,9, by = 2)
1567367312439:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367312446:(dbSizePlot <-
1567367312446:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567367312447:fill = Scheme)) +
1567367312447:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367312448:stat  = "identity",
1567367312448:position = position_dodge(width=0.9)
1567367312449:, show.legend = F
1567367312449:) +
1567367312450:scale_y_log10(expand = c(0,0),
1567367312450:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367312451:limits = c(1, 1e+9*1.8),
1567367312451:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367312452:) +
1567367312453:scale_fill_manual(values = rev(customPalette),
1567367312453:# labels = typeLabels,
1567367312454:name   = "Scheme"
1567367312454:) +
1567367312455:labs(x = "Scheme",
1567367312455:y = "DB Size (bp)") +
1567367312456:publicationTheme() +
1567367312456:barPlotCustomsVertical +
1567367312457:theme (axis.text.y = element_text(family = baseFontFamily))
1567367312458:)
1567367323887:dataToPlot
1567367369064:(dbAllelesPlot <-
1567367369065:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567367369066:fill = Scheme)) +
1567367369066:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367369067:stat  = "identity",
1567367369068:position = position_dodge(width=0.9)
1567367369069:, show.legend = F
1567367369072:) +
1567367369072:scale_y_log10(expand = c(0,0),
1567367369073:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367369073:limits = c(1, 1e+9*1.8),
1567367369077:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367369078:) +
1567367369079:scale_fill_manual(values = rev(customPalette),
1567367369080:# labels = typeLabels,
1567367369084:name   = "Scheme"
1567367369085:) +
1567367369086:labs(x = "Scheme",
1567367369086:y = "Alleles") +
1567367369087:publicationTheme() +
1567367369093:barPlotCustomsVertical +
1567367369094:theme (axis.text.y = element_text(family = baseFontFamily))
1567367369095:)
1567367411958:(dbAllelesPlot <-
1567367411958:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567367411958:fill = Scheme)) +
1567367411959:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367411959:stat  = "identity",
1567367411959:position = position_dodge(width=0.9)
1567367411960:, show.legend = F
1567367411960:) +
1567367411960:scale_y_log10(expand = c(0,0)
1567367411961:# ,breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367411961:# limits = c(1, 1e+9*1.8),
1567367411962:# labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367411962:) +
1567367411962:scale_fill_manual(values = rev(customPalette),
1567367411963:# labels = typeLabels,
1567367411963:name   = "Scheme"
1567367411963:) +
1567367411964:labs(x = "Scheme",
1567367411964:y = "Alleles") +
1567367411965:publicationTheme() +
1567367411965:barPlotCustomsVertical +
1567367411966:theme (axis.text.y = element_text(family = baseFontFamily))
1567367411967:)
1567367483347:(dbAllelesPlot <-
1567367483348:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567367483348:fill = Scheme)) +
1567367483349:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367483349:stat  = "identity",
1567367483349:position = position_dodge(width=0.9)
1567367483350:, show.legend = F
1567367483350:) +
1567367483350:scale_y_log10(expand = c(0,0)
1567367483351:,breaks = c(1, 1e+2, 1e+4, 1e+6),
1567367483351:limits = c(1, 1e+6*1.5),
1567367483352:labels = c(1, sapply(c(2, 4, 6), function(u) as.expression(bquote(10^.(u)))))
1567367483352:) +
1567367483352:scale_fill_manual(values = rev(customPalette),
1567367483353:# labels = typeLabels,
1567367483353:name   = "Scheme"
1567367483354:) +
1567367483354:labs(x = "Scheme",
1567367483354:y = "Alleles") +
1567367483355:publicationTheme() +
1567367483355:barPlotCustomsVertical +
1567367483356:theme (axis.text.y = element_text(family = baseFontFamily))
1567367483356:)
1567367489618:(dbAllelesPlot <-
1567367489619:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567367489620:fill = Scheme)) +
1567367489620:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367489621:stat  = "identity",
1567367489621:position = position_dodge(width=0.9)
1567367489622:, show.legend = F
1567367489622:) +
1567367489623:scale_y_log10(expand = c(0,0)
1567367489624:,breaks = c(1, 1e+2, 1e+4, 1e+6),
1567367489624:limits = c(1, 1e+6*1.8),
1567367489625:labels = c(1, sapply(c(2, 4, 6), function(u) as.expression(bquote(10^.(u)))))
1567367489625:) +
1567367489626:scale_fill_manual(values = rev(customPalette),
1567367489627:# labels = typeLabels,
1567367489627:name   = "Scheme"
1567367489628:) +
1567367489629:labs(x = "Scheme",
1567367489629:y = "Alleles") +
1567367489630:publicationTheme() +
1567367489632:barPlotCustomsVertical +
1567367489634:theme (axis.text.y = element_text(family = baseFontFamily))
1567367489635:)
1567367618359:(row1 <- plot_grid(dbSizePlot + theme(plot.margin = unit(c(10,18,1,1), "mm")),
1567367618359:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567367618360:labels = c('A', 'B'),
1567367618360:# label_x = c(-1,-1),
1567367618361:align = 'hv', axis = 'tb',
1567367618361:# hjust = -0.2,
1567367618362:label_size = baseTextSize * 1.2,
1567367618363:ncol = 2
1567367618363:# , rel_widths = c(1, 0.98)
1567367618363:)
1567367618364:)
1567367711285:# MLST comparative test
1567367711286:# Install an load packages ------------------------------------------------
1567367711287:installAndLoadPackages <- function(pkg){
1567367711287:cat("Please wait a moment! Checking for required packages... ")
1567367711288:cat("Done!\n")
1567367711288:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567367711289:if (length(new.pkg)) {
1567367711289:cat("Installing new packages... ")
1567367711290:install.packages(new.pkg, dependencies = TRUE,
1567367711290:repos="http://cran.rstudio.com/")
1567367711290:cat("Done!\n")
1567367711291:}
1567367711291:cat("Loading packages... \n")
1567367711292:sapply(pkg, require, character.only = TRUE)
1567367711293:cat("Done!\n")
1567367711294:}
1567367711295:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567367711296:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567367711297:installAndLoadPackages(requiredPackages)
1567367711318:# Format bar annotation text ----------------------------------------------
1567367711319:getAnnotationText <- function(value){
1567367711319:lapply(value, function(x) {
1567367711320:result = ""
1567367711320:if (x != 1) {
1567367711321:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567367711321:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567367711322:}
1567367711322:result
1567367711323:})
1567367711323:}
1567367711325:# Sources -----------------------------------------------------------------
1567367711325:source(file = "scripts/ggplot_theme.R")
1567367711413:# Loading Data ------------------------------------------------------------
1567367711414:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567367711415:excel_sheets(inFile)
1567367711449:(inData <- read_excel(inFile, sheet = "data"))
1567367711693:# General configuration ---------------------------------------------------
1567367711694:saveFigures <- TRUE
1567367711695:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567367711695:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567367711696:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567367711696:generalPalette <- c(
1567367711696:"MLST"   = '#0a4f75',
1567367711697:"rMLST"  = '#FFB238',
1567367711697:"cgMLST" = '#91bbe4'
1567367711698:# , "MLST"    = '#d7e4f5'
1567367711698:# , "rMLST"   = '#FFD592'
1567367711699:)
1567367711699:show_col(generalPalette)
1567367711711:annotTextColors       <- c(axisColor, "#ffffff")
1567367711712:baseVariantFontFamily <- baseFontFamily
1567367711713:# Preparing data ----------------------------------------------------------
1567367711714:customPalette   <- generalPalette
1567367711715:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567367711716:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567367711717:(inData <- inData %>%
1567367711718:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567367712438:(dataToPlot <- inData)
1567367712595:# Scheme DB Size Plot ------------------------------------------------
1567367712596:y_lim    <- seq(1,9, by = 2)
1567367712605:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367712613:(dbSizePlot <-
1567367712614:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567367712614:fill = Scheme)) +
1567367712615:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367712615:stat  = "identity",
1567367712616:position = position_dodge(width=0.9)
1567367712616:# , show.legend = F
1567367712617:) +
1567367712617:scale_y_log10(expand = c(0,0),
1567367712618:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367712618:limits = c(1, 1e+9*1.8),
1567367712619:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367712619:) +
1567367712620:scale_fill_manual(values = rev(customPalette),
1567367712620:# labels = typeLabels,
1567367712621:name   = "Scheme"
1567367712621:) +
1567367712622:labs(x = "Scheme",
1567367712622:y = "DB Size (bp)") +
1567367712623:publicationTheme() +
1567367712623:barPlotCustomsVertical +
1567367712624:theme (axis.text.y = element_text(family = baseFontFamily))
1567367712624:)
1567367713313:# Scheme Alleles Plot ------------------------------------------------
1567367713313:y_lim    <- seq(1,9, by = 2)
1567367713314:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367713319:(dbAllelesPlot <-
1567367713319:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567367713319:fill = Scheme)) +
1567367713320:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367713320:stat  = "identity",
1567367713320:position = position_dodge(width=0.9)
1567367713321:# , show.legend = F
1567367713321:) +
1567367713322:scale_y_log10(expand = c(0,0)
1567367713322:,breaks = c(1, 1e+2, 1e+4, 1e+6),
1567367713322:limits = c(1, 1e+6*1.8),
1567367713323:labels = c(1, sapply(c(2, 4, 6), function(u) as.expression(bquote(10^.(u)))))
1567367713323:) +
1567367713323:scale_fill_manual(values = rev(customPalette),
1567367713324:# labels = typeLabels,
1567367713324:name   = "Scheme"
1567367713325:) +
1567367713325:labs(x = "Scheme",
1567367713325:y = "Alleles") +
1567367713326:publicationTheme() +
1567367713326:barPlotCustomsVertical +
1567367713327:theme (axis.text.y = element_text(family = baseFontFamily))
1567367713327:)
1567367714600:# Useful reads per DB ---------------------------------------------------------------
1567367714600:x_lim <- c(6:10)
1567367714601:y_lim <- c(3:7)
1567367714602:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367714610:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367714615:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567367714616:geom_line(size = 1, color = "#666666") +
1567367714616:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367714616:scale_x_log10(expand = c(0,0),
1567367714617:breaks = 10^(x_lim),
1567367714617:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367714618:limits = 10^(x_lim[c(1,length(x_lim))]),
1567367714618:labels = x_labels) +
1567367714618:scale_y_log10(expand = c(0,0),
1567367714619:breaks = 10^(y_lim),
1567367714619:limits = c(1e+3, 1e+7),
1567367714619:labels = y_labels
1567367714620:) +
1567367714620:scale_fill_manual(values = customPalette) +
1567367714621:labs(x = "DB Size (bp)",
1567367714621:y = "Useful Reads") +
1567367714621:publicationTheme()
1567367714622:+ theme(panel.grid.minor = element_blank())
1567367714622:)
1567367715823:# Processed k-mers per DB ---------------------------------------------------------------
1567367715824:x_lim <- c(6:10)
1567367715825:y_lim <- c(5:9)
1567367715825:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367715830:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367715836:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567367715836:geom_line(size = 1, color = "#666666") +
1567367715837:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367715837:scale_x_log10(expand = c(0,0),
1567367715838:breaks = 10^(x_lim),
1567367715838:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367715839:limits = 10^(x_lim[c(1,length(x_lim))]),
1567367715839:labels = x_labels) +
1567367715840:scale_y_log10(expand = c(0,0),
1567367715841:breaks = 10^(y_lim),
1567367715841:limits = 10^(y_lim[c(1,length(y_lim))]),
1567367715842:labels = y_labels
1567367715842:) +
1567367715843:scale_fill_manual(values = customPalette) +
1567367715843:labs(x = "DB Size (bp)",
1567367715844:y = "Processed k-mers") +
1567367715845:publicationTheme()
1567367715845:+ theme(panel.grid.minor = element_blank())
1567367715846:)
1567367716805:# Runtime per Task and DB -----------------------------------------------------
1567367716806:(dataToPlot <- inData %>%
1567367716806:select(Scheme, Size,
1567367716807:"Alleles" = Total_alleles,
1567367716807:"k-mer searching" = Searching_time,
1567367716808:"Index loading"   = Index_loading_time,
1567367716808:"Whole typing process" = Total_time) %>%
1567367716809:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567367716809:)
1567367717653:x_lim <- c(6:10)
1567367717654:y_lim <- c(0,4)
1567367717655:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367717663:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367717670:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567367717671:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567367717671:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367717672:scale_x_log10(expand = c(0,0),
1567367717672:breaks = 10^(x_lim),
1567367717673:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367717673:limits = 10^(x_lim[c(1,length(x_lim))]),
1567367717674:labels = x_labels) +
1567367717675:# scale_y_log10(expand = c(0,0),
1567367717676:# 							breaks = 10^(y_lim),
1567367717676:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567367717677:# 							labels = y_labels
1567367717677:# ) +
1567367717678:scale_fill_manual(values = customPalette) +
1567367717678:scale_color_aaas(name = "Task") +
1567367717679:labs(x = "DB Size (bp)",
1567367717679:y = "Time (s)") +
1567367717680:publicationTheme()
1567367717681:+ theme(panel.grid.minor = element_blank())
1567367717681:)
1567367718540:# Runtime per processed k-mers and DB size ------------------------------------
1567367718542:(dataToPlot <- inData %>%
1567367718543:select(Scheme, Size, Processed_kmers,
1567367718543:"Alleles" = Total_alleles,
1567367718544:"k-mer searching" = Searching_time,
1567367718545:"Index loading"   = Index_loading_time,
1567367718545:"Whole typing process" = Total_time) %>%
1567367718546:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567367718546:filter(`Time type` == "k-mer searching")
1567367718547:)
1567367719764:x_lim <- c(4:9)
1567367719777:y_lim <- c(0,4)
1567367719778:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367719785:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367719803:# mypal = pal_aaas()(9)
1567367719803:# show_col(mypal)
1567367719804:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567367719804:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567367719805:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367719805:scale_x_log10(expand = c(0,0),
1567367719806:breaks = 10^(x_lim),
1567367719806:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367719807:limits = 10^(x_lim[c(2,length(x_lim))]),
1567367719807:labels = x_labels
1567367719808:) +
1567367719808:# scale_y_log10(expand = c(0,0),
1567367719809:# 							breaks = 10^(y_lim),
1567367719809:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567367719810:# 							labels = y_labels
1567367719810:# ) +
1567367719811:scale_fill_manual(values = customPalette) +
1567367719811:# scale_color_aaas(name = "Task") +
1567367719812:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567367719812:labs(x = "Porcessed k-mers",
1567367719825:y = "Time (s)") +
1567367719826:publicationTheme()
1567367719826:+ theme(panel.grid.minor = element_blank())
1567367719827:)
1567367768811:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567367768811:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567367768812:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367768812:scale_x_log10(expand = c(0,0),
1567367768813:breaks = 10^(x_lim),
1567367768814:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367768814:limits = 10^(x_lim[c(2,length(x_lim))]),
1567367768815:labels = x_labels
1567367768815:) +
1567367768816:# scale_y_log10(expand = c(0,0),
1567367768824:# 							breaks = 10^(y_lim),
1567367768827:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567367768827:# 							labels = y_labels
1567367768828:# ) +
1567367768828:scale_fill_manual(values = customPalette) +
1567367768830:# scale_color_aaas(name = "Task") +
1567367768831:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567367768831:labs(x = "Porcessed k-mers",
1567367768832:y = "Time (s)") +
1567367768832:publicationTheme()
1567367768833:+ theme(legend.position = "right",
1567367768834:legend.direction = "vertical",
1567367768834:panel.grid.minor = element_blank())
1567367768835:)
1567367802736:# MLST comparative test
1567367802737:# Install an load packages ------------------------------------------------
1567367802738:installAndLoadPackages <- function(pkg){
1567367802738:cat("Please wait a moment! Checking for required packages... ")
1567367802739:cat("Done!\n")
1567367802739:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567367802740:if (length(new.pkg)) {
1567367802740:cat("Installing new packages... ")
1567367802741:install.packages(new.pkg, dependencies = TRUE,
1567367802742:repos="http://cran.rstudio.com/")
1567367802742:cat("Done!\n")
1567367802743:}
1567367802743:cat("Loading packages... \n")
1567367802744:sapply(pkg, require, character.only = TRUE)
1567367802744:cat("Done!\n")
1567367802745:}
1567367802746:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567367802746:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567367802747:installAndLoadPackages(requiredPackages)
1567367802772:# Format bar annotation text ----------------------------------------------
1567367802773:getAnnotationText <- function(value){
1567367802773:lapply(value, function(x) {
1567367802774:result = ""
1567367802774:if (x != 1) {
1567367802775:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567367802775:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567367802776:}
1567367802776:result
1567367802777:})
1567367802778:}
1567367802779:# Sources -----------------------------------------------------------------
1567367802779:source(file = "scripts/ggplot_theme.R")
1567367802839:# Loading Data ------------------------------------------------------------
1567367802840:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567367802841:excel_sheets(inFile)
1567367802856:(inData <- read_excel(inFile, sheet = "data"))
1567367803060:# General configuration ---------------------------------------------------
1567367803061:saveFigures <- TRUE
1567367803061:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567367803062:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567367803062:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567367803063:generalPalette <- c(
1567367803063:"MLST"   = '#0a4f75',
1567367803064:"rMLST"  = '#FFB238',
1567367803064:"cgMLST" = '#91bbe4'
1567367803064:# , "MLST"    = '#d7e4f5'
1567367803065:# , "rMLST"   = '#FFD592'
1567367803065:)
1567367803066:show_col(generalPalette)
1567367803095:annotTextColors       <- c(axisColor, "#ffffff")
1567367803095:baseVariantFontFamily <- baseFontFamily
1567367803097:# Preparing data ----------------------------------------------------------
1567367803097:customPalette   <- generalPalette
1567367803098:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567367803099:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567367803100:(inData <- inData %>%
1567367803100:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567367803713:(dataToPlot <- inData)
1567367803884:# Scheme DB Size Plot ------------------------------------------------
1567367803885:y_lim    <- seq(1,9, by = 2)
1567367803886:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367803890:(dbSizePlot <-
1567367803891:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567367803891:fill = Scheme)) +
1567367803892:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367803892:stat  = "identity",
1567367803893:position = position_dodge(width=0.9)
1567367803893:# , show.legend = F
1567367803894:) +
1567367803894:scale_y_log10(expand = c(0,0),
1567367803895:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367803895:limits = c(1, 1e+9*1.8),
1567367803897:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367803898:) +
1567367803899:scale_fill_manual(values = rev(customPalette),
1567367803900:# labels = typeLabels,
1567367803901:name   = "Scheme"
1567367803901:) +
1567367803902:labs(x = "Scheme",
1567367803902:y = "DB Size (bp)") +
1567367803903:publicationTheme() +
1567367803903:barPlotCustomsVertical +
1567367803904:theme(axis.text.y = element_text(family = baseFontFamily),
1567367803909:legend.position = "right",
1567367803910:legend.direction = "vertical")
1567367803911:)
1567367887608:(dbSizePlot <-
1567367887609:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567367887609:fill = Scheme)) +
1567367887610:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367887610:stat  = "identity",
1567367887611:position = position_dodge(width=0.9)
1567367887611:# , show.legend = F
1567367887612:) +
1567367887612:scale_y_log10(expand = c(0,0),
1567367887613:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367887613:limits = c(1, 1e+9*1.8),
1567367887614:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367887615:) +
1567367887616:scale_fill_manual(values = rev(customPalette),
1567367887617:# labels = typeLabels,
1567367887618:name   = "Scheme"
1567367887620:) +
1567367887620:labs(x = "Scheme",
1567367887621:y = "DB Size (bp)") +
1567367887622:publicationTheme() +
1567367887622:barPlotCustomsVertical +
1567367887623:theme(axis.text.y = element_text(family = baseFontFamily),
1567367887623:legend.box.background = element_blank(),
1567367887624:legend.direction = "vertical",
1567367887624:legend.position = "right"
1567367887625:)
1567367887626:)
1567367917911:# MLST comparative test
1567367917913:# Install an load packages ------------------------------------------------
1567367917913:installAndLoadPackages <- function(pkg){
1567367917914:cat("Please wait a moment! Checking for required packages... ")
1567367917914:cat("Done!\n")
1567367917915:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567367917915:if (length(new.pkg)) {
1567367917916:cat("Installing new packages... ")
1567367917916:install.packages(new.pkg, dependencies = TRUE,
1567367917916:repos="http://cran.rstudio.com/")
1567367917917:cat("Done!\n")
1567367917917:}
1567367917918:cat("Loading packages... \n")
1567367917918:sapply(pkg, require, character.only = TRUE)
1567367917918:cat("Done!\n")
1567367917919:}
1567367917920:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567367917920:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567367917921:installAndLoadPackages(requiredPackages)
1567367917927:# Format bar annotation text ----------------------------------------------
1567367917927:getAnnotationText <- function(value){
1567367917928:lapply(value, function(x) {
1567367917928:result = ""
1567367917928:if (x != 1) {
1567367917929:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567367917929:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567367917930:}
1567367917930:result
1567367917931:})
1567367917932:}
1567367917933:# Sources -----------------------------------------------------------------
1567367917934:source(file = "scripts/ggplot_theme.R")
1567367917993:# Loading Data ------------------------------------------------------------
1567367917993:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567367917994:excel_sheets(inFile)
1567367918006:(inData <- read_excel(inFile, sheet = "data"))
1567367918172:# General configuration ---------------------------------------------------
1567367918172:saveFigures <- TRUE
1567367918173:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567367918173:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567367918174:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567367918174:generalPalette <- c(
1567367918175:"MLST"   = '#0a4f75',
1567367918175:"rMLST"  = '#FFB238',
1567367918176:"cgMLST" = '#91bbe4'
1567367918176:# , "MLST"    = '#d7e4f5'
1567367918177:# , "rMLST"   = '#FFD592'
1567367918177:)
1567367918178:show_col(generalPalette)
1567367918201:annotTextColors       <- c(axisColor, "#ffffff")
1567367918202:baseVariantFontFamily <- baseFontFamily
1567367918203:# Preparing data ----------------------------------------------------------
1567367918204:customPalette   <- generalPalette
1567367918205:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567367918205:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567367918206:(inData <- inData %>%
1567367918207:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567367918813:(dataToPlot <- inData)
1567367919032:# Scheme DB Size Plot ------------------------------------------------
1567367919033:y_lim    <- seq(1,9, by = 2)
1567367919034:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367919041:(dbSizePlot <-
1567367919042:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567367919042:fill = Scheme)) +
1567367919046:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367919046:stat  = "identity",
1567367919050:position = position_dodge(width=0.9)
1567367919051:# , show.legend = F
1567367919051:) +
1567367919052:scale_y_log10(expand = c(0,0),
1567367919052:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567367919053:limits = c(1, 1e+9*1.8),
1567367919061:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567367919062:) +
1567367919062:scale_fill_manual(values = rev(customPalette),
1567367919063:# labels = typeLabels,
1567367919064:name   = "Scheme"
1567367919064:) +
1567367919065:labs(x = "Scheme",
1567367919065:y = "DB Size (bp)") +
1567367919066:publicationTheme() +
1567367919066:barPlotCustomsVertical +
1567367919067:theme(axis.text.y = element_text(family = baseFontFamily),
1567367919068:legend.box.background = element_blank(),
1567367919068:legend.direction = "vertical",
1567367919069:legend.position = "right"
1567367919070:)
1567367919070:)
1567367919676:# Scheme Alleles Plot ------------------------------------------------
1567367919677:y_lim    <- seq(1,9, by = 2)
1567367919678:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367919683:(dbAllelesPlot <-
1567367919683:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567367919684:fill = Scheme)) +
1567367919684:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567367919685:stat  = "identity",
1567367919685:position = position_dodge(width=0.9)
1567367919686:# , show.legend = F
1567367919686:) +
1567367919687:scale_y_log10(expand = c(0,0)
1567367919687:,breaks = c(1, 1e+2, 1e+4, 1e+6),
1567367919688:limits = c(1, 1e+6*1.8),
1567367919688:labels = c(1, sapply(c(2, 4, 6), function(u) as.expression(bquote(10^.(u)))))
1567367919689:) +
1567367919689:scale_fill_manual(values = rev(customPalette),
1567367919690:# labels = typeLabels,
1567367919690:name   = "Scheme"
1567367919691:) +
1567367919691:labs(x = "Scheme",
1567367919692:y = "Alleles") +
1567367919692:publicationTheme() +
1567367919693:barPlotCustomsVertical +
1567367919693:theme(axis.text.y = element_text(family = baseFontFamily),
1567367919694:legend.box.background = element_blank(),
1567367919694:legend.direction = "vertical",
1567367919695:legend.position = "right"
1567367919695:)
1567367919696:)
1567367921126:# Useful reads per DB ---------------------------------------------------------------
1567367921127:x_lim <- c(6:10)
1567367921127:y_lim <- c(3:7)
1567367921128:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367921132:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367921136:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567367921136:geom_line(size = 1, color = "#666666") +
1567367921136:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367921137:scale_x_log10(expand = c(0,0),
1567367921137:breaks = 10^(x_lim),
1567367921137:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367921137:limits = 10^(x_lim[c(1,length(x_lim))]),
1567367921138:labels = x_labels) +
1567367921138:scale_y_log10(expand = c(0,0),
1567367921138:breaks = 10^(y_lim),
1567367921139:limits = c(1e+3, 1e+7),
1567367921139:labels = y_labels
1567367921139:) +
1567367921140:scale_fill_manual(values = customPalette) +
1567367921140:labs(x = "DB Size (bp)",
1567367921140:y = "Useful Reads") +
1567367921141:publicationTheme()
1567367921141:+ theme(panel.grid.minor = element_blank())
1567367921141:)
1567367922096:# Processed k-mers per DB ---------------------------------------------------------------
1567367922096:x_lim <- c(6:10)
1567367922097:y_lim <- c(5:9)
1567367922098:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367922104:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367922112:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567367922112:geom_line(size = 1, color = "#666666") +
1567367922113:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367922113:scale_x_log10(expand = c(0,0),
1567367922114:breaks = 10^(x_lim),
1567367922114:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367922115:limits = 10^(x_lim[c(1,length(x_lim))]),
1567367922115:labels = x_labels) +
1567367922116:scale_y_log10(expand = c(0,0),
1567367922116:breaks = 10^(y_lim),
1567367922117:limits = 10^(y_lim[c(1,length(y_lim))]),
1567367922117:labels = y_labels
1567367922118:) +
1567367922119:scale_fill_manual(values = customPalette) +
1567367922119:labs(x = "DB Size (bp)",
1567367922120:y = "Processed k-mers") +
1567367922120:publicationTheme()
1567367922121:+ theme(panel.grid.minor = element_blank())
1567367922121:)
1567367923239:# Runtime per Task and DB -----------------------------------------------------
1567367923240:(dataToPlot <- inData %>%
1567367923241:select(Scheme, Size,
1567367923241:"Alleles" = Total_alleles,
1567367923242:"k-mer searching" = Searching_time,
1567367923242:"Index loading"   = Index_loading_time,
1567367923243:"Whole typing process" = Total_time) %>%
1567367923243:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567367923244:)
1567367924089:x_lim <- c(6:10)
1567367924090:y_lim <- c(0,4)
1567367924090:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367924096:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367924103:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567367924104:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567367924104:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367924105:scale_x_log10(expand = c(0,0),
1567367924105:breaks = 10^(x_lim),
1567367924106:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367924107:limits = 10^(x_lim[c(1,length(x_lim))]),
1567367924107:labels = x_labels) +
1567367924108:# scale_y_log10(expand = c(0,0),
1567367924109:# 							breaks = 10^(y_lim),
1567367924109:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567367924110:# 							labels = y_labels
1567367924110:# ) +
1567367924111:scale_fill_manual(values = customPalette) +
1567367924111:scale_color_aaas(name = "Task") +
1567367924112:labs(x = "DB Size (bp)",
1567367924112:y = "Time (s)") +
1567367924113:publicationTheme()
1567367924114:+ theme(panel.grid.minor = element_blank())
1567367924114:)
1567367925034:# Runtime per processed k-mers and DB size ------------------------------------
1567367925035:(dataToPlot <- inData %>%
1567367925035:select(Scheme, Size, Processed_kmers,
1567367925036:"Alleles" = Total_alleles,
1567367925036:"k-mer searching" = Searching_time,
1567367925036:"Index loading"   = Index_loading_time,
1567367925037:"Whole typing process" = Total_time) %>%
1567367925037:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567367925037:filter(`Time type` == "k-mer searching")
1567367925038:)
1567367926194:x_lim <- c(4:9)
1567367926195:y_lim <- c(0,4)
1567367926195:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567367926200:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567367926205:# mypal = pal_aaas()(9)
1567367926205:# show_col(mypal)
1567367926206:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567367926206:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567367926207:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567367926207:scale_x_log10(expand = c(0,0),
1567367926207:breaks = 10^(x_lim),
1567367926208:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567367926208:limits = 10^(x_lim[c(2,length(x_lim))]),
1567367926209:labels = x_labels
1567367926209:) +
1567367926209:# scale_y_log10(expand = c(0,0),
1567367926210:# 							breaks = 10^(y_lim),
1567367926210:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567367926210:# 							labels = y_labels
1567367926211:# ) +
1567367926211:scale_fill_manual(values = customPalette) +
1567367926211:# scale_color_aaas(name = "Task") +
1567367926212:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567367926212:labs(x = "Porcessed k-mers",
1567367926212:y = "Time (s)") +
1567367926213:publicationTheme()
1567367926213:+ theme(panel.grid.minor = element_blank())
1567367926214:)
1567367926876:# Combined plot -----------------------------------------------------------
1567367926876:legend1 <- get_legend(dbSizePlot)
1567367927115:legend2 <- get_legend(usefulReadsPlot)
1567367927353:legend3 <- get_legend(runtimePlot)
1567367927774:(legends <- plot_grid(legend1, legend2, legend3,
1567367927774:align = 'hv',
1567367927775:nrow = 2)
1567367927775:)
1567367953535:(legends <- plot_grid(legend1, legend2, legend3,
1567367953536:align = 'hv',
1567367953536:nrow = 3)
1567367953537:)
1567367966761:(row1 <- plot_grid(dbSizePlot + theme(plot.margin = unit(c(10,18,1,1), "mm")),
1567367966761:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567367966761:labels = c('A', 'B'),
1567367966762:# label_x = c(-1,-1),
1567367966762:align = 'hv', axis = 'tb',
1567367966763:# hjust = -0.2,
1567367966763:label_size = baseTextSize * 1.2,
1567367966763:ncol = 2
1567367966764:# , rel_widths = c(1, 0.98)
1567367966764:)
1567367966764:)
1567367977314:(row1 <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567367977315:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567367977316:labels = c('A', 'B'),
1567367977316:# label_x = c(-1,-1),
1567367977317:align = 'hv', axis = 'tb',
1567367977317:# hjust = -0.2,
1567367977318:label_size = baseTextSize * 1.2,
1567367977319:ncol = 2
1567367977319:# , rel_widths = c(1, 0.98)
1567367977320:)
1567367977320:)
1567368037352:(row1Plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368037353:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368037353:labels = c('A', 'B'),
1567368037354:# label_x = c(-1,-1),
1567368037355:align = 'hv', axis = 'tb',
1567368037355:# hjust = -0.2,
1567368037356:label_size = baseTextSize * 1.2,
1567368037356:ncol = 2
1567368037357:# , rel_widths = c(1, 0.98)
1567368037357:)
1567368037358:)
1567368233700:plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368233700:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368233701:usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368233701:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368233702:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368233702:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368233703:labels = c('A', 'B', 'C', 'D', 'E', 'F'),
1567368233704:# label_x = c(-1,-1),
1567368233704:align = 'hv', axis = 'tb',
1567368233705:# hjust = -0.2,
1567368233706:label_size = baseTextSize * 1.2,
1567368233706:ncol = 2
1567368233707:# , rel_widths = c(1, 0.98)
1567368233708:)
1567368256742:# MLST comparative test
1567368256743:# Install an load packages ------------------------------------------------
1567368256743:installAndLoadPackages <- function(pkg){
1567368256744:cat("Please wait a moment! Checking for required packages... ")
1567368256744:cat("Done!\n")
1567368256744:new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
1567368256745:if (length(new.pkg)) {
1567368256745:cat("Installing new packages... ")
1567368256746:install.packages(new.pkg, dependencies = TRUE,
1567368256746:repos="http://cran.rstudio.com/")
1567368256747:cat("Done!\n")
1567368256748:}
1567368256749:cat("Loading packages... \n")
1567368256749:sapply(pkg, require, character.only = TRUE)
1567368256750:cat("Done!\n")
1567368256750:}
1567368256751:requiredPackages <- c("cowplot", "gridExtra", "extrafont", "grid", "readxl",
1567368256752:"tidyverse", "magrittr", "ggsci", "RColorBrewer", "scales")
1567368256752:installAndLoadPackages(requiredPackages)
1567368256758:# Format bar annotation text ----------------------------------------------
1567368256758:getAnnotationText <- function(value){
1567368256758:lapply(value, function(x) {
1567368256759:result = ""
1567368256759:if (x != 1) {
1567368256759:# result = paste0("bolditalic('",format(round(x, 1), nsmall = 1),"x')")
1567368256760:result = paste0("italic('",format(round(x, 1), nsmall = 1),"x')")
1567368256760:}
1567368256760:result
1567368256761:})
1567368256761:}
1567368256762:# Sources -----------------------------------------------------------------
1567368256763:source(file = "scripts/ggplot_theme.R")
1567368256821:# Loading Data ------------------------------------------------------------
1567368256822:inFile      <- "data/typer/v0.24/kmer_stats.xlsx"
1567368256823:excel_sheets(inFile)
1567368256836:(inData <- read_excel(inFile, sheet = "data"))
1567368257071:# General configuration ---------------------------------------------------
1567368257071:saveFigures <- TRUE
1567368257072:# customPalette <- c("#0a4f75","#91bbe4","#d7e4f5")
1567368257072:# customPalette <- (brewer.pal(n = 7, name = "Paired"))
1567368257073:# generalPalette <- c('#edc374','#e8702a','#d7e4f5','#91bbe4','#0a4f75')
1567368257073:generalPalette <- c(
1567368257074:"MLST"   = '#0a4f75',
1567368257074:"rMLST"  = '#FFB238',
1567368257074:"cgMLST" = '#91bbe4'
1567368257075:# , "MLST"    = '#d7e4f5'
1567368257075:# , "rMLST"   = '#FFD592'
1567368257076:)
1567368257077:show_col(generalPalette)
1567368257092:annotTextColors       <- c(axisColor, "#ffffff")
1567368257093:baseVariantFontFamily <- baseFontFamily
1567368257094:# Preparing data ----------------------------------------------------------
1567368257094:customPalette   <- generalPalette
1567368257095:# typeLabels[typeLabels=="k-mer"] = expression(paste(italic('k'), "-mer"))
1567368257095:# typeLabels[grep("k-mer/alignment", typeLabels)] = expression(paste(italic('k'), textstyle("-mer/dynamic")))
1567368257096:(inData <- inData %>%
1567368257096:mutate(Scheme = factor(inData$Scheme, levels = inData$Scheme)))
1567368257934:(dataToPlot <- inData)
1567368258324:# Scheme DB Size Plot ------------------------------------------------
1567368258324:y_lim    <- seq(1,9, by = 2)
1567368258325:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567368258332:(dbSizePlot <-
1567368258333:ggplot(dataToPlot, aes(x = Scheme, y = Size,
1567368258334:fill = Scheme)) +
1567368258334:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567368258335:stat  = "identity",
1567368258335:position = position_dodge(width=0.9)
1567368258336:# , show.legend = F
1567368258336:) +
1567368258337:scale_y_log10(expand = c(0,0),
1567368258337:breaks = c(1, 1e+3, 1e+6, 1e+9),
1567368258338:limits = c(1, 1e+9*1.8),
1567368258338:labels = c(1, sapply(c(3, 6, 9), function(u) as.expression(bquote(10^.(u)))))
1567368258339:) +
1567368258339:scale_fill_manual(values = rev(customPalette),
1567368258340:# labels = typeLabels,
1567368258340:name   = "Scheme"
1567368258341:) +
1567368258342:labs(x = "Scheme",
1567368258342:y = "DB Size (bp)") +
1567368258343:publicationTheme() +
1567368258343:barPlotCustomsVertical +
1567368258344:theme(axis.text.y = element_text(family = baseFontFamily),
1567368258345:legend.box.background = element_blank(),
1567368258345:legend.direction = "vertical",
1567368258346:legend.position = "right"
1567368258347:)
1567368258347:)
1567368259063:# Scheme Alleles Plot ------------------------------------------------
1567368259064:y_lim    <- seq(1,9, by = 2)
1567368259065:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567368259072:(dbAllelesPlot <-
1567368259072:ggplot(dataToPlot, aes(x = Scheme, y = Total_alleles,
1567368259073:fill = Scheme)) +
1567368259073:geom_bar(color = axisColor, size = barBorderSize, width=barWidth,
1567368259074:stat  = "identity",
1567368259074:position = position_dodge(width=0.9)
1567368259075:# , show.legend = F
1567368259075:) +
1567368259076:scale_y_log10(expand = c(0,0)
1567368259076:,breaks = c(1, 1e+2, 1e+4, 1e+6),
1567368259077:limits = c(1, 1e+6*1.8),
1567368259077:labels = c(1, sapply(c(2, 4, 6), function(u) as.expression(bquote(10^.(u)))))
1567368259078:) +
1567368259078:scale_fill_manual(values = rev(customPalette),
1567368259079:# labels = typeLabels,
1567368259079:name   = "Scheme"
1567368259080:) +
1567368259080:labs(x = "Scheme",
1567368259081:y = "Alleles") +
1567368259082:publicationTheme() +
1567368259082:barPlotCustomsVertical +
1567368259083:theme(axis.text.y = element_text(family = baseFontFamily),
1567368259083:legend.box.background = element_blank(),
1567368259084:legend.direction = "vertical",
1567368259084:legend.position = "right"
1567368259085:)
1567368259086:)
1567368260050:# Useful reads per DB ---------------------------------------------------------------
1567368260051:x_lim <- c(6:10)
1567368260051:y_lim <- c(3:7)
1567368260052:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567368260059:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567368260066:(usefulReadsPlot <- ggplot(dataToPlot, aes(x = Size, y = Reads)) +
1567368260066:geom_line(size = 1, color = "#666666") +
1567368260066:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567368260067:scale_x_log10(expand = c(0,0),
1567368260067:breaks = 10^(x_lim),
1567368260068:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567368260068:limits = 10^(x_lim[c(1,length(x_lim))]),
1567368260069:labels = x_labels) +
1567368260069:scale_y_log10(expand = c(0,0),
1567368260070:breaks = 10^(y_lim),
1567368260070:limits = c(1e+3, 1e+7),
1567368260071:labels = y_labels
1567368260071:) +
1567368260072:scale_fill_manual(values = customPalette) +
1567368260072:labs(x = "DB Size (bp)",
1567368260073:y = "Useful Reads") +
1567368260073:publicationTheme()
1567368260074:+ theme(panel.grid.minor = element_blank())
1567368260074:)
1567368261054:# Processed k-mers per DB ---------------------------------------------------------------
1567368261055:x_lim <- c(6:10)
1567368261056:y_lim <- c(5:9)
1567368261056:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567368261061:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567368261065:(processedKmersPlot <- ggplot(dataToPlot, aes(x = Size, y = Processed_kmers)) +
1567368261065:geom_line(size = 1, color = "#666666") +
1567368261066:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567368261066:scale_x_log10(expand = c(0,0),
1567368261066:breaks = 10^(x_lim),
1567368261067:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567368261067:limits = 10^(x_lim[c(1,length(x_lim))]),
1567368261067:labels = x_labels) +
1567368261068:scale_y_log10(expand = c(0,0),
1567368261068:breaks = 10^(y_lim),
1567368261069:limits = 10^(y_lim[c(1,length(y_lim))]),
1567368261069:labels = y_labels
1567368261069:) +
1567368261070:scale_fill_manual(values = customPalette) +
1567368261070:labs(x = "DB Size (bp)",
1567368261070:y = "Processed k-mers") +
1567368261071:publicationTheme()
1567368261071:+ theme(panel.grid.minor = element_blank())
1567368261072:)
1567368262058:# Runtime per Task and DB -----------------------------------------------------
1567368262059:(dataToPlot <- inData %>%
1567368262059:select(Scheme, Size,
1567368262059:"Alleles" = Total_alleles,
1567368262060:"k-mer searching" = Searching_time,
1567368262060:"Index loading"   = Index_loading_time,
1567368262060:"Whole typing process" = Total_time) %>%
1567368262061:gather("Time type", Time, -c("Scheme", "Size", "Alleles"))
1567368262061:)
1567368263077:x_lim <- c(6:10)
1567368263077:y_lim <- c(0,4)
1567368263078:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567368263100:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567368263116:(runtimePlot <- ggplot(dataToPlot, aes(x = Size, y = Time)) +
1567368263116:geom_line(aes(color = `Time type`), size = 1) + #, color = "#666666") +
1567368263117:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567368263117:scale_x_log10(expand = c(0,0),
1567368263118:breaks = 10^(x_lim),
1567368263118:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567368263119:limits = 10^(x_lim[c(1,length(x_lim))]),
1567368263120:labels = x_labels) +
1567368263125:# scale_y_log10(expand = c(0,0),
1567368263125:# 							breaks = 10^(y_lim),
1567368263126:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567368263126:# 							labels = y_labels
1567368263127:# ) +
1567368263127:scale_fill_manual(values = customPalette) +
1567368263128:scale_color_aaas(name = "Task") +
1567368263129:labs(x = "DB Size (bp)",
1567368263129:y = "Time (s)") +
1567368263130:publicationTheme()
1567368263133:+ theme(panel.grid.minor = element_blank())
1567368263133:)
1567368265344:# Runtime per processed k-mers and DB size ------------------------------------
1567368265345:(dataToPlot <- inData %>%
1567368265346:select(Scheme, Size, Processed_kmers,
1567368265346:"Alleles" = Total_alleles,
1567368265347:"k-mer searching" = Searching_time,
1567368265347:"Index loading"   = Index_loading_time,
1567368265348:"Whole typing process" = Total_time) %>%
1567368265348:gather("Time type", Time, -c("Scheme", "Size", "Alleles", "Processed_kmers")) %>%
1567368265349:filter(`Time type` == "k-mer searching")
1567368265349:)
1567368266903:x_lim <- c(4:9)
1567368266904:y_lim <- c(0,4)
1567368266904:x_labels <-  sapply(x_lim, function(u) as.expression(bquote(10^.(u))))
1567368266909:y_labels <-  sapply(y_lim, function(u) as.expression(bquote(10^.(u))))
1567368266914:# mypal = pal_aaas()(9)
1567368266914:# show_col(mypal)
1567368266915:(runtimeKmersPlot <- ggplot(dataToPlot, aes(x = Processed_kmers, y = Time)) +
1567368266916:geom_line(aes(color = `Time type`), size = 1) +#, color = "#EE0000FF") +
1567368266916:geom_point(aes(fill = Scheme), shape = 21, size = 3, stroke = 0.8) +
1567368266917:scale_x_log10(expand = c(0,0),
1567368266917:breaks = 10^(x_lim),
1567368266918:# limits = c(1e+6, max(dataToPlot$Size)*1.6),
1567368266918:limits = 10^(x_lim[c(2,length(x_lim))]),
1567368266919:labels = x_labels
1567368266919:) +
1567368266920:# scale_y_log10(expand = c(0,0),
1567368266920:# 							breaks = 10^(y_lim),
1567368266921:# 							limits = 10^(y_lim[c(1,length(y_lim))]),
1567368266921:# 							labels = y_labels
1567368266922:# ) +
1567368266922:scale_fill_manual(values = customPalette) +
1567368266923:# scale_color_aaas(name = "Task") +
1567368266923:scale_color_manual(name = "Task", values = "#EE0000FF") +
1567368266923:labs(x = "Porcessed k-mers",
1567368266924:y = "Time (s)") +
1567368266924:publicationTheme()
1567368266924:+ theme(panel.grid.minor = element_blank())
1567368266925:)
1567368267780:# Combined plot -----------------------------------------------------------
1567368267781:legend1 <- get_legend(dbSizePlot)
1567368268060:legend2 <- get_legend(usefulReadsPlot)
1567368268308:legend3 <- get_legend(runtimePlot)
1567368268662:(legends <- plot_grid(legend1, legend2, legend3,
1567368268662:align = 'hv',
1567368268663:nrow = 3)
1567368268663:)
1567368270368:# (row1Plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368270368:# 									 dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368270369:# 									 labels = c('A', 'B'),
1567368270369:# 									 # label_x = c(-1,-1),
1567368270369:# 									 align = 'hv', axis = 'tb',
1567368270370:# 									 # hjust = -0.2,
1567368270370:# 									 label_size = baseTextSize * 1.2,
1567368270370:# 									 ncol = 2
1567368270371:# 									 # , rel_widths = c(1, 0.98)
1567368270371:# 									 )
1567368270371:# )
1567368270371:#
1567368270372:# (row2Plots <- plot_grid(usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368270372:# 												processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368270372:# 												runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368270373:# 												runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368270373:# 												labels = c('B', 'C', 'D', 'E'),
1567368270373:# 												# label_x = c(-1,-1),
1567368270374:# 												align = 'hv', axis = 'tb',
1567368270374:# 												# hjust = -0.2,
1567368270374:# 												label_size = baseTextSize * 1.2,
1567368270375:# 												ncol = 2, nrow = 2
1567368270375:# 												, rel_widths = c(1, 0.98)
1567368270375:# ))
1567368270376:plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368270376:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368270377:usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368270377:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368270377:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567368270378:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567368270379:labels = c('A', 'B', 'C', 'D', 'E', 'F'),
1567368270379:# label_x = c(-1,-1),
1567368270380:align = 'hv', axis = 'tb',
1567368270381:# hjust = -0.2,
1567368270381:label_size = baseTextSize * 1.2,
1567368270382:ncol = 2
1567368270383:# , rel_widths = c(1, 0.98)
1567368270383:)
1567368281228:plots
1567368393399:(combinedPlot <- plot_grid(plots, legends,
1567368393400:ncol = 2,
1567368393400:widths = c(1,0.3)))
1567368404630:(legends <- plot_grid(legend1, legend2, legend3,
1567368404631:align = 'hv',
1567368404632:nrow = 3)
1567368404632:)
1567368416743:(combinedPlot <- plot_grid(plots, legends,
1567368416743:ncol = 2,
1567368416744:widths = c(1,0.3)))
1567368458043:(combinedPlot <- plot_grid(plots, legends))#,
1567368501881:(combinedPlot <- plot_grid(plots, legends,
1567368501882:# ncol = 2,
1567368501882:widths = c(1,0.3)))
1567368514765:(combinedPlot <- plot_grid(plots, legends,
1567368514766:ncol = 2,
1567368514766:rel_widths = c(1,0.3)))
1567368553379:(combinedPlot <- plot_grid(plots, legends,
1567368553380:ncol = 2,
1567368553380:rel_widths = c(1,0.2)))
1567368597170:(combinedPlot <- plot_grid(plots, legends,
1567368597171:ncol = 2,
1567368597171:rel_widths = c(1,0.25)))
1567368661075:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 16)
1567368691905:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 15)
1567368704515:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567368953407:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/ggplot_theme.R')
1567368957866:if (length(fonts()) == 0){
1567368957867:font_import(pattern = "[A|a]rial", prompt = FALSE)
1567368957868:font_import(pattern = "[h|H]elvetica", prompt = FALSE)
1567368957868:font_import(pattern = "[h|H]elveticaNeueLTStd-Bd", prompt = FALSE)
1567368957869:font_import(pattern = "[H/h]elveticaNeueLTStd-Lt", prompt = FALSE)
1567368957869:# font_import(prompt = FALSE)
1567368957870:}
1567368963765:font_import(pattern = "[h|H]elveticaNeueLTStd-Bd", prompt = FALSE)
1567368998797:ft <- fonttable()
1567369003750:ft
1567369049285:font_import(pattern = "[h|H]elvetica", prompt = FALSE)
1567369062006:# ft <- fonttable()
1567369062007:loadfonts(quiet = TRUE)
1567369090644:(plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369090645:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369090645:usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369090646:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369090646:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369090646:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369090647:labels = c('A', 'B', 'C', 'D', 'E', 'F'),
1567369090647:label_fontfamily = boldFontFamily,
1567369090648:align = 'hv', axis = 'tb',
1567369090648:label_size = baseTextSize * 1.2,
1567369090649:ncol = 2
1567369090649:))
1567369104880:(combinedPlot <- plot_grid(plots, legends,
1567369104881:ncol = 2,
1567369104881:rel_widths = c(1,0.25)))
1567369127527:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567369139850:fonttable()
1567369146891:ft <- fonttable()
1567369148182:View(ft)
1567369235717:View(ft)
1567369333630:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/ggplot_theme.R')
1567369347032:boldFontFamily     <- "HelveticaNeueLT Std"
1567369347950:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/ggplot_theme.R')
1567369353657:(plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369353658:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369353659:usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369353659:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369353660:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369353661:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369353661:labels = c('A', 'B', 'C', 'D', 'E', 'F'),
1567369353662:label_fontfamily = boldFontFamily,
1567369353663:align = 'hv', axis = 'tb',
1567369353663:label_size = baseTextSize * 1.2,
1567369353664:ncol = 2
1567369353665:))
1567369366122:(combinedPlot <- plot_grid(plots, legends,
1567369366473:ncol = 2,
1567369366473:rel_widths = c(1,0.25)))
1567369395239:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567369497560:source('~/Dropbox (GaTech)/data/gatech/projects/STing/manuscript/scripts/ggplot_theme.R')
1567369507898:- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369507899:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369507899:usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369507900:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369507900:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369507901:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369507901:labels = c('A', 'B', 'C', 'D', 'E', 'F'),
1567369507902:label_fontfamily = boldFontFamily,
1567369507903:align = 'hv', axis = 'tb',
1567369507903:label_size = baseTextSize * 1.2,
1567369507904:ncol = 2
1567369507905:))
1567369507906:(combinedPlot <- plot_grid(plots, legends,
1567369507907:ncol = 2,
1567369507907:rel_widths = c(1,0.25)))
1567369520670:(plots <- plot_grid(dbSizePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369520671:dbAllelesPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369520671:usefulReadsPlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369520671:processedKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369520672:runtimePlot + theme(legend.position = "none", plot.margin = unit(c(10,18,1,1), "mm")),
1567369520672:runtimeKmersPlot + theme(legend.position = "none", plot.margin = unit(c(10,1,1,1), "mm")),
1567369520673:labels = c('A', 'B', 'C', 'D', 'E', 'F'),
1567369520673:label_fontfamily = boldFontFamily,
1567369520673:align = 'hv', axis = 'tb',
1567369520674:label_size = baseTextSize * 1.2,
1567369520674:ncol = 2
1567369520675:))
1567369538970:(combinedPlot <- plot_grid(plots, legends,
1567369538971:ncol = 2,
1567369538971:rel_widths = c(1,0.25)))
1567369552853:ggsave("manuscript_material/fig_S7.pdf", combinedPlot, width = 14, height = 14)
1567433325284:# Install packages (if not installed, run the line below just once)
1567433325326:# install.packages(c("tidyverse", "grid", "sitools"))
1567433325327:# Load packages
1567433325328:library(tidyverse, verbose = T)
1567433327269:library(grid)
1567433327282:library(sitools)
1567433327299:# Variable definition -----------------------------------------------------
1567433327300:# Set work directory
1567433327300:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567433327301:# Input variables
1567433327301:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567433327302:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567433327303:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567433327304:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567433327304:window_size <- 10000
1567433327306:# General variables
1567433327306:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567433345213:# # Load data ---------------------------------------------------------------
1567433345213:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567433345214:# (all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567433345214:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567433345215:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("lg", "length")))
1567433349511:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567433349512:(cum_genome_size <- chromosome_lengths)
1567433349994:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567433350299:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1567433350753:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$lg, "_", simplify = TRUE)[,2]))
1567433351336:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1567433353153:cum_genome_size
1567433354574:load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567433376112:# # Load data ---------------------------------------------------------------
1567433376113:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567433376113:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567433451455:# Plot --------------------------------------------------------------------
1567433451456:# Prepare data to plot (add global position using the genome cumulative size data)
1567433451456:# (data_to_plot <- filtered_mut_variants_less_100 %>%
1567433451457:(data_to_plot <- filtered_mut_variants %>%
1567433451457:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433451458:mutate(global_pos = pos + lower_limit - 1) %>%
1567433451458:select(-c(lower_limit))
1567433451459:)
1567433464223:# Plot --------------------------------------------------------------------
1567433464224:# Prepare data to plot (add global position using the genome cumulative size data)
1567433464224:# (data_to_plot <- filtered_mut_variants_less_100 %>%
1567433464225:(data_to_plot <- filtered_variants %>%
1567433464225:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433464226:mutate(global_pos = pos + lower_limit - 1) %>%
1567433464226:select(-c(lower_limit))
1567433464227:)
1567433470411:# Plot configuration variables and options
1567433470412:options(scipen=10) # Avoid scientific notation on tick labels
1567433470767:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567433471132:chr_palette <- c("#ffffff", "#E5E0CA")
1567433472016:# Plot number of variants per chromosome
1567433472017:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567433472018:# + geom_rect(data = cum_genome_size,
1567433472018:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567433472019:# ,alpha = 0.7, show.legend = F)
1567433472019:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567433472019:+ geom_point()
1567433472020:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567433472020:#                  # fill = "#444444"
1567433472021:#                  fill = "darkolivegreen"
1567433472022:#                  )
1567433472023:# + scale_fill_manual(values = chr_palette)
1567433472023:# + scale_y_continuous(expand = c(0,0))
1567433472024:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567433472024:+ theme_bw()
1567433472025:+ theme(axis.text    = element_text(size = 11),
1567433472026:axis.text.x  = element_text(angle = 50, hjust = 1),
1567433472028:axis.title   = element_text(size = 12),
1567433472028:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567433472029:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567433472030:panel.grid   = element_blank(),
1567433472030:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567433472031:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567433472032:plot.title = element_text(hjust = 0.5)
1567433472032:)
1567433472033:+ labs(title = "Whole Genome Homozygous Variants",
1567433472033:subtitle = "All MUT and WT",
1567433472034:x = "Physical position (Mb)",
1567433472035:y = paste("Variants per", f2si(window_size, unit = "b"), "bin")
1567433472035:)
1567433472036:)
1567433530248:# Plot --------------------------------------------------------------------
1567433530248:# Prepare data to plot (add global position using the genome cumulative size data)
1567433530249:(data_to_plot <- filtered_mut_variants_less_100 %>%
1567433530249:top_n(1000) %>%
1567433530250:# (data_to_plot <- filtered_variants %>%
1567433530250:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433530251:mutate(global_pos = pos + lower_limit - 1) %>%
1567433530252:select(-c(lower_limit))
1567433530253:)
1567433539722:# Plot number of variants per chromosome
1567433539723:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567433539723:# + geom_rect(data = cum_genome_size,
1567433539724:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567433539724:# ,alpha = 0.7, show.legend = F)
1567433539725:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567433539725:+ geom_point()
1567433539726:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567433539726:#                  # fill = "#444444"
1567433539726:#                  fill = "darkolivegreen"
1567433539727:#                  )
1567433539727:# + scale_fill_manual(values = chr_palette)
1567433539728:# + scale_y_continuous(expand = c(0,0))
1567433539728:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567433539729:+ theme_bw()
1567433539729:+ theme(axis.text    = element_text(size = 11),
1567433539730:axis.text.x  = element_text(angle = 50, hjust = 1),
1567433539730:axis.title   = element_text(size = 12),
1567433539731:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567433539731:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567433539732:panel.grid   = element_blank(),
1567433539732:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567433539734:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567433539735:plot.title = element_text(hjust = 0.5)
1567433539735:)
1567433539736:+ labs(title = "Whole Genome Homozygous Variants",
1567433539737:subtitle = "All MUT and WT",
1567433539737:x = "Physical position (Mb)",
1567433539738:y = paste("Variants per", f2si(window_size, unit = "b"), "bin")
1567433539738:)
1567433539739:)
1567433580225:# Plot number of variants per chromosome
1567433580226:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567433580226:# + geom_rect(data = cum_genome_size,
1567433580227:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567433580227:# ,alpha = 0.7, show.legend = F)
1567433580228:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567433580228:+ geom_point()
1567433580229:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567433580229:#                  # fill = "#444444"
1567433580230:#                  fill = "darkolivegreen"
1567433580231:#                  )
1567433580231:# + scale_fill_manual(values = chr_palette)
1567433580231:# + scale_y_continuous(expand = c(0,0))
1567433580232:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567433580232:+ theme_bw()
1567433580232:+ theme(axis.text    = element_text(size = 11),
1567433580233:axis.text.x  = element_text(angle = 50, hjust = 1),
1567433580233:axis.title   = element_text(size = 12),
1567433580233:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567433580234:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567433580235:panel.grid   = element_blank(),
1567433580236:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567433580237:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567433580238:plot.title = element_text(hjust = 0.5)
1567433580239:)
1567433580239:+ labs(title = "Whole Genome Homozygous Variants",
1567433580240:subtitle = "All MUT and WT",
1567433580240:x = "Physical position (Mb)",
1567433580241:y = paste("Allele frequency")
1567433580241:)
1567433580244:)
1567433601270:View(data_to_plot)
1567433648771:# Install packages (if not installed, run the line below just once)
1567433648771:# install.packages(c("tidyverse", "grid", "sitools"))
1567433648772:# Load packages
1567433648773:library(tidyverse, verbose = T)
1567433648775:library(grid)
1567433648776:library(sitools)
1567433648778:# Variable definition -----------------------------------------------------
1567433648778:# Set work directory
1567433648779:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567433648779:# Input variables
1567433648780:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567433648782:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567433648782:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567433648783:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567433648783:window_size <- 10000
1567433648784:# General variables
1567433648784:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567433648785:# # Load data ---------------------------------------------------------------
1567433648785:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567433648786:# (all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567433648786:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567433648786:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("lg", "length")))
1567433654983:# # Load data ---------------------------------------------------------------
1567433654983:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567433654984:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567433781817:# Plot --------------------------------------------------------------------
1567433781817:# Prepare data to plot (add global position using the genome cumulative size data)
1567433781818:(data_to_plot <- all_mut_variants %>%
1567433781818:filter(cov < 100) %>%
1567433781819:top_n(1000) %>%
1567433781820:# (data_to_plot <- filtered_variants %>%
1567433781820:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433781821:mutate(global_pos = pos + lower_limit - 1) %>%
1567433781822:select(-c(lower_limit))
1567433781822:)
1567433797914:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567433797914:(cum_genome_size <- chromosome_lengths)
1567433797965:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567433797967:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1567433797968:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$lg, "_", simplify = TRUE)[,2]))
1567433797969:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1567433797970:cum_genome_size
1567433807377:# Plot --------------------------------------------------------------------
1567433807378:# Prepare data to plot (add global position using the genome cumulative size data)
1567433807378:(data_to_plot <- all_mut_variants %>%
1567433807378:filter(cov < 100) %>%
1567433807379:top_n(1000) %>%
1567433807379:# (data_to_plot <- filtered_variants %>%
1567433807379:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433807380:mutate(global_pos = pos + lower_limit - 1) %>%
1567433807380:select(-c(lower_limit))
1567433807380:)
1567433819018:# # Plot configuration variables and options
1567433819018:# options(scipen=10) # Avoid scientific notation on tick labels
1567433819019:# x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567433819019:chr_palette <- c("#ffffff", "#E5E0CA")
1567433820002:# Plot number of variants per chromosome
1567433820002:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567433820003:# + geom_rect(data = cum_genome_size,
1567433820003:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567433820004:# ,alpha = 0.7, show.legend = F)
1567433820004:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567433820005:+ geom_point()
1567433820005:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567433820006:#                  # fill = "#444444"
1567433820006:#                  fill = "darkolivegreen"
1567433820007:#                  )
1567433820007:# + scale_fill_manual(values = chr_palette)
1567433820008:# + scale_y_continuous(expand = c(0,0))
1567433820009:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567433820009:+ theme_bw()
1567433820010:+ theme(axis.text    = element_text(size = 11),
1567433820010:axis.text.x  = element_text(angle = 50, hjust = 1),
1567433820011:axis.title   = element_text(size = 12),
1567433820011:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567433820012:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567433820013:panel.grid   = element_blank(),
1567433820013:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567433820014:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567433820015:plot.title = element_text(hjust = 0.5)
1567433820015:)
1567433820016:+ labs(title = "Whole Genome Homozygous Variants",
1567433820017:subtitle = "All MUT and WT",
1567433820017:x = "Physical position (Mb)",
1567433820018:y = paste("Allele frequency")
1567433820019:)
1567433820019:)
1567433825930:# # Plot configuration variables and options
1567433825930:# options(scipen=10) # Avoid scientific notation on tick labels
1567433825931:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567433827391:chr_palette <- c("#ffffff", "#E5E0CA")
1567433827824:# Plot number of variants per chromosome
1567433827824:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567433827825:# + geom_rect(data = cum_genome_size,
1567433827825:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567433827826:# ,alpha = 0.7, show.legend = F)
1567433827826:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567433827826:+ geom_point()
1567433827827:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567433827827:#                  # fill = "#444444"
1567433827827:#                  fill = "darkolivegreen"
1567433827828:#                  )
1567433827828:# + scale_fill_manual(values = chr_palette)
1567433827828:# + scale_y_continuous(expand = c(0,0))
1567433827829:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567433827829:+ theme_bw()
1567433827829:+ theme(axis.text    = element_text(size = 11),
1567433827830:axis.text.x  = element_text(angle = 50, hjust = 1),
1567433827830:axis.title   = element_text(size = 12),
1567433827831:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567433827831:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567433827831:panel.grid   = element_blank(),
1567433827832:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567433827832:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567433827833:plot.title = element_text(hjust = 0.5)
1567433827833:)
1567433827833:+ labs(title = "Whole Genome Homozygous Variants",
1567433827834:subtitle = "All MUT and WT",
1567433827835:x = "Physical position (Mb)",
1567433827835:y = paste("Allele frequency")
1567433827836:)
1567433827836:)
1567433864140:View(data_to_plot)
1567433887188:# Plot --------------------------------------------------------------------
1567433887188:# Prepare data to plot (add global position using the genome cumulative size data)
1567433887189:(data_to_plot <- all_mut_variants %>%
1567433887189:# filter(cov < 100) %>%
1567433887190:top_n(1000) %>%
1567433887190:# (data_to_plot <- filtered_variants %>%
1567433887191:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433887191:mutate(global_pos = pos + lower_limit - 1) %>%
1567433887192:select(-c(lower_limit))
1567433887192:)
1567433892370:# Plot number of variants per chromosome
1567433892371:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567433892371:# + geom_rect(data = cum_genome_size,
1567433892372:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567433892372:# ,alpha = 0.7, show.legend = F)
1567433892373:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567433892373:+ geom_point()
1567433892374:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567433892374:#                  # fill = "#444444"
1567433892375:#                  fill = "darkolivegreen"
1567433892375:#                  )
1567433892376:# + scale_fill_manual(values = chr_palette)
1567433892376:# + scale_y_continuous(expand = c(0,0))
1567433892377:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567433892377:+ theme_bw()
1567433892378:+ theme(axis.text    = element_text(size = 11),
1567433892378:axis.text.x  = element_text(angle = 50, hjust = 1),
1567433892380:axis.title   = element_text(size = 12),
1567433892381:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567433892384:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567433892384:panel.grid   = element_blank(),
1567433892385:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567433892385:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567433892386:plot.title = element_text(hjust = 0.5)
1567433892387:)
1567433892387:+ labs(title = "Whole Genome Homozygous Variants",
1567433892396:subtitle = "All MUT and WT",
1567433892397:x = "Physical position (Mb)",
1567433892398:y = paste("Allele frequency")
1567433892398:)
1567433892399:)
1567433910488:data_to_plot
1567433917311:# Plot --------------------------------------------------------------------
1567433917311:# Prepare data to plot (add global position using the genome cumulative size data)
1567433917312:(data_to_plot <- all_mut_variants %>%
1567433917312:# filter(cov < 100) %>%
1567433917313:top_n(1000) %>%
1567433917313:# (data_to_plot <- filtered_variants %>%
1567433917314:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg") %>%
1567433917314:mutate(global_pos = pos + lower_limit - 1) %>%
1567433917315:select(-c(lower_limit))
1567433917315:)
1567433925077:all_mut_variants
1567433952439:all_mut_variants %>%
1567433952439:# filter(cov < 100) %>%
1567433952440:top_n(1000) %>%
1567433952440:# (data_to_plot <- filtered_variants %>%
1567433952441:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg")
1567433964037:cum_genome_size
1567433980384:all_mut_variants
1567433999213:select(cum_genome_size, lg, lower_limit, color)
1567434007957:all_mut_variants %>%
1567434007957:# filter(cov < 100) %>%
1567434007957:top_n(1000) %>%
1567434007958:# (data_to_plot <- filtered_variants %>%
1567434007958:right_join(select(cum_genome_size, lg, lower_limit, color), by = "lg")
1567434072194:all_mut_variants %>%
1567434072195:# filter(cov < 100) %>%
1567434072195:top_n(1000) %>%
1567434072196:# (data_to_plot <- filtered_variants %>%
1567434072196:left_join(select(cum_genome_size, lg, lower_limit, color), by = "lg")
1567434081280:select(cum_genome_size, lg, lower_limit, color)
1567434093042:all_mut_variants %>%
1567434093042:# filter(cov < 100) %>%
1567434093043:top_n(1000) %>%
1567434093043:# (data_to_plot <- filtered_variants %>%
1567434093044:left_join(select(cum_genome_size, lg, lower_limit, color))
1567434099173:all_mut_variants
1567434123136:all_mut_variants %>%
1567434123136:# filter(cov < 100) %>%
1567434123137:top_n(100)
1567434181902:all_mut_variants %>%
1567434181903:# filter(cov < 100) %>%
1567434181903:top_n(100, wt = "pos")
1567434190204:all_mut_variants %>%
1567434190205:# filter(cov < 100) %>%
1567434190205:top_n(100, wt = "pos") %>%
1567434190206:# (data_to_plot <- filtered_variants %>%
1567434190206:left_join(select(cum_genome_size, lg, lower_limit, color))
1567434207413:all_mut_variants %>%
1567434207414:# filter(cov < 100) %>%
1567434207414:top_n(100, wt = "pos") %>%
1567434207414:# (data_to_plot <- filtered_variants %>%
1567434207415:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567434207415:mutate(global_pos = pos + lower_limit - 1) %>%
1567434207415:select(-c(lower_limit))
1567434216703:# # Plot configuration variables and options
1567434216704:# options(scipen=10) # Avoid scientific notation on tick labels
1567434216705:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567434217203:chr_palette <- c("#ffffff", "#E5E0CA")
1567434218650:# Plot number of variants per chromosome
1567434218651:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567434218651:# + geom_rect(data = cum_genome_size,
1567434218652:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567434218652:# ,alpha = 0.7, show.legend = F)
1567434218653:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567434218654:+ geom_point()
1567434218654:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567434218655:#                  # fill = "#444444"
1567434218655:#                  fill = "darkolivegreen"
1567434218656:#                  )
1567434218656:# + scale_fill_manual(values = chr_palette)
1567434218657:# + scale_y_continuous(expand = c(0,0))
1567434218657:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567434218658:+ theme_bw()
1567434218658:+ theme(axis.text    = element_text(size = 11),
1567434218659:axis.text.x  = element_text(angle = 50, hjust = 1),
1567434218660:axis.title   = element_text(size = 12),
1567434218660:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567434218662:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567434218663:panel.grid   = element_blank(),
1567434218663:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567434218664:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567434218664:plot.title = element_text(hjust = 0.5)
1567434218665:)
1567434218665:+ labs(title = "Whole Genome Homozygous Variants",
1567434218666:subtitle = "All MUT and WT",
1567434218666:x = "Physical position (Mb)",
1567434218667:y = paste("Allele frequency")
1567434218668:)
1567434218668:)
1567434255308:# Plot number of variants per chromosome
1567434255308:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567434255309:# + geom_rect(data = cum_genome_size,
1567434255309:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567434255310:# ,alpha = 0.7, show.legend = F)
1567434255310:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567434255311:+ geom_point()
1567434255311:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567434255312:#                  # fill = "#444444"
1567434255312:#                  fill = "darkolivegreen"
1567434255313:#                  )
1567434255313:# + scale_fill_manual(values = chr_palette)
1567434255314:+ scale_y_continuous(expand = c(0,0), limits = c(0,1))
1567434255314:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567434255315:+ theme_bw()
1567434255315:+ theme(axis.text    = element_text(size = 11),
1567434255316:axis.text.x  = element_text(angle = 50, hjust = 1),
1567434255316:axis.title   = element_text(size = 12),
1567434255317:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567434255317:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567434255323:panel.grid   = element_blank(),
1567434255324:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567434255325:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567434255326:plot.title = element_text(hjust = 0.5)
1567434255326:)
1567434255327:+ labs(title = "Whole Genome Homozygous Variants",
1567434255328:subtitle = "All MUT and WT",
1567434255328:x = "Physical position (Mb)",
1567434255329:y = paste("Allele frequency")
1567434255329:)
1567434255330:)
1567434267227:data_to_plot
1567434275402:# Plot --------------------------------------------------------------------
1567434275403:# Prepare data to plot (add global position using the genome cumulative size data)
1567434275403:(data_to_plot <- all_mut_variants %>%
1567434275404:# filter(cov < 100) %>%
1567434275404:top_n(100, wt = "pos") %>%
1567434275405:# (data_to_plot <- filtered_variants %>%
1567434275405:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567434275406:mutate(global_pos = pos + lower_limit - 1) %>%
1567434275406:select(-c(lower_limit))
1567434275407:)
1567434285195:# Plot number of variants per chromosome
1567434285196:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567434285196:# + geom_rect(data = cum_genome_size,
1567434285197:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567434285197:# ,alpha = 0.7, show.legend = F)
1567434285198:# + geom_vline(data = cum_genome_size, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567434285198:+ geom_point()
1567434285199:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567434285199:#                  # fill = "#444444"
1567434285200:#                  fill = "darkolivegreen"
1567434285200:#                  )
1567434285201:# + scale_fill_manual(values = chr_palette)
1567434285202:+ scale_y_continuous(expand = c(0,0), limits = c(0,1))
1567434285203:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567434285204:+ theme_bw()
1567434285204:+ theme(axis.text    = element_text(size = 11),
1567434285205:axis.text.x  = element_text(angle = 50, hjust = 1),
1567434285212:axis.title   = element_text(size = 12),
1567434285213:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567434285214:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567434285214:panel.grid   = element_blank(),
1567434285215:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567434285215:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567434285216:plot.title = element_text(hjust = 0.5)
1567434285217:)
1567434285217:+ labs(title = "Whole Genome Homozygous Variants",
1567434285218:subtitle = "All MUT and WT",
1567434285219:x = "Physical position (Mb)",
1567434285228:y = paste("Allele frequency")
1567434285229:)
1567434285230:)
1567436095093:# Install packages (if not installed, run the line below just once)
1567436095132:# install.packages(c("tidyverse", "grid", "sitools"))
1567436095133:# Load packages
1567436095133:library(tidyverse, verbose = T)
1567436096568:library(grid)
1567436096579:library(sitools)
1567436096592:# Variable definition -----------------------------------------------------
1567436096592:# Set work directory
1567436096592:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567436096593:# Input variables
1567436096593:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567436096594:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567436096594:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567436096595:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567436096595:window_size <- 10000
1567436096596:# General variables
1567436096596:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567436096597:# # Load data ---------------------------------------------------------------
1567436096597:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567436096598:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567436132658:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567436132658:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("lg", "length")))
1567436132970:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567436132970:(cum_genome_size <- chromosome_lengths)
1567436133001:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567436133002:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1567436133004:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$lg, "_", simplify = TRUE)[,2]))
1567436133073:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1567436133074:cum_genome_size
1567436133163:#
1567436133163:# load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567436133163:#
1567436133164:# # Filter variants ---------------------------------------------------------
1567436133164:# # Keep variants:
1567436133164:# # - with coverage < 100,
1567436133164:# # - with fvar >= 0.5, and
1567436133165:# # - that are present in the MUT and not in the WT (background) variant set
1567436133165:# (filtered_mut_variants_less_100 <- all_mut_variants %>%
1567436133165:#     filter(cov < 100) #%>%
1567436133166:#     # anti_join(background_variants, by = c("lg", "pos"))
1567436133166:# )
1567436133166:# # load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567436133166:# # save(filtered_variants, filtered_mut_variants_less_100, file = "data/02_WT_MUT_ALL/computed_data.Rdata")
1567436133167:# # Get some stats about the filtered variants
1567436133167:# (stats <- filtered_mut_variants_less_100 %>%
1567436133167:#   group_by(lg) %>%
1567436133168:#   summarise(fvar_min = min(fvar),
1567436133168:#             fvar_max = max(fvar),
1567436133168:#             fvar_mean = mean(fvar),
1567436133168:#             n_var = n())
1567436133169:# )
1567436173979:# Plot --------------------------------------------------------------------
1567436173979:# Prepare data to plot (add global position using the genome cumulative size data)
1567436173980:(data_to_plot <- all_mut_variants %>%
1567436173980:# filter(cov < 100) %>%
1567436173980:top_n(1000, wt = "pos") %>%
1567436173981:# (data_to_plot <- filtered_variants %>%
1567436173981:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567436173981:mutate(global_pos = pos + lower_limit - 1) %>%
1567436173982:select(-c(lower_limit))
1567436173982:)
1567436361166:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567436361166:+ geom_boxplot()
1567436361167:+ facet_wrap(vars(lg))
1567436361167:)
1567436461678:data_to_plot
1567436471864:# Plot --------------------------------------------------------------------
1567436471865:# Prepare data to plot (add global position using the genome cumulative size data)
1567436471865:(data_to_plot <- all_mut_variants %>%
1567436471866:# filter(cov < 100) %>%
1567436471866:top_n(1000, wt = "pos") %>%
1567436471866:# (data_to_plot <- filtered_variants %>%
1567436471867:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567436471867:mutate(global_pos = pos + lower_limit - 1) %>%
1567436471867:select(-c(lower_limit))
1567436471868:)
1567436571113:all_mut_variants %>%
1567436571512:# filter(cov < 100) %>%
1567436571513:top_n(1000, wt = "pos")
1567436674910:# Install packages (if not installed, run the line below just once)
1567436674910:# install.packages(c("tidyverse", "grid", "sitools"))
1567436674911:# Load packages
1567436674911:library(tidyverse, verbose = T)
1567436708276:library(grid)
1567436708286:library(sitools)
1567436708300:# Variable definition -----------------------------------------------------
1567436708302:# Set work directory
1567436708303:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567436708304:# Input variables
1567436708306:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567436708307:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567436708308:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567436708309:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567436708310:window_size <- 10000
1567436708311:# General variables
1567436708312:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567436708313:# # Load data ---------------------------------------------------------------
1567436708313:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567436708314:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567436780242:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567436780242:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("lg", "length")))
1567436780573:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567436780573:(cum_genome_size <- chromosome_lengths)
1567436780604:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567436780605:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1567436780606:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$lg, "_", simplify = TRUE)[,2]))
1567436781117:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1567436781118:cum_genome_size
1567436848661:all_mut_variants %>%
1567436848662:# filter(cov < 100) %>%
1567436848663:top_n(1000, wt = "pos")
1567436864383:all_mut_variants %>%
1567436864383:# filter(cov < 100) %>%
1567436864384:head(100)
1567436877230:all_mut_variants %>%
1567436877230:# filter(cov < 100) %>%
1567436877231:head(1000) %>%
1567436877231:# (data_to_plot <- filtered_variants %>%
1567436877232:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567436877232:mutate(global_pos = pos + lower_limit - 1) %>%
1567436877233:select(-c(lower_limit))
1567436877491:)
1567436885738:# Plot --------------------------------------------------------------------
1567436885738:# Prepare data to plot (add global position using the genome cumulative size data)
1567436885739:(data_to_plot <- all_mut_variants %>%
1567436885739:# filter(cov < 100) %>%
1567436885740:head(1000) %>%
1567436885740:# (data_to_plot <- filtered_variants %>%
1567436885740:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567436885741:mutate(global_pos = pos + lower_limit - 1) %>%
1567436885741:select(-c(lower_limit))
1567436885741:)
1567436893520:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567436893522:+ geom_boxplot()
1567436893522:)
1567436941849:# Plot --------------------------------------------------------------------
1567436941850:# Prepare data to plot (add global position using the genome cumulative size data)
1567436941850:(data_to_plot <- all_mut_variants %>%
1567436941850:filter(lg == "scaffold_1") %>%
1567436941851:# head(1000) %>%
1567436941851:# (data_to_plot <- filtered_variants %>%
1567436941851:left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567436941852:mutate(global_pos = pos + lower_limit - 1) %>%
1567436941852:select(-c(lower_limit))
1567436941852:)
1567436958856:# Plot --------------------------------------------------------------------
1567436958856:# Prepare data to plot (add global position using the genome cumulative size data)
1567436958856:(data_to_plot <- all_mut_variants %>%
1567436958857:filter(lg == "scaffold_1") #%>%
1567436958857:# head(1000) %>%
1567436958857:# (data_to_plot <- filtered_variants %>%
1567436958857:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567436958858:# mutate(global_pos = pos + lower_limit - 1) %>%
1567436958858:# select(-c(lower_limit))
1567436958858:)
1567436964440:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567436964441:+ geom_boxplot()
1567436964441:)
1567437029054:# Plot --------------------------------------------------------------------
1567437029055:# Prepare data to plot (add global position using the genome cumulative size data)
1567437029055:(data_to_plot <- all_mut_variants %>%
1567437029055:filter(lg == "scaffold_1") %>%
1567437029056:filter(cov < 100) #%>%
1567437029056:# head(1000) %>%
1567437029056:# (data_to_plot <- filtered_variants %>%
1567437029057:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567437029057:# mutate(global_pos = pos + lower_limit - 1) %>%
1567437029057:# select(-c(lower_limit))
1567437029058:)
1567437037269:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437037270:+ geom_boxplot()
1567437037271:)
1567437111165:# Plot --------------------------------------------------------------------
1567437111165:# Prepare data to plot (add global position using the genome cumulative size data)
1567437111166:(data_to_plot <- all_mut_variants %>%
1567437111166:filter(lg == "scaffold_1") %>%
1567437111166:filter(cov < 100, fvar >= 0.5) #%>%
1567437111167:# head(1000) %>%
1567437111167:# (data_to_plot <- filtered_variants %>%
1567437111167:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567437111168:# mutate(global_pos = pos + lower_limit - 1) %>%
1567437111168:# select(-c(lower_limit))
1567437111168:)
1567437138336:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437138336:+ geom_boxplot()
1567437138336:)
1567437160636:# Plot --------------------------------------------------------------------
1567437160637:# Prepare data to plot (add global position using the genome cumulative size data)
1567437160637:(data_to_plot <- all_mut_variants %>%
1567437160638:# filter(lg == "scaffold_1") %>%
1567437160638:filter(cov < 100, fvar >= 0.5) #%>%
1567437160639:# head(1000) %>%
1567437160639:# (data_to_plot <- filtered_variants %>%
1567437160640:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567437160640:# mutate(global_pos = pos + lower_limit - 1) %>%
1567437160641:# select(-c(lower_limit))
1567437160641:)
1567437169631:# Plot --------------------------------------------------------------------
1567437169631:# Prepare data to plot (add global position using the genome cumulative size data)
1567437169632:(data_to_plot <- all_mut_variants %>%
1567437169632:# filter(lg == "scaffold_1") %>%
1567437169633:filter(fvar >= 0.5) #%>%
1567437169633:# head(1000) %>%
1567437169633:# (data_to_plot <- filtered_variants %>%
1567437169634:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567437169634:# mutate(global_pos = pos + lower_limit - 1) %>%
1567437169634:# select(-c(lower_limit))
1567437169635:)
1567437175776:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437175777:+ geom_boxplot()
1567437175778:)
1567437375628:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437375628:+ geom_boxplot()
1567437375629:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437375629:shape = 18, size = 3, show_guide = FALSE)
1567437375630:)
1567437428716:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437428716:+ geom_boxplot()
1567437428717:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437428718:shape = 18, size = 3, show_guide = FALSE)
1567437428718:+ labs(
1567437428719:title = "Allele frequency distribution"
1567437428720:)
1567437428720:)
1567437461657:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437461658:+ geom_boxplot()
1567437461658:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437461658:shape = 18, size = 3, show_guide = FALSE)
1567437461659:+ labs(
1567437461659:title = "Allele frequency distribution"
1567437461659:)
1567437461660:+ theme(
1567437461660:plot.title = element_text(face = "bold")
1567437461660:)
1567437461661:)
1567437526922:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437526922:+ geom_boxplot()
1567437526923:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437526923:shape = 18, size = 3, show_guide = FALSE)
1567437526923:+ labs(
1567437526924:title    = "Allele frequency distribution",
1567437526924:subtitle = "MUT All - Freq. > 0.5"
1567437526924:)
1567437526925:+ theme(
1567437526925:plot.title = element_text(face = "bold")
1567437526925:)
1567437526926:)
1567437541422:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437541422:+ geom_boxplot()
1567437541423:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437541423:shape = 18, size = 3, show.legend = FALSE)
1567437541424:+ labs(
1567437541425:title    = "Allele frequency distribution",
1567437541425:subtitle = "MUT All - Freq. > 0.5"
1567437541426:)
1567437541426:+ theme(
1567437541427:plot.title = element_text(face = "bold")
1567437541428:)
1567437541428:)
1567437607626:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437607627:+ geom_boxplot()
1567437607627:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437607628:shape = 18, size = 3, show.legend = FALSE)
1567437607628:+ labs(
1567437607629:title    = "Allele frequency distribution",
1567437607629:subtitle = "MUT All - Freq. > 0.5"
1567437607630:)
1567437607631:+ theme_bw()
1567437607631:+ theme(
1567437607632:plot.title = element_text(face = "bold")
1567437607633:)
1567437607634:)
1567437632191:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437632191:+ geom_boxplot(fill = "#cccccc")
1567437632192:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437632193:shape = 18, size = 3, show.legend = FALSE)
1567437632193:+ labs(
1567437632194:title    = "Allele frequency distribution",
1567437632194:subtitle = "MUT All - Freq. > 0.5"
1567437632195:)
1567437632195:+ theme_bw()
1567437632196:+ theme(
1567437632197:plot.title = element_text(face = "bold")
1567437632197:)
1567437632198:)
1567437649494:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437649495:+ geom_boxplot(fill = "#E5E0CA")
1567437649495:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437649495:shape = 18, size = 3, show.legend = FALSE)
1567437649496:+ labs(
1567437649496:title    = "Allele frequency distribution",
1567437649497:subtitle = "MUT All - Freq. > 0.5"
1567437649497:)
1567437649498:+ theme_bw()
1567437649498:+ theme(
1567437649499:plot.title = element_text(face = "bold")
1567437649499:)
1567437649500:)
1567437768446:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437768447:+ geom_boxplot(fill = "#E5E0CA")
1567437768447:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437768448:shape = 18, size = 3, show.legend = FALSE)
1567437768448:+ labs(
1567437768449:title    = "Allele frequency distribution",
1567437768450:subtitle = "MUT All - Freq. > 0.5",
1567437768451:y        = "Allele frequency"
1567437768451:)
1567437768452:+ theme_bw()
1567437768452:+ theme(
1567437768452:plot.title = element_text(face = "bold"),
1567437768453:axis.title.x = element_blank()
1567437768454:)
1567437768455:)
1567437855951:paste("Chr", 1:9)
1567437859505:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437859505:+ geom_boxplot(fill = "#E5E0CA")
1567437859505:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437859506:shape = 18, size = 3, show.legend = FALSE)
1567437859506:+ scale_discrete_manual(labels = paste("Chr", 1:9))
1567437859507:+ labs(
1567437859507:title    = "Allele frequency distribution",
1567437859507:subtitle = "MUT All - Freq. > 0.5",
1567437859508:y        = "Allele frequency"
1567437859508:)
1567437859508:+ theme_bw()
1567437859509:+ theme(
1567437859509:plot.title = element_text(face = "bold"),
1567437859509:axis.title.x = element_blank()
1567437859510:)
1567437859510:)
1567437873530:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437873530:+ geom_boxplot(fill = "#E5E0CA")
1567437873531:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437873531:shape = 18, size = 3, show.legend = FALSE)
1567437873532:+ scale_x_discrete_manual(labels = paste("Chr", 1:9))
1567437873533:+ labs(
1567437873533:title    = "Allele frequency distribution",
1567437873534:subtitle = "MUT All - Freq. > 0.5",
1567437873534:y        = "Allele frequency"
1567437873535:)
1567437873535:+ theme_bw()
1567437873536:+ theme(
1567437873537:plot.title = element_text(face = "bold"),
1567437873537:axis.title.x = element_blank()
1567437873538:)
1567437873538:)
1567437883127:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437883127:+ geom_boxplot(fill = "#E5E0CA")
1567437883128:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437883128:shape = 18, size = 3, show.legend = FALSE)
1567437883128:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567437883129:+ labs(
1567437883129:title    = "Allele frequency distribution",
1567437883129:subtitle = "MUT All - Freq. > 0.5",
1567437883130:y        = "Allele frequency"
1567437883130:)
1567437883130:+ theme_bw()
1567437883131:+ theme(
1567437883131:plot.title = element_text(face = "bold"),
1567437883131:axis.title.x = element_blank()
1567437883132:)
1567437883133:)
1567437990959:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567437990959:+ geom_boxplot(fill = "#E5E0CA")
1567437990960:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567437990960:shape = 18, size = 3, show.legend = FALSE)
1567437990960:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567437990961:+ labs(
1567437990961:title    = "Allele frequency distribution",
1567437990961:subtitle = "MUT All - Freq. > 0.5",
1567437990962:y        = "Allele frequency"
1567437990962:)
1567437990962:+ theme_bw()
1567437990963:+ theme(
1567437990963:plot.title = element_text(face = "bold"),
1567437990963:axis.title.x = element_blank(),
1567437990964:axis.text    = element_text(size = 11),
1567437990964:axis.text.x  = element_text(angle = 50, hjust = 1),
1567437990964:axis.title   = element_text(size = 12),
1567437990965:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567437990965:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567437990966:panel.grid   = element_blank()
1567437990966:)
1567437990967:)
1567438008552:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438008552:+ geom_boxplot(fill = "#E5E0CA")
1567438008553:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438008554:shape = 18, size = 3, show.legend = FALSE)
1567438008554:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438008555:+ labs(
1567438008555:title    = "Allele frequency distribution",
1567438008556:subtitle = "MUT All - Freq. > 0.5",
1567438008557:y        = "Allele frequency"
1567438008558:)
1567438008558:+ theme_bw()
1567438008559:+ theme(
1567438008560:plot.title = element_text(face = "bold"),
1567438008560:axis.title.x = element_blank(),
1567438008561:axis.text    = element_text(size = 11),
1567438008562:axis.text.x  = element_text(angle = 50, hjust = 1),
1567438008562:axis.title   = element_text(size = 12),
1567438008563:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438008563:panel.grid   = element_blank()
1567438008564:)
1567438008564:)
1567438022067:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438022067:+ geom_boxplot(fill = "#E5E0CA")
1567438022067:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438022068:shape = 18, size = 3, show.legend = FALSE)
1567438022068:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438022069:+ labs(
1567438022069:title    = "Allele frequency distribution",
1567438022069:subtitle = "MUT All - Freq. > 0.5",
1567438022070:y        = "Allele frequency"
1567438022070:)
1567438022071:+ theme_bw()
1567438022071:+ theme(
1567438022072:plot.title = element_text(face = "bold"),
1567438022072:axis.title.x = element_blank(),
1567438022073:axis.text    = element_text(size = 11),
1567438022073:axis.text.x  = element_text(hjust = 1),
1567438022074:axis.title   = element_text(size = 12),
1567438022075:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438022075:panel.grid   = element_blank()
1567438022075:)
1567438022076:)
1567438030921:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438030922:+ geom_boxplot(fill = "#E5E0CA")
1567438030922:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438030923:shape = 18, size = 3, show.legend = FALSE)
1567438030923:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438030924:+ labs(
1567438030924:title    = "Allele frequency distribution",
1567438030925:subtitle = "MUT All - Freq. > 0.5",
1567438030925:y        = "Allele frequency"
1567438030925:)
1567438030926:+ theme_bw()
1567438030926:+ theme(
1567438030926:plot.title = element_text(face = "bold"),
1567438030927:axis.title.x = element_blank(),
1567438030927:axis.text    = element_text(size = 11),
1567438030928:# axis.text.x  = element_text(hjust = 0.5),
1567438030928:axis.title   = element_text(size = 12),
1567438030928:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438030929:panel.grid   = element_blank()
1567438030929:)
1567438030930:)
1567438197216:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438197216:+ geom_boxplot(fill = "#E5E0CA")
1567438197217:+ geom_jitter(width = 0.2)
1567438197217:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438197218:shape = 18, size = 3, show.legend = FALSE)
1567438197219:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438197219:+ labs(
1567438197219:title    = "Allele frequency distribution",
1567438197220:subtitle = "MUT All - Freq. > 0.5",
1567438197220:y        = "Allele frequency"
1567438197220:)
1567438197221:+ theme_bw()
1567438197221:+ theme(
1567438197222:plot.title = element_text(face = "bold"),
1567438197222:axis.title.x = element_blank(),
1567438197222:axis.text    = element_text(size = 11),
1567438197223:# axis.text.x  = element_text(hjust = 0.5),
1567438197223:axis.title   = element_text(size = 12),
1567438197223:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438197224:panel.grid   = element_blank()
1567438197224:)
1567438197225:)
1567438221145:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438221145:+ geom_boxplot(fill = "#E5E0CA")
1567438221146:+ geom_jitter(width = 0.2, alpha = 0.1)
1567438221146:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438221147:shape = 18, size = 3, show.legend = FALSE)
1567438221147:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438221148:+ labs(
1567438221149:title    = "Allele frequency distribution",
1567438221149:subtitle = "MUT All - Freq. > 0.5",
1567438221150:y        = "Allele frequency"
1567438221150:)
1567438221151:+ theme_bw()
1567438221152:+ theme(
1567438221153:plot.title = element_text(face = "bold"),
1567438221154:axis.title.x = element_blank(),
1567438221154:axis.text    = element_text(size = 11),
1567438221155:# axis.text.x  = element_text(hjust = 0.5),
1567438221156:axis.title   = element_text(size = 12),
1567438221156:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438221157:panel.grid   = element_blank()
1567438221157:)
1567438221158:)
1567438265941:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438265942:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#666666")
1567438265942:+ geom_boxplot(fill = "#E5E0CA")
1567438265942:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438265943:shape = 18, size = 3, show.legend = FALSE)
1567438265943:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438265944:+ labs(
1567438265944:title    = "Allele frequency distribution",
1567438265944:subtitle = "MUT All - Freq. > 0.5",
1567438265945:y        = "Allele frequency"
1567438265945:)
1567438265945:+ theme_bw()
1567438265946:+ theme(
1567438265946:plot.title = element_text(face = "bold"),
1567438265946:axis.title.x = element_blank(),
1567438265947:axis.text    = element_text(size = 11),
1567438265947:# axis.text.x  = element_text(hjust = 0.5),
1567438265947:axis.title   = element_text(size = 12),
1567438265948:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438265948:panel.grid   = element_blank()
1567438265948:)
1567438265949:)
1567438283872:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438283873:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#666666")
1567438283874:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438283874:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438283875:shape = 18, size = 3, show.legend = FALSE)
1567438283875:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438283875:+ labs(
1567438283876:title    = "Allele frequency distribution",
1567438283876:subtitle = "MUT All - Freq. > 0.5",
1567438283876:y        = "Allele frequency"
1567438283877:)
1567438283877:+ theme_bw()
1567438283878:+ theme(
1567438283878:plot.title = element_text(face = "bold"),
1567438283878:axis.title.x = element_blank(),
1567438283879:axis.text    = element_text(size = 11),
1567438283879:# axis.text.x  = element_text(hjust = 0.5),
1567438283880:axis.title   = element_text(size = 12),
1567438283880:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438283880:panel.grid   = element_blank()
1567438283881:)
1567438283881:)
1567438393640:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438393640:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#666666", shape = 18)
1567438393641:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438393642:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438393642:shape = 18, size = 3, show.legend = FALSE)
1567438393643:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438393643:+ labs(
1567438393644:title    = "Allele frequency distribution",
1567438393644:subtitle = "MUT All - Freq. > 0.5",
1567438393645:y        = "Allele frequency"
1567438393646:)
1567438393646:+ theme_bw()
1567438393647:+ theme(
1567438393648:plot.title = element_text(face = "bold"),
1567438393648:axis.title.x = element_blank(),
1567438393649:axis.text    = element_text(size = 11),
1567438393649:# axis.text.x  = element_text(hjust = 0.5),
1567438393650:axis.title   = element_text(size = 12),
1567438393651:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438393651:panel.grid   = element_blank()
1567438393652:)
1567438393653:)
1567438431280:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438431281:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#666666", shape = 20)
1567438431281:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438431281:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438431282:shape = 18, size = 3, show.legend = FALSE)
1567438431282:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438431282:+ labs(
1567438431283:title    = "Allele frequency distribution",
1567438431283:subtitle = "MUT All - Freq. > 0.5",
1567438431283:y        = "Allele frequency"
1567438431284:)
1567438431284:+ theme_bw()
1567438431284:+ theme(
1567438431285:plot.title = element_text(face = "bold"),
1567438431285:axis.title.x = element_blank(),
1567438431286:axis.text    = element_text(size = 11),
1567438431286:# axis.text.x  = element_text(hjust = 0.5),
1567438431286:axis.title   = element_text(size = 12),
1567438431287:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438431287:panel.grid   = element_blank()
1567438431288:)
1567438431288:)
1567438453696:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438453697:+ geom_jitter(width = 0.1, alpha = 0.1, fill = "#666666", shape = 20)
1567438453698:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438453698:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438453699:shape = 18, size = 3, show.legend = FALSE)
1567438453699:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438453700:+ labs(
1567438453700:title    = "Allele frequency distribution",
1567438453701:subtitle = "MUT All - Freq. > 0.5",
1567438453702:y        = "Allele frequency"
1567438453702:)
1567438453703:+ theme_bw()
1567438453703:+ theme(
1567438453704:plot.title = element_text(face = "bold"),
1567438453704:axis.title.x = element_blank(),
1567438453705:axis.text    = element_text(size = 11),
1567438453706:# axis.text.x  = element_text(hjust = 0.5),
1567438453706:axis.title   = element_text(size = 12),
1567438453707:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438453707:panel.grid   = element_blank()
1567438453708:)
1567438453709:)
1567438698143:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438698144:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#666666", shape = 20, solid = T)
1567438698144:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438698145:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438698145:shape = 18, size = 3, show.legend = FALSE)
1567438698145:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438698146:+ labs(
1567438698146:title    = "Allele frequency distribution",
1567438698146:subtitle = "MUT All - Freq. > 0.5",
1567438698147:y        = "Allele frequency"
1567438698147:)
1567438698148:+ theme_bw()
1567438698148:+ theme(
1567438698148:plot.title = element_text(face = "bold"),
1567438698149:axis.title.x = element_blank(),
1567438698149:axis.text    = element_text(size = 11),
1567438698149:# axis.text.x  = element_text(hjust = 0.5),
1567438698150:axis.title   = element_text(size = 12),
1567438698150:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438698151:panel.grid   = element_blank()
1567438698151:)
1567438698151:)
1567438832384:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438832385:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#bbbbbb", shape = 16)
1567438832385:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438832386:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438832386:shape = 18, size = 3, show.legend = FALSE)
1567438832387:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438832388:+ labs(
1567438832388:title    = "Allele frequency distribution",
1567438832389:subtitle = "MUT All - Freq. > 0.5",
1567438832389:y        = "Allele frequency"
1567438832390:)
1567438832390:+ theme_bw()
1567438832391:+ theme(
1567438832392:plot.title = element_text(face = "bold"),
1567438832392:axis.title.x = element_blank(),
1567438832393:axis.text    = element_text(size = 11),
1567438832393:# axis.text.x  = element_text(hjust = 0.5),
1567438832394:axis.title   = element_text(size = 12),
1567438832395:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438832396:panel.grid   = element_blank()
1567438832396:)
1567438832397:)
1567438862816:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438862816:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#666666", fill = "#666666", shape = 16)
1567438862817:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438862817:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438862818:shape = 18, size = 3, show.legend = FALSE)
1567438862818:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438862818:+ labs(
1567438862819:title    = "Allele frequency distribution",
1567438862819:subtitle = "MUT All - Freq. > 0.5",
1567438862819:y        = "Allele frequency"
1567438862820:)
1567438862820:+ theme_bw()
1567438862821:+ theme(
1567438862821:plot.title = element_text(face = "bold"),
1567438862821:axis.title.x = element_blank(),
1567438862822:axis.text    = element_text(size = 11),
1567438862822:# axis.text.x  = element_text(hjust = 0.5),
1567438862823:axis.title   = element_text(size = 12),
1567438862823:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438862824:panel.grid   = element_blank()
1567438862824:)
1567438862825:)
1567438888725:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438888726:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#000000", fill = "#000000", shape = 16)
1567438888726:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438888726:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438888727:shape = 18, size = 3, show.legend = FALSE)
1567438888727:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438888727:+ labs(
1567438888728:title    = "Allele frequency distribution",
1567438888728:subtitle = "MUT All - Freq. > 0.5",
1567438888729:y        = "Allele frequency"
1567438888729:)
1567438888729:+ theme_bw()
1567438888730:+ theme(
1567438888730:plot.title = element_text(face = "bold"),
1567438888730:axis.title.x = element_blank(),
1567438888731:axis.text    = element_text(size = 11),
1567438888731:# axis.text.x  = element_text(hjust = 0.5),
1567438888732:axis.title   = element_text(size = 12),
1567438888732:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438888732:panel.grid   = element_blank()
1567438888733:)
1567438888733:)
1567438926684:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438926684:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#000000", fill = "#000000", shape = 16)
1567438926685:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438926685:+ stat_summary(fun.y = mean, colour = "darkred", geom = "point",
1567438926686:shape = 23, size = 3, show.legend = FALSE)
1567438926686:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438926687:+ labs(
1567438926687:title    = "Allele frequency distribution",
1567438926688:subtitle = "MUT All - Freq. > 0.5",
1567438926688:y        = "Allele frequency"
1567438926689:)
1567438926689:+ theme_bw()
1567438926690:+ theme(
1567438926690:plot.title = element_text(face = "bold"),
1567438926691:axis.title.x = element_blank(),
1567438926691:axis.text    = element_text(size = 11),
1567438926692:# axis.text.x  = element_text(hjust = 0.5),
1567438926692:axis.title   = element_text(size = 12),
1567438926693:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438926694:panel.grid   = element_blank()
1567438926695:)
1567438926695:)
1567438983373:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567438983374:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#000000", fill = "#000000", shape = 21, size = 3)
1567438983374:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567438983375:+ stat_summary(fun.y = mean, fill = "darkred", geom = "point",
1567438983375:shape = 23, size = 3, show.legend = FALSE)
1567438983376:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567438983376:+ labs(
1567438983377:title    = "Allele frequency distribution",
1567438983377:subtitle = "MUT All - Freq. > 0.5",
1567438983377:y        = "Allele frequency"
1567438983378:)
1567438983378:+ theme_bw()
1567438983379:+ theme(
1567438983379:plot.title = element_text(face = "bold"),
1567438983379:axis.title.x = element_blank(),
1567438983380:axis.text    = element_text(size = 11),
1567438983380:# axis.text.x  = element_text(hjust = 0.5),
1567438983381:axis.title   = element_text(size = 12),
1567438983381:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567438983381:panel.grid   = element_blank()
1567438983382:)
1567438983382:)
1567439010347:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439010348:+ geom_jitter(width = 0.1, alpha = 0.1, color = "#000000", fill = "#000000", shape = 21, size = 1)
1567439010348:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567439010349:+ stat_summary(fun.y = mean, fill = "darkred", geom = "point",
1567439010349:shape = 23, size = 3, show.legend = FALSE)
1567439010350:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439010351:+ labs(
1567439010351:title    = "Allele frequency distribution",
1567439010352:subtitle = "MUT All - Freq. > 0.5",
1567439010352:y        = "Allele frequency"
1567439010353:)
1567439010353:+ theme_bw()
1567439010354:+ theme(
1567439010354:plot.title = element_text(face = "bold"),
1567439010355:axis.title.x = element_blank(),
1567439010356:axis.text    = element_text(size = 11),
1567439010356:# axis.text.x  = element_text(hjust = 0.5),
1567439010357:axis.title   = element_text(size = 12),
1567439010358:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439010358:panel.grid   = element_blank()
1567439010359:)
1567439010359:)
1567439093058:points_color = "dodgerblue"
1567439093521:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439093522:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439093522:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567439093523:+ stat_summary(fun.y = mean, fill = "darkred", geom = "point",
1567439093524:shape = 23, size = 3, show.legend = FALSE)
1567439093524:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439093525:+ labs(
1567439093526:title    = "Allele frequency distribution",
1567439093527:subtitle = "MUT All - Freq. > 0.5",
1567439093528:y        = "Allele frequency"
1567439093529:)
1567439093529:+ theme_bw()
1567439093530:+ theme(
1567439093531:plot.title = element_text(face = "bold"),
1567439093531:axis.title.x = element_blank(),
1567439093532:axis.text    = element_text(size = 11),
1567439093532:# axis.text.x  = element_text(hjust = 0.5),
1567439093533:axis.title   = element_text(size = 12),
1567439093534:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439093534:panel.grid   = element_blank()
1567439093535:)
1567439093535:)
1567439115013:points_color = "darkolive"
1567439115848:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439115849:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439115851:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567439115852:+ stat_summary(fun.y = mean, fill = "darkred", geom = "point",
1567439115853:shape = 23, size = 3, show.legend = FALSE)
1567439115853:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439115854:+ labs(
1567439115855:title    = "Allele frequency distribution",
1567439115856:subtitle = "MUT All - Freq. > 0.5",
1567439115857:y        = "Allele frequency"
1567439115858:)
1567439115859:+ theme_bw()
1567439115860:+ theme(
1567439115860:plot.title = element_text(face = "bold"),
1567439115861:axis.title.x = element_blank(),
1567439115862:axis.text    = element_text(size = 11),
1567439115862:# axis.text.x  = element_text(hjust = 0.5),
1567439115863:axis.title   = element_text(size = 12),
1567439115863:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439115864:panel.grid   = element_blank()
1567439115865:)
1567439115865:)
1567439149502:points_color = "darkolivegreen"
1567439149742:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439149742:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439149743:+ geom_boxplot(fill = "#E5E0CA", alpha = 0.4)
1567439149743:+ stat_summary(fun.y = mean, fill = "darkred", geom = "point",
1567439149744:shape = 23, size = 3, show.legend = FALSE)
1567439149745:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439149746:+ labs(
1567439149747:title    = "Allele frequency distribution",
1567439149747:subtitle = "MUT All - Freq. > 0.5",
1567439149748:y        = "Allele frequency"
1567439149749:)
1567439149750:+ theme_bw()
1567439149751:+ theme(
1567439149752:plot.title = element_text(face = "bold"),
1567439149753:axis.title.x = element_blank(),
1567439149753:axis.text    = element_text(size = 11),
1567439149754:# axis.text.x  = element_text(hjust = 0.5),
1567439149755:axis.title   = element_text(size = 12),
1567439149756:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439149757:panel.grid   = element_blank()
1567439149757:)
1567439149758:)
1567439239621:mean_color = "orange"
1567439275956:box_color    <- "#E5E0CA"
1567439276545:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439276545:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439276546:+ geom_boxplot(fill = , alpha = 0.4)
1567439276547:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439276547:shape = 23, size = 2, show.legend = FALSE)
1567439276548:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439276550:+ labs(
1567439276551:title    = "Allele frequency distribution",
1567439276552:subtitle = "MUT All - Freq. > 0.5",
1567439276553:y        = "Allele frequency"
1567439276553:)
1567439276554:+ theme_bw()
1567439276554:+ theme(
1567439276554:plot.title = element_text(face = "bold"),
1567439276555:axis.title.x = element_blank(),
1567439276556:axis.text    = element_text(size = 11),
1567439276556:# axis.text.x  = element_text(hjust = 0.5),
1567439276556:axis.title   = element_text(size = 12),
1567439276557:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439276557:panel.grid   = element_blank()
1567439276558:)
1567439276558:)
1567439284246:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439284246:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439284247:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439284247:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439284248:shape = 23, size = 2, show.legend = FALSE)
1567439284248:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439284249:+ labs(
1567439284250:title    = "Allele frequency distribution",
1567439284250:subtitle = "MUT All - Freq. > 0.5",
1567439284251:y        = "Allele frequency"
1567439284251:)
1567439284252:+ theme_bw()
1567439284252:+ theme(
1567439284253:plot.title = element_text(face = "bold"),
1567439284254:axis.title.x = element_blank(),
1567439284254:axis.text    = element_text(size = 11),
1567439284255:# axis.text.x  = element_text(hjust = 0.5),
1567439284256:axis.title   = element_text(size = 12),
1567439284257:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439284258:panel.grid   = element_blank()
1567439284258:)
1567439284259:)
1567439327876:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439327877:+ geom_jitter(width = 0.2, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439327877:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439327877:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439327878:shape = 23, size = 3, show.legend = FALSE)
1567439327878:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439327878:+ labs(
1567439327879:title    = "Allele frequency distribution",
1567439327879:subtitle = "MUT All - Freq. > 0.5",
1567439327879:y        = "Allele frequency"
1567439327880:)
1567439327880:+ theme_bw()
1567439327881:+ theme(
1567439327882:plot.title = element_text(face = "bold"),
1567439327882:axis.title.x = element_blank(),
1567439327883:axis.text    = element_text(size = 11),
1567439327884:# axis.text.x  = element_text(hjust = 0.5),
1567439327884:axis.title   = element_text(size = 12),
1567439327885:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439327886:panel.grid   = element_blank()
1567439327887:)
1567439327888:)
1567439375333:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439375333:+ geom_jitter(width = 0.05, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1)
1567439375333:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439375334:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439375334:shape = 23, size = 3, show.legend = FALSE)
1567439375335:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439375335:+ labs(
1567439375335:title    = "Allele frequency distribution",
1567439375336:subtitle = "MUT All - Freq. > 0.5",
1567439375336:y        = "Allele frequency"
1567439375336:)
1567439375337:+ theme_bw()
1567439375337:+ theme(
1567439375338:plot.title = element_text(face = "bold"),
1567439375338:axis.title.x = element_blank(),
1567439375338:axis.text    = element_text(size = 11),
1567439375339:# axis.text.x  = element_text(hjust = 0.5),
1567439375339:axis.title   = element_text(size = 12),
1567439375339:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439375340:panel.grid   = element_blank()
1567439375340:)
1567439375341:)
1567439506060:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439506061:+ geom_jitter(width = 0.05, alpha = 0.1, color = points_color, fill = points_color, shape = 21, size = 1.5)
1567439506061:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439506062:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439506063:shape = 23, size = 3, show.legend = FALSE)
1567439506063:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439506064:+ labs(
1567439506065:title    = "Allele frequency distribution",
1567439506065:subtitle = "MUT All - Freq. > 0.5",
1567439506066:y        = "Allele frequency"
1567439506066:)
1567439506067:+ theme_bw()
1567439506068:+ theme(
1567439506068:plot.title = element_text(face = "bold"),
1567439506069:axis.title.x = element_blank(),
1567439506070:axis.text    = element_text(size = 11),
1567439506071:# axis.text.x  = element_text(hjust = 0.5),
1567439506071:axis.title   = element_text(size = 12),
1567439506073:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439506075:panel.grid   = element_blank()
1567439506076:)
1567439506076:)
1567439538592:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439538592:+ geom_jitter(width = 0.05, alpha = 0.1, color = "white", fill = points_color, shape = 21, size = 1.5)
1567439538593:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439538594:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439538594:shape = 23, size = 3, show.legend = FALSE)
1567439538595:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439538595:+ labs(
1567439538596:title    = "Allele frequency distribution",
1567439538596:subtitle = "MUT All - Freq. > 0.5",
1567439538597:y        = "Allele frequency"
1567439538597:)
1567439538597:+ theme_bw()
1567439538598:+ theme(
1567439538598:plot.title = element_text(face = "bold"),
1567439538599:axis.title.x = element_blank(),
1567439538599:axis.text    = element_text(size = 11),
1567439538599:# axis.text.x  = element_text(hjust = 0.5),
1567439538600:axis.title   = element_text(size = 12),
1567439538600:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439538601:panel.grid   = element_blank()
1567439538601:)
1567439538602:)
1567439576960:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439576960:+ geom_jitter(width = 0.05, alpha = 0.1, color = "white", fill = points_color, shape = 21, size = 3)
1567439576960:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439576961:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439576961:shape = 23, size = 3, show.legend = FALSE)
1567439576961:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439576962:+ labs(
1567439576962:title    = "Allele frequency distribution",
1567439576963:subtitle = "MUT All - Freq. > 0.5",
1567439576963:y        = "Allele frequency"
1567439576963:)
1567439576964:+ theme_bw()
1567439576964:+ theme(
1567439576965:plot.title = element_text(face = "bold"),
1567439576965:axis.title.x = element_blank(),
1567439576965:axis.text    = element_text(size = 11),
1567439576966:# axis.text.x  = element_text(hjust = 0.5),
1567439576966:axis.title   = element_text(size = 12),
1567439576966:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439576967:panel.grid   = element_blank()
1567439576967:)
1567439576968:)
1567439612469:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439612470:+ geom_jitter(width = 0.05, alpha = 0.3, color = "white", fill = points_color, shape = 21, size = 3)
1567439612471:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439612472:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439612472:shape = 23, size = 3, show.legend = FALSE)
1567439612473:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439612473:+ labs(
1567439612474:title    = "Allele frequency distribution",
1567439612474:subtitle = "MUT All - Freq. > 0.5",
1567439612475:y        = "Allele frequency"
1567439612476:)
1567439612476:+ theme_bw()
1567439612477:+ theme(
1567439612477:plot.title = element_text(face = "bold"),
1567439612478:axis.title.x = element_blank(),
1567439612478:axis.text    = element_text(size = 11),
1567439612479:# axis.text.x  = element_text(hjust = 0.5),
1567439612480:axis.title   = element_text(size = 12),
1567439612480:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439612481:panel.grid   = element_blank()
1567439612482:)
1567439612482:)
1567439648373:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439648373:+ geom_jitter(width = 0.05, alpha = 0.3, color = "white", fill = points_color, shape = 21, size = 1)
1567439648374:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439648374:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439648375:shape = 23, size = 3, show.legend = FALSE)
1567439648376:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439648376:+ labs(
1567439648377:title    = "Allele frequency distribution",
1567439648377:subtitle = "MUT All - Freq. > 0.5",
1567439648378:y        = "Allele frequency"
1567439648378:)
1567439648378:+ theme_bw()
1567439648379:+ theme(
1567439648379:plot.title = element_text(face = "bold"),
1567439648380:axis.title.x = element_blank(),
1567439648380:axis.text    = element_text(size = 11),
1567439648380:# axis.text.x  = element_text(hjust = 0.5),
1567439648381:axis.title   = element_text(size = 12),
1567439648381:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439648381:panel.grid   = element_blank()
1567439648382:)
1567439648382:)
1567439669669:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439669670:+ geom_jitter(width = 0.05, alpha = 0.2, color = "white", fill = points_color, shape = 21, size = 1.5)
1567439669670:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439669671:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439669671:shape = 23, size = 3, show.legend = FALSE)
1567439669671:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439669672:+ labs(
1567439669672:title    = "Allele frequency distribution",
1567439669673:subtitle = "MUT All - Freq. > 0.5",
1567439669673:y        = "Allele frequency"
1567439669673:)
1567439669674:+ theme_bw()
1567439669674:+ theme(
1567439669675:plot.title = element_text(face = "bold"),
1567439669675:axis.title.x = element_blank(),
1567439669676:axis.text    = element_text(size = 11),
1567439669677:# axis.text.x  = element_text(hjust = 0.5),
1567439669677:axis.title   = element_text(size = 12),
1567439669678:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439669678:panel.grid   = element_blank()
1567439669679:)
1567439669679:)
1567439728812:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439728812:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439728813:+ geom_jitter(width = 0.05, alpha = 0.2, color = "white", fill = points_color, shape = 21, size = 1.5)
1567439728813:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439728813:shape = 23, size = 3, show.legend = FALSE)
1567439728814:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439728814:+ labs(
1567439728814:title    = "Allele frequency distribution",
1567439728815:subtitle = "MUT All - Freq. > 0.5",
1567439728815:y        = "Allele frequency"
1567439728815:)
1567439728816:+ theme_bw()
1567439728816:+ theme(
1567439728817:plot.title = element_text(face = "bold"),
1567439728817:axis.title.x = element_blank(),
1567439728817:axis.text    = element_text(size = 11),
1567439728818:# axis.text.x  = element_text(hjust = 0.5),
1567439728818:axis.title   = element_text(size = 12),
1567439728818:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439728819:panel.grid   = element_blank()
1567439728819:)
1567439728820:)
1567439771880:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439771880:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 21, size = 1.5)
1567439771880:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439771881:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439771881:shape = 23, size = 3, show.legend = FALSE)
1567439771881:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439771882:+ labs(
1567439771882:title    = "Allele frequency distribution",
1567439771883:subtitle = "MUT All - Freq. > 0.5",
1567439771883:y        = "Allele frequency"
1567439771883:)
1567439771884:+ theme_bw()
1567439771884:+ theme(
1567439771885:plot.title = element_text(face = "bold"),
1567439771885:axis.title.x = element_blank(),
1567439771886:axis.text    = element_text(size = 11),
1567439771887:axis.title   = element_text(size = 12),
1567439771887:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439771888:panel.grid   = element_blank()
1567439771888:)
1567439771889:)
1567439854082:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567439854083:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567439854083:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567439854084:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567439854084:shape = 23, size = 3, show.legend = FALSE)
1567439854085:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567439854085:+ labs(
1567439854086:title    = "Allele frequency distribution",
1567439854087:subtitle = "MUT All - Freq. > 0.5",
1567439854088:y        = "Allele frequency"
1567439854089:)
1567439854089:+ theme_bw()
1567439854090:+ theme(
1567439854091:plot.title = element_text(face = "bold"),
1567439854091:axis.title.x = element_blank(),
1567439854092:axis.text    = element_text(size = 11),
1567439854092:axis.title   = element_text(size = 12),
1567439854093:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567439854094:panel.grid   = element_blank()
1567439854095:)
1567439854095:)
1567440012130:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440012131:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440012132:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440012133:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440012133:shape = 23, size = 3, show.legend = FALSE)
1567440012135:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440012136:+ labs(
1567440012136:title    = "Allele frequency distribution",
1567440012137:subtitle = "MUT All - Freq. > 0.5",
1567440012138:y        = "Allele frequency"
1567440012139:)
1567440012139:+ theme_bw(base_size = 14)
1567440012140:+ theme(
1567440012141:plot.title = element_text(face = "bold"),
1567440012141:axis.title.x = element_blank(),
1567440012142:# axis.text    = element_text(size = 11),
1567440012143:# axis.title   = element_text(size = 12),
1567440012143:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440012144:panel.grid   = element_blank()
1567440012144:)
1567440012145:)
1567440073165:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440073165:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440073166:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440073166:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440073166:shape = 23, size = 3, show.legend = FALSE)
1567440073167:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440073167:+ labs(
1567440073168:title    = "Allele frequency distribution",
1567440073168:subtitle = "MUT All - Freq. > 0.5",
1567440073168:y        = "Allele frequency"
1567440073169:)
1567440073169:+ theme_bw(base_size = 14)
1567440073170:+ theme(
1567440073170:plot.title = element_text(face = "bold"),
1567440073171:axis.title.x = element_blank(),
1567440073171:axis.text    = element_text(size = base_size * 0.8),
1567440073172:# axis.title   = element_text(size = 12),
1567440073172:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440073173:panel.grid   = element_blank()
1567440073174:)
1567440073174:)
1567440095146:14*0.8
1567440101447:14*0.9
1567440114790:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440114791:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440114791:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440114792:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440114792:shape = 23, size = 3, show.legend = FALSE)
1567440114793:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440114793:+ labs(
1567440114794:title    = "Allele frequency distribution",
1567440114794:subtitle = "MUT All - Freq. > 0.5",
1567440114795:y        = "Allele frequency"
1567440114795:)
1567440114796:+ theme_bw(base_size = base_text_size)
1567440114796:+ theme(
1567440114797:plot.title = element_text(face = "bold"),
1567440114798:axis.title.x = element_blank(),
1567440114798:axis.text    = element_text(size = base_size * 0.9),
1567440114799:# axis.title   = element_text(size = 12),
1567440114799:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440114800:panel.grid   = element_blank()
1567440114801:)
1567440114801:)
1567440118036:base_text_size <- 14
1567440119220:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440119221:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440119221:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440119222:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440119222:shape = 23, size = 3, show.legend = FALSE)
1567440119223:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440119223:+ labs(
1567440119224:title    = "Allele frequency distribution",
1567440119225:subtitle = "MUT All - Freq. > 0.5",
1567440119225:y        = "Allele frequency"
1567440119226:)
1567440119226:+ theme_bw(base_size = base_text_size)
1567440119227:+ theme(
1567440119227:plot.title = element_text(face = "bold"),
1567440119227:axis.title.x = element_blank(),
1567440119228:axis.text    = element_text(size = base_size * 0.9),
1567440119228:# axis.title   = element_text(size = 12),
1567440119229:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440119229:panel.grid   = element_blank()
1567440119230:)
1567440119231:)
1567440126914:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440126915:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440126915:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440126916:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440126917:shape = 23, size = 3, show.legend = FALSE)
1567440126917:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440126918:+ labs(
1567440126918:title    = "Allele frequency distribution",
1567440126918:subtitle = "MUT All - Freq. > 0.5",
1567440126919:y        = "Allele frequency"
1567440126919:)
1567440126920:+ theme_bw(base_size = base_text_size)
1567440126920:+ theme(
1567440126920:plot.title = element_text(face = "bold"),
1567440126921:axis.title.x = element_blank(),
1567440126921:axis.text    = element_text(size = base_text_size * 0.9),
1567440126922:# axis.title   = element_text(size = 12),
1567440126922:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440126923:panel.grid   = element_blank()
1567440126923:)
1567440126924:)
1567440204812:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440204813:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440204814:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440204814:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440204814:shape = 23, size = 3)#, show.legend = FALSE)
1567440204815:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440204815:+ labs(
1567440204816:title    = "Allele frequency distribution",
1567440204816:subtitle = "MUT All - Freq. > 0.5",
1567440204817:y        = "Allele frequency"
1567440204818:)
1567440204818:+ theme_bw(base_size = base_text_size)
1567440204819:+ theme(
1567440204820:plot.title = element_text(face = "bold"),
1567440204820:axis.title.x = element_blank(),
1567440204821:axis.text    = element_text(size = base_text_size * 0.9),
1567440204822:# axis.title   = element_text(size = 12),
1567440204824:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440204825:panel.grid   = element_blank()
1567440204826:)
1567440204826:)
1567440219153:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440219154:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440219154:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440219154:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440219155:shape = 23, size = 3, show.legend = TRUE)
1567440219155:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440219155:+ labs(
1567440219156:title    = "Allele frequency distribution",
1567440219156:subtitle = "MUT All - Freq. > 0.5",
1567440219157:y        = "Allele frequency"
1567440219157:)
1567440219157:+ theme_bw(base_size = base_text_size)
1567440219158:+ theme(
1567440219158:plot.title = element_text(face = "bold"),
1567440219158:axis.title.x = element_blank(),
1567440219159:axis.text    = element_text(size = base_text_size * 0.9),
1567440219159:# axis.title   = element_text(size = 12),
1567440219160:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440219160:panel.grid   = element_blank()
1567440219160:)
1567440219161:)
1567440238949:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440238949:+ geom_jitter(width = 0.05, alpha = 0.2, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440238950:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440238950:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440238951:shape = 23, size = 3)
1567440238952:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440238952:+ labs(
1567440238953:title    = "Allele frequency distribution",
1567440238953:subtitle = "MUT All - Freq. > 0.5",
1567440238954:y        = "Allele frequency"
1567440238954:)
1567440238955:+ theme_bw(base_size = base_text_size)
1567440238955:+ theme(
1567440238956:plot.title = element_text(face = "bold"),
1567440238957:axis.title.x = element_blank(),
1567440238957:axis.text    = element_text(size = base_text_size * 0.9),
1567440238958:# axis.title   = element_text(size = 12),
1567440238958:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440238959:panel.grid   = element_blank()
1567440238960:)
1567440238961:)
1567440328749:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440328749:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440328750:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440328750:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440328751:shape = 23, size = 3)
1567440328752:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440328752:+ labs(
1567440328753:title    = "Allele frequency distribution",
1567440328753:subtitle = "MUT All - Freq. > 0.5",
1567440328754:y        = "Allele frequency"
1567440328755:)
1567440328755:+ theme_bw(base_size = base_text_size)
1567440328756:+ theme(
1567440328756:plot.title = element_text(face = "bold"),
1567440328757:axis.title.x = element_blank(),
1567440328758:axis.text    = element_text(size = base_text_size * 0.9),
1567440328758:# axis.title   = element_text(size = 12),
1567440328759:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440328760:panel.grid   = element_blank()
1567440328760:)
1567440328761:+ coord_flip()
1567440328763:)
1567440450951:unique(all_mut_variants$lg)
1567440457780:# Plot --------------------------------------------------------------------
1567440457781:# Prepare data to plot (add global position using the genome cumulative size data)
1567440457781:(data_to_plot <- all_mut_variants %>%
1567440457782:# filter(lg == "scaffold_1") %>%
1567440457783:filter(fvar >= 0.5) %>%
1567440457783:mutate(lg = factor(lg, levels = unique(all_mut_variants$lg)))
1567440457784:# head(1000) %>%
1567440457785:# (data_to_plot <- filtered_variants %>%
1567440457786:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567440457786:# mutate(global_pos = pos + lower_limit - 1) %>%
1567440457787:# select(-c(lower_limit))
1567440457788:)
1567440461907:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440461908:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440461908:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440461909:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440461909:shape = 23, size = 3)
1567440461910:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440461911:+ labs(
1567440461911:title    = "Allele frequency distribution",
1567440461912:subtitle = "MUT All - Freq. > 0.5",
1567440461912:y        = "Allele frequency"
1567440461913:)
1567440461913:+ theme_bw(base_size = base_text_size)
1567440461914:+ theme(
1567440461914:plot.title = element_text(face = "bold"),
1567440461915:axis.title.x = element_blank(),
1567440461915:axis.text    = element_text(size = base_text_size * 0.9),
1567440461916:# axis.title   = element_text(size = 12),
1567440461916:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440461917:panel.grid   = element_blank()
1567440461917:)
1567440461917:+ coord_flip()
1567440461918:)
1567440482779:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440482781:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440482781:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440482782:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440482782:shape = 23, size = 3)
1567440482783:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440482783:+ labs(
1567440482784:title    = "Allele frequency distribution",
1567440482785:subtitle = "MUT All - Freq. > 0.5",
1567440482786:y        = "Allele frequency"
1567440482786:)
1567440482787:+ theme_bw(base_size = base_text_size)
1567440482788:+ theme(
1567440482788:plot.title = element_text(face = "bold"),
1567440482789:axis.title.x = element_blank(),
1567440482789:axis.text    = element_text(size = base_text_size * 0.9),
1567440482790:# axis.title   = element_text(size = 12),
1567440482790:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440482791:panel.grid   = element_blank()
1567440482791:)
1567440482792:# + coord_flip()
1567440482792:)
1567440505162:(data_to_plot <- all_mut_variants %>%
1567440505163:# filter(lg == "scaffold_1") %>%
1567440505164:filter(fvar >= 0.5) %>%
1567440505165:mutate(lg = factor(lg, levels = rev(unique(all_mut_variants$lg))))
1567440505165:# head(1000) %>%
1567440505166:# (data_to_plot <- filtered_variants %>%
1567440505167:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567440505168:# mutate(global_pos = pos + lower_limit - 1) %>%
1567440505168:# select(-c(lower_limit))
1567440505169:)
1567440505617:# # Plot configuration variables and options
1567440505617:# options(scipen=10) # Avoid scientific notation on tick labels
1567440505618:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567440505620:chr_palette <- c("#ffffff", "#E5E0CA")
1567440505620:points_color <- "darkolivegreen"
1567440505621:mean_color   <- "orange"
1567440505621:box_color    <- "#E5E0CA"
1567440505622:base_text_size <- 14
1567440505623:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440505623:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440505623:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440505624:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440505624:shape = 23, size = 3)
1567440505624:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440505625:+ labs(
1567440505625:title    = "Allele frequency distribution",
1567440505625:subtitle = "MUT All - Freq. > 0.5",
1567440505626:y        = "Allele frequency"
1567440505626:)
1567440505626:+ theme_bw(base_size = base_text_size)
1567440505627:+ theme(
1567440505627:plot.title = element_text(face = "bold"),
1567440505628:axis.title.x = element_blank(),
1567440505628:axis.text    = element_text(size = base_text_size * 0.9),
1567440505628:# axis.title   = element_text(size = 12),
1567440505629:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440505629:panel.grid   = element_blank()
1567440505630:)
1567440505630:# + coord_flip()
1567440505630:)
1567440521383:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440521384:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440521384:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440521385:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440521385:shape = 23, size = 3)
1567440521385:# + scale_x_discrete(labels = paste("Chr", 1:9))
1567440521386:+ labs(
1567440521386:title    = "Allele frequency distribution",
1567440521386:subtitle = "MUT All - Freq. > 0.5",
1567440521387:y        = "Allele frequency"
1567440521387:)
1567440521387:+ theme_bw(base_size = base_text_size)
1567440521388:+ theme(
1567440521388:plot.title = element_text(face = "bold"),
1567440521388:axis.title.x = element_blank(),
1567440521389:axis.text    = element_text(size = base_text_size * 0.9),
1567440521390:# axis.title   = element_text(size = 12),
1567440521390:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440521391:panel.grid   = element_blank()
1567440521391:)
1567440521392:# + coord_flip()
1567440521392:)
1567440543326:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440543326:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440543326:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440543327:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440543327:shape = 23, size = 3)
1567440543327:# + scale_x_discrete(labels = paste("Chr", 1:9))
1567440543328:+ labs(
1567440543328:title    = "Allele frequency distribution",
1567440543329:subtitle = "MUT All - Freq. > 0.5",
1567440543330:y        = "Allele frequency"
1567440543331:)
1567440543331:+ theme_bw(base_size = base_text_size)
1567440543332:+ theme(
1567440543332:plot.title = element_text(face = "bold"),
1567440543332:axis.title.x = element_blank(),
1567440543333:axis.text    = element_text(size = base_text_size * 0.9),
1567440543333:# axis.title   = element_text(size = 12),
1567440543334:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440543334:panel.grid   = element_blank()
1567440543334:)
1567440543335:+ coord_flip()
1567440543335:)
1567440596398:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440596399:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440596399:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440596400:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440596401:shape = 23, size = 3)
1567440596401:+ scale_x_discrete(labels = paste("Chr", 1:9))
1567440596402:+ labs(
1567440596402:title    = "Allele frequency distribution",
1567440596403:subtitle = "MUT All - Freq. > 0.5",
1567440596403:y        = "Allele frequency"
1567440596404:)
1567440596404:+ theme_bw(base_size = base_text_size)
1567440596405:+ theme(
1567440596405:plot.title = element_text(face = "bold"),
1567440596406:axis.title.x = element_blank(),
1567440596407:axis.text    = element_text(size = base_text_size * 0.9),
1567440596407:# axis.title   = element_text(size = 12),
1567440596408:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440596409:panel.grid   = element_blank()
1567440596410:)
1567440596411:# + coord_flip()
1567440596411:)
1567440607088:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440607089:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440607089:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440607089:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440607090:shape = 23, size = 3)
1567440607091:# + scale_x_discrete(labels = paste("Chr", 1:9))
1567440607092:+ labs(
1567440607092:title    = "Allele frequency distribution",
1567440607093:subtitle = "MUT All - Freq. > 0.5",
1567440607093:y        = "Allele frequency"
1567440607093:)
1567440607094:+ theme_bw(base_size = base_text_size)
1567440607094:+ theme(
1567440607095:plot.title = element_text(face = "bold"),
1567440607095:axis.title.x = element_blank(),
1567440607096:axis.text    = element_text(size = base_text_size * 0.9),
1567440607096:# axis.title   = element_text(size = 12),
1567440607097:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440607097:panel.grid   = element_blank()
1567440607097:)
1567440607098:# + coord_flip()
1567440607098:)
1567440617015:(data_to_plot <- all_mut_variants %>%
1567440617016:# filter(lg == "scaffold_1") %>%
1567440617016:filter(fvar >= 0.5) %>%
1567440617016:# mutate(lg = factor(lg, levels = rev(unique(all_mut_variants$lg))))
1567440617017:mutate(lg = factor(lg, levels = unique(all_mut_variants$lg)))
1567440617017:# head(1000) %>%
1567440617017:# (data_to_plot <- filtered_variants %>%
1567440617018:# left_join(select(cum_genome_size, lg, lower_limit, color)) %>%
1567440617018:# mutate(global_pos = pos + lower_limit - 1) %>%
1567440617018:# select(-c(lower_limit))
1567440617019:)
1567440617460:# # Plot configuration variables and options
1567440617460:# options(scipen=10) # Avoid scientific notation on tick labels
1567440617461:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567440617462:chr_palette <- c("#ffffff", "#E5E0CA")
1567440617463:points_color <- "darkolivegreen"
1567440617464:mean_color   <- "orange"
1567440617464:box_color    <- "#E5E0CA"
1567440617465:base_text_size <- 14
1567440617465:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440617466:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440617466:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440617466:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440617467:shape = 23, size = 3)
1567440617467:# + scale_x_discrete(labels = paste("Chr", 1:9))
1567440617467:+ labs(
1567440617468:title    = "Allele frequency distribution",
1567440617468:subtitle = "MUT All - Freq. > 0.5",
1567440617468:y        = "Allele frequency"
1567440617469:)
1567440617469:+ theme_bw(base_size = base_text_size)
1567440617469:+ theme(
1567440617470:plot.title = element_text(face = "bold"),
1567440617470:axis.title.x = element_blank(),
1567440617471:axis.text    = element_text(size = base_text_size * 0.9),
1567440617471:# axis.title   = element_text(size = 12),
1567440617471:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440617472:panel.grid   = element_blank()
1567440617472:)
1567440617472:# + coord_flip()
1567440617473:)
1567440674359:(data_to_plot <- all_mut_variants %>%
1567440674359:filter(fvar >= 0.5) %>%
1567440674360:# mutate(lg = factor(lg, levels = rev(unique(all_mut_variants$lg))))
1567440674360:mutate(lg = factor(lg, levels = unique(all_mut_variants$lg)))
1567440674361:)
1567440674793:x_labels <- paste("Chr", 1:9)
1567440674793:# # Plot configuration variables and options
1567440674794:# options(scipen=10) # Avoid scientific notation on tick labels
1567440674794:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567440674796:chr_palette <- c("#ffffff", "#E5E0CA")
1567440674796:points_color <- "darkolivegreen"
1567440674797:mean_color   <- "orange"
1567440674797:box_color    <- "#E5E0CA"
1567440674798:base_text_size <- 14
1567440674798:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440674799:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440674799:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440674799:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440674800:shape = 23, size = 3)
1567440674800:+ scale_x_discrete(labels = x_labels)
1567440674801:+ labs(
1567440674801:title    = "Allele frequency distribution",
1567440674801:subtitle = "MUT All - Freq. > 0.5",
1567440674802:y        = "Allele frequency"
1567440674802:)
1567440674802:+ theme_bw(base_size = base_text_size)
1567440674803:+ theme(
1567440674803:plot.title = element_text(face = "bold"),
1567440674803:axis.title.x = element_blank(),
1567440674804:axis.text    = element_text(size = base_text_size * 0.9),
1567440674804:# axis.title   = element_text(size = 12),
1567440674805:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440674805:panel.grid   = element_blank()
1567440674805:)
1567440674806:# + coord_flip()
1567440674806:)
1567440760491:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440760491:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440760491:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440760492:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440760492:shape = 23, size = 3)
1567440760493:+ scale_x_discrete(labels = x_labels)
1567440760493:+ labs(
1567440760493:title    = "Allele frequency distribution",
1567440760494:subtitle = "MUT All - Freq. > 0.5",
1567440760494:y        = "Allele frequency"
1567440760494:)
1567440760495:+ theme_bw(base_size = base_text_size)
1567440760495:+ theme(
1567440760496:axis.text    = element_text(size = base_text_size * 0.9),
1567440760496:axis.title   = element_text(size = base_text_size * 0.9),
1567440760497:axis.title.x = element_blank(),
1567440760497:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440760498:panel.grid   = element_blank(),
1567440760498:plot.title = element_text(face = "bold")
1567440760499:)
1567440760499:# + coord_flip()
1567440760500:)
1567440800922:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440800922:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440800922:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440800923:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440800923:shape = 23, size = 3)
1567440800923:+ scale_x_discrete(labels = x_labels)
1567440800924:+ labs(
1567440800924:title    = "Allele frequency distribution",
1567440800924:subtitle = "MUT All - Freq. > 0.5",
1567440800925:y        = "Allele frequency"
1567440800925:)
1567440800925:+ theme_bw(base_size = base_text_size)
1567440800926:+ theme(
1567440800926:axis.text    = element_text(size = base_text_size * 0.9),
1567440800927:axis.title   = element_text(size = base_text_size),
1567440800927:axis.title.x = element_blank(),
1567440800927:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440800928:panel.grid   = element_blank(),
1567440800928:plot.title = element_text(face = "bold")
1567440800929:)
1567440800929:# + coord_flip()
1567440800929:)
1567440902507:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440902508:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440902509:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440902509:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440902510:shape = 23, size = 3)
1567440902510:+ scale_x_discrete(labels = x_labels)
1567440902511:+ labs(
1567440902511:title    = "Allele frequency distribution",
1567440902511:subtitle = "MUT All - Freq. > 0.5",
1567440902512:y        = "Allele frequency"
1567440902512:)
1567440902512:+ theme_bw(base_size = base_text_size)
1567440902513:+ theme(
1567440902513:axis.text    = element_text(size = base_text_size * 0.9),
1567440902513:axis.title   = element_text(size = base_text_size),
1567440902514:axis.title.x = element_blank(),
1567440902514:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440902515:panel.grid   = element_blank(),
1567440902515:plot.title   = element_text(face = "bold"),
1567440902515:text         = element_text(color = text_color)
1567440902516:)
1567440902516:# + coord_flip()
1567440902517:)
1567440907109:text_color <- "#666666"
1567440908610:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440908610:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440908611:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440908611:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440908612:shape = 23, size = 3)
1567440908612:+ scale_x_discrete(labels = x_labels)
1567440908612:+ labs(
1567440908613:title    = "Allele frequency distribution",
1567440908613:subtitle = "MUT All - Freq. > 0.5",
1567440908613:y        = "Allele frequency"
1567440908614:)
1567440908614:+ theme_bw(base_size = base_text_size)
1567440908614:+ theme(
1567440908615:axis.text    = element_text(size = base_text_size * 0.9),
1567440908615:axis.title   = element_text(size = base_text_size),
1567440908616:axis.title.x = element_blank(),
1567440908616:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440908616:panel.grid   = element_blank(),
1567440908617:plot.title   = element_text(face = "bold"),
1567440908617:text         = element_text(color = text_color)
1567440908618:)
1567440908618:# + coord_flip()
1567440908618:)
1567440943267:base_text_size <- 14
1567440943268:box_color      <- "#E5E0CA"
1567440943268:mean_color     <- "orange"
1567440943269:points_color   <- "darkolivegreen"
1567440943269:text_color     <- "#333333"
1567440943270:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567440943270:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567440943271:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567440943271:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567440943272:shape = 23, size = 3)
1567440943273:+ scale_x_discrete(labels = x_labels)
1567440943273:+ labs(
1567440943274:title    = "Allele frequency distribution",
1567440943274:subtitle = "MUT All - Freq. > 0.5",
1567440943275:y        = "Allele frequency"
1567440943275:)
1567440943276:+ theme_bw(base_size = base_text_size)
1567440943276:+ theme(
1567440943277:axis.text    = element_text(size = base_text_size * 0.9),
1567440943278:axis.title   = element_text(size = base_text_size),
1567440943278:axis.title.x = element_blank(),
1567440943279:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567440943280:panel.grid   = element_blank(),
1567440943280:plot.title   = element_text(face = "bold"),
1567440943281:text         = element_text(color = text_color)
1567440943281:)
1567440943281:# + coord_flip()
1567440943282:)
1567446152131:# Install packages (if not installed, run the line below just once)
1567446152131:# install.packages(c("tidyverse", "grid", "sitools"))
1567446152132:# Load packages
1567446152132:library(tidyverse, verbose = T)
1567446153479:library(grid)
1567446153487:library(sitools)
1567446153499:# Variable definition -----------------------------------------------------
1567446153499:# Set work directory
1567446153500:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567446153500:# Input variables
1567446153501:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567446153501:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567446153502:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567446153502:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567446153503:window_size <- 10000
1567446153504:# General variables
1567446153504:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567446153505:# # Load data ---------------------------------------------------------------
1567446153505:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567446153505:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567446187360:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567446187360:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("lg", "length")))
1567446187655:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567446187655:(cum_genome_size <- chromosome_lengths)
1567446187681:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567446187682:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1567446187683:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$lg, "_", simplify = TRUE)[,2]))
1567446187687:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1567446187689:cum_genome_size
1567446187775:#
1567446187775:# load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567446187776:#
1567446187776:# # Filter variants ---------------------------------------------------------
1567446187776:# # Keep variants:
1567446187777:# # - with coverage < 100,
1567446187777:# # - with fvar >= 0.5, and
1567446187778:# # - that are present in the MUT and not in the WT (background) variant set
1567446187778:# (filtered_mut_variants_less_100 <- all_mut_variants %>%
1567446187778:#     filter(cov < 100) #%>%
1567446187779:#     # anti_join(background_variants, by = c("lg", "pos"))
1567446187779:# )
1567446187779:# # load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567446187780:# # save(filtered_variants, filtered_mut_variants_less_100, file = "data/02_WT_MUT_ALL/computed_data.Rdata")
1567446187780:# # Get some stats about the filtered variants
1567446187780:# (stats <- filtered_mut_variants_less_100 %>%
1567446187780:#   group_by(lg) %>%
1567446187781:#   summarise(fvar_min = min(fvar),
1567446187781:#             fvar_max = max(fvar),
1567446187781:#             fvar_mean = mean(fvar),
1567446187782:#             n_var = n())
1567446187782:# )
1567446187782:# Plot --------------------------------------------------------------------
1567446187783:# Prepare data to plot (add global position using the genome cumulative size data)
1567446187783:(data_to_plot <- all_mut_variants %>%
1567446187783:filter(fvar >= 0.5) %>%
1567446187784:# mutate(lg = factor(lg, levels = rev(unique(all_mut_variants$lg))))
1567446187784:mutate(lg = factor(lg, levels = unique(all_mut_variants$lg)))
1567446187784:)
1567446188295:x_labels <- paste("Chr", 1:9)
1567446188296:# # Plot configuration variables and options
1567446188296:# options(scipen=10) # Avoid scientific notation on tick labels
1567446188296:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567446188336:chr_palette <- c("#ffffff", "#E5E0CA")
1567446188337:base_text_size <- 14
1567446188338:box_color      <- "#E5E0CA"
1567446188339:mean_color     <- "orange"
1567446188340:points_color   <- "darkolivegreen"
1567446188340:text_color     <- "#333333"
1567446188341:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567446188342:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567446188342:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567446188343:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567446188343:shape = 23, size = 3)
1567446188344:+ scale_x_discrete(labels = x_labels)
1567446188344:+ labs(
1567446188345:title    = "Allele frequency distribution",
1567446188345:subtitle = "MUT All - Freq. > 0.5",
1567446188346:y        = "Allele frequency"
1567446188346:)
1567446188347:+ theme_bw(base_size = base_text_size)
1567446188347:+ theme(
1567446188348:axis.text    = element_text(size = base_text_size * 0.9),
1567446188348:axis.title   = element_text(size = base_text_size),
1567446188349:axis.title.x = element_blank(),
1567446188349:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567446188350:panel.grid   = element_blank(),
1567446188350:plot.title   = element_text(face = "bold"),
1567446188351:text         = element_text(color = text_color)
1567446188351:)
1567446188352:# + coord_flip()
1567446188352:)
1567446308141:ggsave("results/MUT_ALL.allele_freq_distribution.fvar0.5.pdf", freqDistribution, width = 8, height = 5)
1567955387754:# Install packages (if not installed, run the line below just once)
1567955387776:# install.packages(c("tidyverse", "grid", "sitools"))
1567955387776:# Load packages
1567955387777:library(tidyverse, verbose = T)
1567955390254:library(grid)
1567955390268:library(sitools)
1567955390290:# Variable definition -----------------------------------------------------
1567955390291:# Set work directory
1567955390291:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567955390292:# Input variables
1567955390292:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567955390293:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567955390294:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567955390294:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567955390295:window_size <- 10000
1567955390296:# General variables
1567955390297:var_column_names <- c("lg", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567960356600:# Install packages (if not installed, run the line below just once)
1567960356601:# install.packages(c("tidyverse", "grid", "sitools"))
1567960356602:# Load packages
1567960356603:library(tidyverse, verbose = T)
1567960357088:library(grid)
1567960357089:library(sitools)
1567960357090:# Variable definition -----------------------------------------------------
1567960357090:# Set work directory
1567960357090:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567960357091:# Input variables
1567960357091:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567960357092:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567960357092:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567960357093:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567960357093:window_size <- 4e+6
1567960357094:increment   <- 1e+4
1567960357095:# General variables
1567960357095:var_column_names <- c("chr", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567960357096:# Load data ---------------------------------------------------------------
1567960357096:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("chr", "length")))
1567960368226:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567960368226:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567960368227:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567960368227:(cum_genome_size <- chromosome_lengths)
1567960368709:(cum_genome_size$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567960368710:(cum_genome_size$upper_limit <- cumsum(chromosome_lengths$length))
1567960368711:(cum_genome_size$chr         <- as.numeric(str_split(cum_genome_size$chr, "_", simplify = TRUE)[,2]))
1567960368931:(cum_genome_size$color       <- if_else((cum_genome_size$chr %% 2) == 1, "blank", "shade"))
1567960368935:cum_genome_size
1567960369117:# Load pre-computed data
1567960369118:load(file = "data/02_WT_MUT_ALL/plot_allelic_frequency_per_windows.per_windows.computed_data.Rdata",
1567960369119:verbose = TRUE)
1567960369186:if (is.null(filtered_mut_variants)) {
1567960369186:# Load all MUT variants
1567960369187:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567960369187:# Filter variants ---------------------------------------------------------
1567960369188:# Keep variants:
1567960369188:## - with coverage < 100,
1567960369189:# - with fvar >= 0.5, and
1567960369189:# - that are present in the MUT and not in the WT (background) variant set
1567960369190:(filtered_mut_variants <- all_mut_variants %>%
1567960369190:# filter(cov < 100) #%>%
1567960369190:filter(fvar >= 0.5) %>%
1567960369191:# anti_join(background_variants, by = c("lg", "pos"))
1567960369191:mutate(chr = factor(chr, levels = unique(all_mut_variants$chr)))
1567960369192:)
1567960369192:# load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567960369192:# save(filtered_mut_variants, file = "data/02_WT_MUT_ALL/plot_allelic_frequency_per_windows.per_windows.computed_data.Rdata")
1567960369193:}
1567960388709:x_labels <- paste("Chr", 1:9)
1567960389736:chrs <- levels(filtered_mut_variants$chr)
1567960392313:chrs
1567960410437:chr <- chrs[1]
1567960413197:chr
1567960526511:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567960526512:(genome_size_data <- chromosome_lengths)
1567960526964:(genome_size_data$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567960527291:(genome_size_data$upper_limit <- cumsum(chromosome_lengths$length))
1567960527656:(genome_size_data$chr         <- as.numeric(str_split(genome_size_data$chr, "_", simplify = TRUE)[,2]))
1567960527934:(genome_size_data$color       <- if_else((genome_size_data$chr %% 2) == 1, "blank", "shade"))
1567960528439:genome_size_data
1567960531726:ls()
1567960549484:rm(list = c(cum_genome_size))
1567960555064:rm(list = c"(cum_genome_size"))
1567960558765:rm(list = c("cum_genome_size"))
1567960582979:genome_size_data
1567960631631:chr <- chrs[1]
1567960636183:genome_size_data[genome_size_data$chr == chr, "length"]
1567960643099:genome_size_data$chr == chr
1567960650132:# Install packages (if not installed, run the line below just once)
1567960650133:# install.packages(c("tidyverse", "grid", "sitools"))
1567960650134:# Load packages
1567960650135:library(tidyverse, verbose = T)
1567960650137:library(grid)
1567960650137:library(sitools)
1567960650139:# Variable definition -----------------------------------------------------
1567960650139:# Set work directory
1567960650139:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567960650140:# Input variables
1567960650141:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567960650142:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567960650143:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567960650143:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567960650144:window_size <- 4e+6
1567960650145:increment   <- 1e+4
1567960650146:# General variables
1567960650146:var_column_names <- c("chr", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567960650147:# Load data ---------------------------------------------------------------
1567960650147:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("chr", "length")))
1567960650489:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567960650489:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567960650490:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567960650490:(genome_size_data <- chromosome_lengths)
1567960650534:(genome_size_data$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567960650535:(genome_size_data$upper_limit <- cumsum(chromosome_lengths$length))
1567960650536:(genome_size_data$chr         <- as.numeric(str_split(genome_size_data$chr, "_", simplify = TRUE)[,2]))
1567960650537:(genome_size_data$color       <- if_else((genome_size_data$chr %% 2) == 1, "blank", "shade"))
1567960650538:genome_size_data
1567960650675:# Load pre-computed data
1567960650675:load(file = "data/02_WT_MUT_ALL/plot_allelic_frequency_per_windows.per_windows.computed_data.Rdata",
1567960650675:verbose = TRUE)
1567960650718:if (is.null(filtered_mut_variants)) {
1567960650718:# Load all MUT variants
1567960650719:(all_mut_variants    <- read_csv(all_mut_variants_filename, col_names = var_column_names))
1567960650720:# Filter variants ---------------------------------------------------------
1567960650720:# Keep variants:
1567960650721:## - with coverage < 100,
1567960650722:# - with fvar >= 0.5, and
1567960650722:# - that are present in the MUT and not in the WT (background) variant set
1567960650723:(filtered_mut_variants <- all_mut_variants %>%
1567960650723:# filter(cov < 100) #%>%
1567960650724:filter(fvar >= 0.5) %>%
1567960650724:# anti_join(background_variants, by = c("lg", "pos"))
1567960650725:mutate(chr = factor(chr, levels = unique(all_mut_variants$chr)))
1567960650725:)
1567960650726:# load(file = "data/02_WT_MUT_ALL/computed_data.Rdata", verbose = T)
1567960650726:# save(filtered_mut_variants, file = "data/02_WT_MUT_ALL/plot_allelic_frequency_per_windows.per_windows.computed_data.Rdata")
1567960650727:}
1567960650728:# Get some stats about the filtered variants
1567960650729:# (stats <- filtered_mut_variants_less_100 %>%
1567960650729:#   group_by(lg) %>%
1567960650730:#   summarise(fvar_min = min(fvar),
1567960650730:#             fvar_max = max(fvar),
1567960650731:#             fvar_mean = mean(fvar),
1567960650731:#             n_var = n())
1567960650731:# )
1567960650732:# Plot --------------------------------------------------------------------
1567960650733:# Prepare data to plot (add global position using the genome cumulative size data)
1567960650733:# (data_to_plot <- filtered_mut_variants)
1567960650734:x_labels <- paste("Chr", 1:9)
1567960650736:chrs <- levels(filtered_mut_variants$chr)
1567960650737:chr <- chrs[1]
1567960650738:chr_size <- genome_size_data[genome_size_data$chr == chr, "length"]
1567960650740:# Plot configuration variables and options
1567960650741:# options(scipen=10) # Avoid scientific notation on tick labels
1567960650741:x_breaks    <- round(seq(0, max(data_to_plot$global_pos), by = 10000000), digits = 0)
1567960650743:chr_palette <- c("#ffffff", "#E5E0CA")
1567960650744:base_text_size <- 14
1567960650745:box_color      <- "#E5E0CA"
1567960650746:mean_color     <- "orange"
1567960650748:points_color   <- "darkolivegreen"
1567960650763:text_color     <- "#333333"
1567960650764:(freqDistribution <- ggplot(data_to_plot, aes(x = lg, y = fvar))
1567960650765:+ geom_jitter(width = 0.1, alpha = 0.1, color = points_color, fill = points_color, shape = 16, size = 1.5)
1567960650765:+ geom_boxplot(fill = box_color, alpha = 0.4)
1567960650766:+ stat_summary(fun.y = mean, fill = mean_color, geom = "point",
1567960650767:shape = 23, size = 3)
1567960650768:+ scale_x_discrete(labels = x_labels)
1567960650768:+ labs(
1567960650779:title    = "Allele frequency distribution",
1567960650779:subtitle = "MUT All - Freq. > 0.5",
1567960650780:y        = "Allele frequency"
1567960650781:)
1567960650781:+ theme_bw(base_size = base_text_size)
1567960650782:+ theme(
1567960650782:axis.text    = element_text(size = base_text_size * 0.9),
1567960650783:axis.title   = element_text(size = base_text_size),
1567960650784:axis.title.x = element_blank(),
1567960650784:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567960650785:panel.grid   = element_blank(),
1567960650786:plot.title   = element_text(face = "bold"),
1567960650787:text         = element_text(color = text_color)
1567960650788:)
1567960650788:# + coord_flip()
1567960650789:)
1567960650800:ggsave("results/MUT_ALL.allele_freq_distribution.fvar0.5.pdf", freqDistribution, width = 8, height = 5)
1567960651985:# Plot number of variants per chromosome
1567960651989:(variants_plot <- ggplot(data_to_plot, aes(x = global_pos, y = fvar))
1567960652051:# + geom_rect(data = genome_size_data,
1567960652052:# aes(xmin = lower_limit, xmax = upper_limit, ymin = -Inf, ymax = Inf, fill = color)
1567960652053:# ,alpha = 0.7, show.legend = F)
1567960652053:# + geom_vline(data = genome_size_data, aes(xintercept = upper_limit), size = 0.5, color = "#a5a5a5")
1567960652054:+ geom_point()
1567960652054:# + geom_histogram(aes(x = global_pos), binwidth = window_size, #color = "black",
1567960652056:#                  # fill = "#444444"
1567960652057:#                  fill = "darkolivegreen"
1567960652058:#                  )
1567960652059:# + scale_fill_manual(values = chr_palette)
1567960652059:+ scale_y_continuous(expand = c(0,0), limits = c(0,1))
1567960652060:+ scale_x_continuous(expand = c(0,0), breaks = x_breaks, labels = x_breaks/1000000)
1567960652061:+ theme_bw()
1567960652063:+ theme(axis.text    = element_text(size = 11),
1567960652064:axis.text.x  = element_text(angle = 50, hjust = 1),
1567960652067:axis.title   = element_text(size = 12),
1567960652068:axis.title.x = element_text(margin = margin(12,0,0,0)),
1567960652069:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567960652072:panel.grid   = element_blank(),
1567960652072:panel.grid.major.y = element_line(color = "#aaaaaa", size = 0.5),
1567960652073:plot.subtitle = element_text(hjust = 0.5, margin = margin(4,0,30,0)),
1567960652073:plot.title = element_text(hjust = 0.5)
1567960652074:)
1567960652075:+ labs(title = "Whole Genome Homozygous Variants",
1567960652075:subtitle = "All MUT and WT",
1567960652076:x = "Physical position (Mb)",
1567960652076:y = paste("Allele frequency")
1567960652077:)
1567960652077:)
1567960652078:# Get the maximum count of variants among all of the bins for properly positioning
1567960652078:# the chromosome name (above the plot)
1567960652079:(max_var_count <- max(ggplot_build(variants_plot)$data[[3]]$count))
1567960652080:# Add annotation (Chromosome names)
1567960652081:for (i in 1:nrow(genome_size_data)){
1567960652081:variants_plot <- variants_plot + annotation_custom(
1567960652082:grob = textGrob(label = paste("Chr", genome_size_data$chr[i]), hjust = 0.5, vjust = 1,
1567960652082:gp = gpar(fontsize = 11, col = "#333333" #,fontfamily = baseFontFamily
1567960652082:)),
1567960652083:ymin = max_var_count * 1.10,
1567960652084:ymax = max_var_count * 1.10,
1567960652085:xmin = genome_size_data$upper_limit[i] - (genome_size_data$length[i]/2),
1567960652085:xmax = genome_size_data$upper_limit[i] - (genome_size_data$length[i]/2))
1567960652086:}
1567960652142:# Remove clipping
1567960652143:gtVarPlot <- ggplot_gtable(ggplot_build(variants_plot))
1567960652144:gtVarPlot$layout$clip[gtVarPlot$layout$name == "panel"] <- "off"
1567960652145:grid.draw(gtVarPlot)
1567960652146:# Save plot to a file
1567960652146:ggsave(plot = gtVarPlot, filename = "data/02_WT_MUT_ALL/homozygous_variants_per_10Kb_bin.pdf",
1567960652146:width = 9, height = 3.5)
1567960657960:genome_size_data$chr
1567960690979:# Install packages (if not installed, run the line below just once)
1567960690980:# install.packages(c("tidyverse", "grid", "sitools"))
1567960690981:# Load packages
1567960690981:library(tidyverse, verbose = T)
1567960690983:library(grid)
1567960690985:library(sitools)
1567960690989:# Variable definition -----------------------------------------------------
1567960690990:# Set work directory
1567960690990:# setwd("/home/hspitia/Dropbox (GaTech)/data/bsa")
1567960690992:# Input variables
1567960690992:hi_freq_variants_filename    <- "data/02_WT_MUT_ALL/MUT.filtered_variants.csv"
1567960690995:all_mut_variants_filename    <- "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz"
1567960690995:background_variants_filename <- "data/02_WT_MUT_ALL/WT.ALL.complete.pileup.csv.gz"
1567960690996:chromosome_lengths_filename  <- "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv"
1567960690997:window_size <- 4e+6
1567960690998:increment   <- 1e+4
1567960691000:# General variables
1567960691000:var_column_names <- c("chr", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1567960691003:# Load data ---------------------------------------------------------------
1567960691004:(chromosome_lengths  <- read_csv(chromosome_lengths_filename, col_names = c("chr", "length")))
1567960691220:# (hi_freq_variants    <- read_csv(hi_freq_variants_filename, col_names = var_column_names))
1567960691221:# (background_variants <- read_csv(background_variants_filename, col_names = var_column_names))
1567960691222:# Create cumulative genome size per chromosome length (dataframe, not tibble)
1567960691238:(genome_size_data <- chromosome_lengths)
1567960691395:(genome_size_data$lower_limit <- c(1, cumsum(chromosome_lengths$length)[1:nrow(chromosome_lengths)-1]+1))
1567960691396:(genome_size_data$upper_limit <- cumsum(chromosome_lengths$length))
1567960691397:(genome_size_data$chr_number <- as.numeric(str_split(genome_size_data$chr, "_", simplify = TRUE)[,2]))
1567960691399:(genome_size_data$color       <- if_else((genome_size_data$chr %% 2) == 1, "blank", "shade"))
1567960691401:genome_size_data
1567960702608:genome_size_data[genome_size_data$chr == chr, "length"]
1567960720292:genome_size_data[genome_size_data$chr == chr,]$length
1567960730945:chr_size <- genome_size_data[genome_size_data$chr == chr,]$length
1567960799497:seq(1, chr_size, by = increment)
1567960813629:seq(1, chr_size, by = increment-1)
1567960919695:seq(0, chr_size, by = increment)
1567961071053:seq(0, chr_size, by = increment)[-1]
1567961120942:seq(0, chr_size, by = increment+1)[-1]
1567961129539:seq(0, chr_size, by = increment)[-1]
1567961137803:seq(0, chr_size, by = increment)[-1] + 1
1567961178560:seq(increment, chr_size, by = increment) + 1
1567961216628:offset_points <- seq(increment, chr_size, by = increment) + 1
1567961218120:offset_points
1567961298519:offset_points <- c(1, seq(increment, chr_size, by = increment) + 1)
1567961309086:(offset_points <- c(1, seq(increment, chr_size, by = increment) + 1))
1567961320350:head(offset_points <- c(1, seq(increment, chr_size, by = increment) + 1))
1567974270606:head(offset_points <- c(1, seq(increment, chr_size, by = increment) + 1))
1567974304596:head(offset_points <- c(0, seq(increment, chr_size, by = increment)))
1567974820857:chrs <- levels(filtered_mut_variants$chr)
1567974821550:c_chr <- chrs[1]
1567974822964:chr_size <- genome_size_data[genome_size_data$chr == c_chr,]$length
1567974823869:head(offset_points <- c(0, seq(increment, chr_size, by = increment)))
1567974825614:for (point in offset_points) {
1567974825614:start <- point + 1
1567974825615:end   <- point + window_size
1567974825616:if (end > chr_size)
1567974825616:end <- chr_size
1567974825617:mean_fvar <- filtered_mut_variants %>%
1567974825618:filter(chr == c_chr,
1567974825618:pos >= start, pos <= end) %>%
1567974825619:mean(fvar) %>% pull()
1567974825620:print(mean_fvar)
1567974825620:}
1567974841399:mean_fvar <- filtered_mut_variants %>%
1567974841400:filter(chr == c_chr,
1567974841400:pos >= start, pos <= end) %>%
1567974841401:mean(fvar)
1567974884852:mean_fvar <- filtered_mut_variants %>%
1567974884853:filter(chr == c_chr,
1567974884853:pos >= start, pos <= end) %>%
1567974884854:select(fvar) %>% mean()
1567974900292:c_chr
1567974908960:filtered_mut_variants %>%
1567974908961:filter(chr == c_chr,
1567974908962:pos >= start, pos <= end)
1567974915852:filtered_mut_variants %>%
1567974915852:filter(chr == c_chr,
1567974915853:pos >= start, pos <= end) %>%
1567974915853:select(fvar)
1567974920036:filtered_mut_variants %>%
1567974920036:filter(chr == c_chr,
1567974920037:pos >= start, pos <= end) %>%
1567974920037:select(fvar) %>% mean()
1567974940617:filtered_mut_variants %>%
1567974940617:filter(chr == c_chr,
1567974940618:pos >= start, pos <= end) %>%
1567974940618:select(fvar)
1567974961253:filtered_mut_variants %>%
1567974961253:filter(chr == c_chr,
1567974961253:pos >= start, pos <= end) %>%
1567974961254:select(fvar) %>% pull() %>% mean()
1567974964883:print(mean_fvar)
1567974966946:for (point in offset_points) {
1567974966947:start <- point + 1
1567974966947:end   <- point + window_size
1567974966948:if (end > chr_size)
1567974966949:end <- chr_size
1567974966950:mean_fvar <- filtered_mut_variants %>%
1567974966951:filter(chr == c_chr,
1567974966951:pos >= start, pos <= end) %>%
1567974966952:select(fvar) %>% pull() %>% mean()
1567974966953:print(mean_fvar)
1567974966954:}
1567975042034:print(paste(start, end, mean_fvar))
1567975044521:for (point in offset_points) {
1567975044522:start <- point + 1
1567975044523:end   <- point + window_size
1567975044524:if (end > chr_size)
1567975044525:end <- chr_size
1567975044527:mean_fvar <- filtered_mut_variants %>%
1567975044527:filter(chr == c_chr,
1567975044528:pos >= start, pos <= end) %>%
1567975044528:select(fvar) %>% pull() %>% mean()
1567975044529:print(paste(start, end, mean_fvar))
1567975044530:}
1567975128033:chrs <- levels(filtered_mut_variants$chr)
1567975128403:c_chr <- chrs[1]
1567975128859:chr_size <- genome_size_data[genome_size_data$chr == c_chr,]$length
1567975129214:head(offset_points <- c(0, seq(increment, chr_size - window_size, by = increment)))
1567975130902:for (point in offset_points) {
1567975130903:start <- point + 1
1567975130903:end   <- point + window_size
1567975130904:if (end > chr_size)
1567975130904:end <- chr_size
1567975130906:mean_fvar <- filtered_mut_variants %>%
1567975130907:filter(chr == c_chr,
1567975130907:pos >= start, pos <= end) %>%
1567975130908:select(fvar) %>% pull() %>% mean()
1567975130908:print(paste(start, end, mean_fvar))
1567975130908:}
1567975172645:chr_size
1567975198509:chr_size - window_size
1567975205657:tail(offset_points <- c(0, seq(increment, chr_size - window_size, by = increment)))
1567975306392:tail(offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment)))
1567975310207:for (point in offset_points) {
1567975310208:start <- point + 1
1567975310209:end   <- point + window_size
1567975310210:if (end > chr_size)
1567975310211:end <- chr_size
1567975310211:mean_fvar <- filtered_mut_variants %>%
1567975310212:filter(chr == c_chr,
1567975310212:pos >= start, pos <= end) %>%
1567975310212:select(fvar) %>% pull() %>% mean()
1567975310213:print(paste(start, end, mean_fvar))
1567975310213:}
1567975577499:snp_index_table <- data.frame()
1567975578322:for (point in offset_points) {
1567975578322:start <- point + 1
1567975578323:end   <- point + window_size
1567975578323:if (end > chr_size)
1567975578324:end <- chr_size
1567975578325:mean_fvar <- filtered_mut_variants %>%
1567975578326:filter(chr == c_chr,
1567975578327:pos >= start, pos <= end) %>%
1567975578327:select(fvar) %>% pull() %>% mean()
1567975578328:pos <- point + (window_size/2)
1567975578328:row <- c(pos, mean_fvar)
1567975578329:snp_index_table <- rbind.data.frame(snp_index_table, row)
1567975578329:}
1567975611101:snp_index_table
1567975646715:snp_index_table <- data.frame(pos = c(), mean_fvar = c())
1567975649242:for (point in offset_points) {
1567975649242:start <- point + 1
1567975649243:end   <- point + window_size
1567975649244:if (end > chr_size)
1567975649245:end <- chr_size
1567975649246:mean_fvar <- filtered_mut_variants %>%
1567975649246:filter(chr == c_chr,
1567975649247:pos >= start, pos <= end) %>%
1567975649247:select(fvar) %>% pull() %>% mean()
1567975649248:pos <- point + (window_size/2)
1567975649249:row <- c(pos, mean_fvar)
1567975649250:snp_index_table <- rbind.data.frame(snp_index_table, row)
1567975649250:}
1567975680525:snp_index_table
1567975687434:head(snp_index_table)
1567975791277:snp_index_table <- data.frame(pos = c(), mean_fvar = c())
1567975791874:for (point in offset_points) {
1567975791875:start <- point + 1
1567975791876:end   <- point + window_size
1567975791877:if (end > chr_size)
1567975791877:end <- chr_size
1567975791878:mean_fvar <- filtered_mut_variants %>%
1567975791879:filter(chr == c_chr,
1567975791880:pos >= start, pos <= end) %>%
1567975791881:select(fvar) %>% pull() %>% mean()
1567975791883:pos <- point + (window_size/2)
1567975791883:row <- c("pos" = pos, "mean_fvar" = mean_fvar)
1567975791884:snp_index_table <- rbind.data.frame(snp_index_table, row)
1567975791891:}
1567975823783:head(snp_index_table)
1567975976273:snp_index_table <- data.frame(pos = c(), mean_fvar = c())
1567975976791:for (point in offset_points) {
1567975976792:start <- point + 1
1567975976792:end   <- point + window_size
1567975976793:if (end > chr_size)
1567975976794:end <- chr_size
1567975976795:mean_fvar <- filtered_mut_variants %>%
1567975976795:filter(chr == c_chr,
1567975976796:pos >= start, pos <= end) %>%
1567975976796:select(fvar) %>% pull() %>% mean()
1567975976797:pos <- point + (increment/2)
1567975976798:row <- c("pos" = pos, "mean_fvar" = mean_fvar)
1567975976798:snp_index_table <- rbind.data.frame(snp_index_table, row)
1567975976799:}
1567975999877:increment < 1e+5
1567976000599:tail(offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment)))
1567976004019:snp_index_table <- data.frame(pos = c(), mean_fvar = c())
1567976004928:for (point in offset_points) {
1567976004929:start <- point + 1
1567976004930:end   <- point + window_size
1567976004931:if (end > chr_size)
1567976004932:end <- chr_size
1567976004933:mean_fvar <- filtered_mut_variants %>%
1567976004934:filter(chr == c_chr,
1567976004934:pos >= start, pos <= end) %>%
1567976004935:select(fvar) %>% pull() %>% mean()
1567976004937:pos <- point + (increment/2)
1567976004937:row <- c("pos" = pos, "mean_fvar" = mean_fvar)
1567976004938:snp_index_table <- rbind.data.frame(snp_index_table, row)
1567976004939:}
1567976038915:head(snp_index_table)
1567976064772:increment
1567976068080:increment < 1e+5
1567976071414:increment
1567976076140:increment < 1e+6
1567976077116:increment
1567976094923:increment <- 1e+5
1567976096281:tail(offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment)))
1567976097226:snp_index_table <- data.frame(pos = c(), mean_fvar = c())
1567976098257:for (point in offset_points) {
1567976098257:start <- point + 1
1567976098258:end   <- point + window_size
1567976098259:if (end > chr_size)
1567976098259:end <- chr_size
1567976098260:mean_fvar <- filtered_mut_variants %>%
1567976098269:filter(chr == c_chr,
1567976098270:pos >= start, pos <= end) %>%
1567976098270:select(fvar) %>% pull() %>% mean()
1567976098271:pos <- point + (increment/2)
1567976098272:row <- c("pos" = pos, "mean_fvar" = mean_fvar)
1567976098272:snp_index_table <- rbind.data.frame(snp_index_table, row)
1567976098273:}
1567976102843:head(snp_index_table)
1567976153067:colnames(snp_index_table) <- c("pos", "snp_index")
1567976156438:snp_index_table
1567976161138:head(snp_index_table)
1567976264192:filtered_mut_variants %>%
1567976264193:filter(chr == c_chr,
1567976264193:pos >= start, pos <= end) %>%
1567976264194:group_by(chr) %>%
1567976264194:summarise(mean_fvar = mean(fvar))
1567976323787:tail(snp_index_table)
1567976396681:mean_fvar <- filtered_mut_variants %>%
1567976396682:filter(chr == c_chr,
1567976396683:pos >= start, pos <= end) %>%
1567976396683:group_by(chr) %>%
1567976396684:summarise(mean_fvar = mean(fvar)) %>%
1567976396685:mutate(pos = point + (increment/2))
1567976399350:mean_fvar
1567976430076:snp_index_table <- tibble()
1567976448285:snp_index_table <- tibble()
1567976484059:snp_index_table <- tibble(c(), c(), c())
1567976504070:snp_index_table <- tibble(chr = c(), mean_fvar = c(), pos = c())
1567976528306:snp_index_table <- tibble()
1567976532045:snp_index_table <- rbind.data.frame(snp_index_table, mean_fvar)
1567976534493:snp_index_table
1567976544285:snp_index_table <- tibble()
1567976545338:for (point in offset_points) {
1567976545339:start <- point + 1
1567976545339:end   <- point + window_size
1567976545340:if (end > chr_size)
1567976545341:end <- chr_size
1567976545342:mean_fvar <- filtered_mut_variants %>%
1567976545342:filter(chr == c_chr,
1567976545343:pos >= start, pos <= end) %>%
1567976545343:group_by(chr) %>%
1567976545344:summarise(mean_fvar = mean(fvar)) %>%
1567976545344:mutate(pos = point + (increment/2))
1567976545346:snp_index_table <- rbind.data.frame(snp_index_table, mean_fvar)
1567976545346:# select(fvar) %>% pull() %>% mean()
1567976545351:# pos <- point + (increment/2)
1567976545353:# row <- c("pos" = pos, "mean_fvar" = mean_fvar)
1567976545354:# snp_index_table <- rbind.data.frame(snp_index_table, row)
1567976545360:}
1567976557905:snp_index_table
1567976727498:chrs <- levels(filtered_mut_variants$chr)
1567976728915:snp_index_table <- tibble()
1567976733275:for (c_chr in chrs) {
1567976733276:# c_chr <- chrs[1]
1567976733276:chr_size  <- genome_size_data[genome_size_data$chr == c_chr,]$length
1567976733277:increment <- 1e+5
1567976733278:# tail(offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment)))
1567976733278:offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment))
1567976733279:for (point in offset_points) {
1567976733280:start <- point + 1
1567976733280:end   <- point + window_size
1567976733282:if (end > chr_size)
1567976733282:end <- chr_size
1567976733284:mean_snp_index <- filtered_mut_variants %>%
1567976733285:filter(chr == c_chr,
1567976733286:pos >= start, pos <= end) %>%
1567976733292:group_by(chr) %>%
1567976733293:summarise(mean_snp_index = mean(fvar)) %>%
1567976733293:mutate(pos = point + (increment/2))
1567976733294:snp_index_table <- rbind.data.frame(snp_index_table, mean_snp_index)
1567976733295:}
1567976733296:}
1567976792037:snp_index_table
1567976804036:View(snp_index_table)
1567976898067:data_to_plot <- snp_index_table %>%
1567976898068:filter(chr == "scaffold_1")
1567976901028:data_to_plot
1567976969797:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567976969798:+ geom_point()
1567976969798:)
1567976991944:increment <- 1e+4
1567976995023:chrs <- levels(filtered_mut_variants$chr)
1567976995427:snp_index_table <- tibble()
1567976996016:for (c_chr in chrs) {
1567976996017:# c_chr <- chrs[1]
1567976996017:chr_size  <- genome_size_data[genome_size_data$chr == c_chr,]$length
1567976996018:increment <- 1e+4
1567976996018:# tail(offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment)))
1567976996019:offset_points <- c(0, seq(increment, chr_size - window_size + increment, by = increment))
1567976996020:for (point in offset_points) {
1567976996021:start <- point + 1
1567976996022:end   <- point + window_size
1567976996023:if (end > chr_size)
1567976996024:end <- chr_size
1567976996028:mean_snp_index <- filtered_mut_variants %>%
1567976996029:filter(chr == c_chr,
1567976996030:pos >= start, pos <= end) %>%
1567976996031:group_by(chr) %>%
1567976996032:summarise(mean_snp_index = mean(fvar)) %>%
1567976996032:mutate(pos = point + (increment/2))
1567976996034:snp_index_table <- rbind.data.frame(snp_index_table, mean_snp_index)
1567976996034:}
1567976996035:}
1567977553486:snp_index_table
1567977618815:save(snp_index_table, file = "data/02_WT_MUT_ALL/plot_allelic_frequency_per_windows.per_windows.computed_snp_index.Rdata")
1567977625541:data_to_plot <- snp_index_table %>%
1567977625541:filter(chr == "scaffold_1")
1567977626545:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567977626546:+ geom_point()
1567977626547:+ scale_y_continuous(limits = c(0.5, 1.0))
1567977626548:)
1567977671189:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567977671190:+ geom_point(size = 2)
1567977671191:+ scale_y_continuous(limits = c(0.5, 1.0))
1567977671191:)
1567977676142:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567977676143:+ geom_point(size = 1)
1567977676143:+ scale_y_continuous(limits = c(0.5, 1.0))
1567977676144:)
1567977926969:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567977926970:+ geom_point(size = 1)
1567977926971:+ scale_y_continuous(limits = c(0.5, 1.0))
1567977926971:+ labs(
1567977926972:title    = "SNP-index plot",
1567977926972:subtitle = "MUT All - Freq. > 0.5",
1567977926973:y        = "SNP index"
1567977926974:)
1567977926974:)
1567977971332:chr_palette <- c("#ffffff", "#E5E0CA")
1567977971983:base_text_size <- 14
1567977972420:box_color      <- "#E5E0CA"
1567977972768:mean_color     <- "orange"
1567977973125:points_color   <- "darkolivegreen"
1567977973545:text_color     <- "#333333"
1567977987305:data_to_plot <- snp_index_table %>%
1567977987306:filter(chr == "scaffold_1")
1567977988004:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567977988005:+ geom_point(size = 1)
1567977988005:+ scale_y_continuous(limits = c(0.5, 1.0))
1567977988006:+ labs(
1567977988006:title    = "SNP-index plot",
1567977988007:subtitle = "MUT All - Freq. > 0.5",
1567977988008:y        = "SNP index"
1567977988009:)
1567977988010:+ theme_bw(base_size = base_text_size)
1567977988011:+ theme(
1567977988011:axis.text    = element_text(size = base_text_size * 0.9),
1567977988012:axis.title   = element_text(size = base_text_size),
1567977988012:axis.title.x = element_blank(),
1567977988013:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567977988014:panel.grid   = element_blank(),
1567977988014:plot.title   = element_text(face = "bold"),
1567977988015:text         = element_text(color = text_color)
1567977988018:)
1567977988019:)
1567978108962:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978108963:+ geom_point(size = 1)
1567978108964:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978108964:+ labs(
1567978108965:title    = "SNP-index plot",
1567978108966:subtitle = "MUT All - SNP-index >= 0.5",
1567978108966:y        = "SNP index"
1567978108967:)
1567978108968:+ theme_bw(base_size = base_text_size)
1567978108968:+ theme(
1567978108969:axis.text    = element_text(size = base_text_size * 0.9),
1567978108970:axis.title   = element_text(size = base_text_size),
1567978108970:axis.title.x = element_blank(),
1567978108971:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978108972:panel.grid   = element_blank(),
1567978108972:plot.title   = element_text(face = "bold"),
1567978108980:text         = element_text(color = text_color)
1567978108981:)
1567978108982:)
1567978202653:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978202655:+ geom_step(color = "red")
1567978202656:+ geom_point(size = 1)
1567978202657:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978202658:+ labs(
1567978202659:title    = "SNP-index plot",
1567978202660:subtitle = "MUT All - SNP-index >= 0.5",
1567978202660:y        = "SNP index"
1567978202661:)
1567978202661:+ theme_bw(base_size = base_text_size)
1567978202662:+ theme(
1567978202663:axis.text    = element_text(size = base_text_size * 0.9),
1567978202664:axis.title   = element_text(size = base_text_size),
1567978202664:axis.title.x = element_blank(),
1567978202666:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978202666:panel.grid   = element_blank(),
1567978202668:plot.title   = element_text(face = "bold"),
1567978202669:text         = element_text(color = text_color)
1567978202669:)
1567978202670:)
1567978242432:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978242432:+ geom_step(color = "darkred")
1567978242433:+ geom_point(size = 1)
1567978242434:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978242434:+ labs(
1567978242435:title    = "SNP-index plot",
1567978242435:subtitle = "MUT All - SNP-index >= 0.5",
1567978242436:y        = "SNP index"
1567978242437:)
1567978242437:+ theme_bw(base_size = base_text_size)
1567978242438:+ theme(
1567978242438:axis.text    = element_text(size = base_text_size * 0.9),
1567978242439:axis.title   = element_text(size = base_text_size),
1567978242440:axis.title.x = element_blank(),
1567978242440:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978242441:panel.grid   = element_blank(),
1567978242443:plot.title   = element_text(face = "bold"),
1567978242444:text         = element_text(color = text_color)
1567978242444:)
1567978242445:)
1567978252043:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978252043:+ geom_step(color = "darkred")
1567978252044:+ geom_point(size = 1, color = "darkred")
1567978252044:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978252045:+ labs(
1567978252045:title    = "SNP-index plot",
1567978252046:subtitle = "MUT All - SNP-index >= 0.5",
1567978252047:y        = "SNP index"
1567978252047:)
1567978252048:+ theme_bw(base_size = base_text_size)
1567978252048:+ theme(
1567978252049:axis.text    = element_text(size = base_text_size * 0.9),
1567978252049:axis.title   = element_text(size = base_text_size),
1567978252050:axis.title.x = element_blank(),
1567978252050:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978252051:panel.grid   = element_blank(),
1567978252063:plot.title   = element_text(face = "bold"),
1567978252064:text         = element_text(color = text_color)
1567978252064:)
1567978252065:)
1567978262776:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978262776:+ geom_step(color = "darkred")
1567978262777:# + geom_point(size = 1, color = "darkred")
1567978262777:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978262778:+ labs(
1567978262778:title    = "SNP-index plot",
1567978262778:subtitle = "MUT All - SNP-index >= 0.5",
1567978262779:y        = "SNP index"
1567978262780:)
1567978262780:+ theme_bw(base_size = base_text_size)
1567978262781:+ theme(
1567978262782:axis.text    = element_text(size = base_text_size * 0.9),
1567978262783:axis.title   = element_text(size = base_text_size),
1567978262783:axis.title.x = element_blank(),
1567978262784:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978262785:panel.grid   = element_blank(),
1567978262785:plot.title   = element_text(face = "bold"),
1567978262787:text         = element_text(color = text_color)
1567978262788:)
1567978262789:)
1567978279806:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978279806:+ geom_step(color = "darkred", size = 1)
1567978279807:# + geom_point(size = 1, color = "darkred")
1567978279807:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978279808:+ labs(
1567978279808:title    = "SNP-index plot",
1567978279809:subtitle = "MUT All - SNP-index >= 0.5",
1567978279809:y        = "SNP index"
1567978279810:)
1567978279810:+ theme_bw(base_size = base_text_size)
1567978279811:+ theme(
1567978279811:axis.text    = element_text(size = base_text_size * 0.9),
1567978279812:axis.title   = element_text(size = base_text_size),
1567978279812:axis.title.x = element_blank(),
1567978279814:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978279815:panel.grid   = element_blank(),
1567978279816:plot.title   = element_text(face = "bold"),
1567978279817:text         = element_text(color = text_color)
1567978279817:)
1567978279818:)
1567978364196:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978364197:+ geom_step(color = "darkred", size = 1)
1567978364197:# + geom_point(size = 1, color = "darkred")
1567978364198:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978364198:+ labs(
1567978364199:title    = "SNP-index plot",
1567978364199:subtitle = "MUT All - SNP-index >= 0.5",
1567978364200:x        = "Chr position (Mb)",
1567978364200:y        = "SNP index"
1567978364201:)
1567978364201:+ theme_bw(base_size = base_text_size)
1567978364202:+ theme(
1567978364202:axis.text    = element_text(size = base_text_size * 0.9),
1567978364203:axis.title   = element_text(size = base_text_size),
1567978364203:# axis.title.x = element_blank(),
1567978364204:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978364204:panel.grid   = element_blank(),
1567978364205:plot.title   = element_text(face = "bold"),
1567978364205:text         = element_text(color = text_color)
1567978364206:)
1567978364206:)
1567978408813:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978408813:+ geom_step(color = "darkred", size = 1)
1567978408814:# + geom_point(size = 1, color = "darkred")
1567978408815:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978408815:+ scale_x_continuous(expand = c(0,0))
1567978408816:+ labs(
1567978408817:title    = "SNP-index plot",
1567978408819:subtitle = "MUT All - SNP-index >= 0.5",
1567978408820:x        = "Chr position (Mb)",
1567978408823:y        = "SNP index"
1567978408824:)
1567978408825:+ theme_bw(base_size = base_text_size)
1567978408826:+ theme(
1567978408826:axis.text    = element_text(size = base_text_size * 0.9),
1567978408828:axis.title   = element_text(size = base_text_size),
1567978408829:# axis.title.x = element_blank(),
1567978408830:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978408830:panel.grid   = element_blank(),
1567978408843:plot.title   = element_text(face = "bold"),
1567978408844:text         = element_text(color = text_color)
1567978408844:)
1567978408845:)
1567978440657:genome_size_data
1567978521850:data_to_plot <- snp_index_table
1567978543955:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978543956:+ geom_step(color = "darkred", size = 1)
1567978543957:# + geom_point(size = 1, color = "darkred")
1567978543957:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978543958:+ scale_x_continuous(expand = c(0,0))
1567978543958:+ labs(
1567978543959:title    = "SNP-index plot",
1567978543959:subtitle = "MUT All - SNP-index >= 0.5",
1567978543960:x        = "Chr position (Mb)",
1567978543960:y        = "SNP index"
1567978543961:)
1567978543961:+ facet_grid(vars(chr))
1567978543962:+ theme_bw(base_size = base_text_size)
1567978543962:+ theme(
1567978543963:axis.text    = element_text(size = base_text_size * 0.9),
1567978543963:axis.title   = element_text(size = base_text_size),
1567978543964:# axis.title.x = element_blank(),
1567978543966:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978543967:panel.grid   = element_blank(),
1567978543967:plot.title   = element_text(face = "bold"),
1567978543968:text         = element_text(color = text_color)
1567978543969:)
1567978543970:)
1567978585879:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978585880:+ geom_step(color = "darkred", size = 1)
1567978585880:# + geom_point(size = 1, color = "darkred")
1567978585881:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978585881:+ scale_x_continuous(expand = c(0,0))
1567978585882:+ labs(
1567978585883:title    = "SNP-index plot",
1567978585883:subtitle = "MUT All - SNP-index >= 0.5",
1567978585884:x        = "Chr position (Mb)",
1567978585884:y        = "SNP index"
1567978585885:)
1567978585886:+ facet_grid(vars(chr), cols = 2)
1567978585886:+ theme_bw(base_size = base_text_size)
1567978585887:+ theme(
1567978585888:axis.text    = element_text(size = base_text_size * 0.9),
1567978585888:axis.title   = element_text(size = base_text_size),
1567978585889:# axis.title.x = element_blank(),
1567978585890:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978585890:panel.grid   = element_blank(),
1567978585891:plot.title   = element_text(face = "bold"),
1567978585894:text         = element_text(color = text_color)
1567978585895:)
1567978585896:)
1567978707818:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978707819:+ geom_step(color = "darkred", size = 1)
1567978707819:# + geom_point(size = 1, color = "darkred")
1567978707820:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978707820:+ scale_x_continuous(expand = c(0,0))
1567978707821:+ labs(
1567978707822:title    = "SNP-index plot",
1567978707822:subtitle = "MUT All - SNP-index >= 0.5",
1567978707823:x        = "Chr position (Mb)",
1567978707823:y        = "SNP index"
1567978707824:)
1567978707824:+ facet_wrap(vars(chr), ncols = 3)
1567978707825:+ theme_bw(base_size = base_text_size)
1567978707825:+ theme(
1567978707826:axis.text    = element_text(size = base_text_size * 0.9),
1567978707827:axis.title   = element_text(size = base_text_size),
1567978707827:# axis.title.x = element_blank(),
1567978707828:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978707829:panel.grid   = element_blank(),
1567978707835:plot.title   = element_text(face = "bold"),
1567978707836:text         = element_text(color = text_color)
1567978707838:)
1567978707839:)
1567978716817:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978716818:+ geom_step(color = "darkred", size = 1)
1567978716818:# + geom_point(size = 1, color = "darkred")
1567978716818:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978716819:+ scale_x_continuous(expand = c(0,0))
1567978716819:+ labs(
1567978716819:title    = "SNP-index plot",
1567978716820:subtitle = "MUT All - SNP-index >= 0.5",
1567978716820:x        = "Chr position (Mb)",
1567978716820:y        = "SNP index"
1567978716821:)
1567978716821:+ facet_wrap(vars(chr), ncol = 3)
1567978716821:+ theme_bw(base_size = base_text_size)
1567978716822:+ theme(
1567978716822:axis.text    = element_text(size = base_text_size * 0.9),
1567978716822:axis.title   = element_text(size = base_text_size),
1567978716823:# axis.title.x = element_blank(),
1567978716823:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978716824:panel.grid   = element_blank(),
1567978716824:plot.title   = element_text(face = "bold"),
1567978716824:text         = element_text(color = text_color)
1567978716825:)
1567978716825:)
1567978768933:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567978768934:+ geom_point(size = 1)#, color = "darkred")
1567978768934:+ geom_step(color = "darkred", size = 1)
1567978768935:+ scale_y_continuous(limits = c(0.5, 1.0))
1567978768936:+ scale_x_continuous(expand = c(0,0))
1567978768936:+ labs(
1567978768937:title    = "SNP-index plot",
1567978768938:subtitle = "MUT All - SNP-index >= 0.5",
1567978768939:x        = "Chr position (Mb)",
1567978768939:y        = "SNP index"
1567978768940:)
1567978768941:+ facet_wrap(vars(chr), ncol = 3)
1567978768942:+ theme_bw(base_size = base_text_size)
1567978768942:+ theme(
1567978768943:axis.text    = element_text(size = base_text_size * 0.9),
1567978768944:axis.title   = element_text(size = base_text_size),
1567978768945:# axis.title.x = element_blank(),
1567978768945:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567978768946:panel.grid   = element_blank(),
1567978768946:plot.title   = element_text(face = "bold"),
1567978768946:text         = element_text(color = text_color)
1567978768947:)
1567978768947:)
1567978928879:roundUp <- function(x) 10^ceiling(log10(x))
1567978955569:roundUp(max(genome_size_data$length))
1567978997771:# Plot configuration variables and options
1567978997772:# options(scipen=10) # Avoid scientific notation on tick labels
1567978997773:x_breaks    <- round(seq(0, roundUp(max(genome_size_data$length)), by = 1e+7), digits = 0)
1567979000755:x_breaks
1567979052122:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979052123:# + geom_point(size = 1)#, color = "darkred")
1567979052123:+ geom_step(color = "darkred", size = 1)
1567979052124:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979052124:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)), breaks = x_breaks)
1567979052125:+ labs(
1567979052126:title    = "SNP-index plot",
1567979052131:subtitle = "MUT All - SNP-index >= 0.5",
1567979052132:x        = "Chr position (Mb)",
1567979052133:y        = "SNP index"
1567979052133:)
1567979052134:+ facet_wrap(vars(chr), ncol = 3)
1567979052134:+ theme_bw(base_size = base_text_size)
1567979052135:+ theme(
1567979052136:axis.text    = element_text(size = base_text_size * 0.9),
1567979052137:axis.title   = element_text(size = base_text_size),
1567979052155:# axis.title.x = element_blank(),
1567979052155:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567979052156:panel.grid   = element_blank(),
1567979052157:plot.title   = element_text(face = "bold"),
1567979052157:text         = element_text(color = text_color)
1567979052158:)
1567979052159:)
1567979076583:# Plot configuration variables and options
1567979076583:# options(scipen=10) # Avoid scientific notation on tick labels
1567979076584:x_breaks    <- round(seq(0, roundUp(max(genome_size_data$length)), by = 1e+7), digits = 0) / 1e+7
1567979078433:x_breaks
1567979107855:# Plot configuration variables and options
1567979107855:# options(scipen=10) # Avoid scientific notation on tick labels
1567979107856:x_breaks    <- round(seq(0, roundUp(max(genome_size_data$length)), by = 1e+7), digits = 0) / 1e+6
1567979109835:x_breaks
1567979121576:genome_size_data$length
1567979126404:genome_size_data
1567979139321:roundUp(max(genome_size_data$length))
1567979187683:60e+6
1567979215725:# Plot configuration variables and options
1567979215725:# options(scipen=10) # Avoid scientific notation on tick labels
1567979215726:x_breaks    <- round(seq(0, 6e+7), by = 1e+7), digits = 0) / 1e+6
1567979232980:# Plot configuration variables and options
1567979232981:# options(scipen=10) # Avoid scientific notation on tick labels
1567979232981:x_breaks    <- round(seq(0, 6e+7, by = 1e+7), digits = 0) / 1e+6
1567979235925:x_breaks
1567979252186:# Plot configuration variables and options
1567979252187:# options(scipen=10) # Avoid scientific notation on tick labels
1567979252187:x_breaks    <- round(seq(0, 6e+7, by = 1e+7), digits = 0)
1567979260622:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979260623:# + geom_point(size = 1)#, color = "darkred")
1567979260624:+ geom_step(color = "darkred", size = 1)
1567979260624:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979260625:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)), breaks = x_breaks/1e+6)
1567979260625:+ labs(
1567979260626:title    = "SNP-index plot",
1567979260627:subtitle = "MUT All - SNP-index >= 0.5",
1567979260627:x        = "Chr position (Mb)",
1567979260628:y        = "SNP index"
1567979260629:)
1567979260629:+ facet_wrap(vars(chr), ncol = 3)
1567979260630:+ theme_bw(base_size = base_text_size)
1567979260631:+ theme(
1567979260632:axis.text    = element_text(size = base_text_size * 0.9),
1567979260633:axis.title   = element_text(size = base_text_size),
1567979260633:# axis.title.x = element_blank(),
1567979260634:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567979260635:panel.grid   = element_blank(),
1567979260635:plot.title   = element_text(face = "bold"),
1567979260636:text         = element_text(color = text_color)
1567979260637:)
1567979260638:)
1567979298601:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979298602:# + geom_point(size = 1)#, color = "darkred")
1567979298602:+ geom_step(color = "darkred", size = 1)
1567979298603:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979298603:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979298604:breaks = x_breaks, labels = x_breaks/1e+6)
1567979298604:+ labs(
1567979298605:title    = "SNP-index plot",
1567979298606:subtitle = "MUT All - SNP-index >= 0.5",
1567979298607:x        = "Chr position (Mb)",
1567979298607:y        = "SNP index"
1567979298608:)
1567979298609:+ facet_wrap(vars(chr), ncol = 3)
1567979298609:+ theme_bw(base_size = base_text_size)
1567979298615:+ theme(
1567979298616:axis.text    = element_text(size = base_text_size * 0.9),
1567979298617:axis.title   = element_text(size = base_text_size),
1567979298617:# axis.title.x = element_blank(),
1567979298618:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567979298619:panel.grid   = element_blank(),
1567979298620:plot.title   = element_text(face = "bold"),
1567979298621:text         = element_text(color = text_color)
1567979298622:)
1567979298622:)
1567979438293:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979438294:# + geom_point(size = 1)#, color = "darkred")
1567979438294:+ geom_step(color = "darkred", size = 1)
1567979438295:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979438296:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979438296:breaks = x_breaks, labels = x_breaks/1e+6)
1567979438297:+ labs(
1567979438297:title    = "SNP-index plot",
1567979438298:subtitle = "MUT All - SNP-index >= 0.5",
1567979438299:x        = "Chr position (Mb)",
1567979438299:y        = "SNP index"
1567979438300:)
1567979438300:+ facet_wrap(vars(chr), ncol = 3)
1567979438301:+ theme_bw(base_size = base_text_size)
1567979438302:+ theme(
1567979438302:axis.text    = element_text(size = base_text_size * 0.9),
1567979438311:axis.title   = element_text(size = base_text_size),
1567979438312:# axis.title.x = element_blank(),
1567979438313:axis.title.y = element_text(margin = margin(0,12,0,0)),
1567979438314:panel.grid   = element_blank(),
1567979438314:plot.title   = element_text(face = "bold"),
1567979438315:strip.background = element_blank(),
1567979438316:text         = element_text(color = text_color)
1567979438317:)
1567979438318:)
1567979624276:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979624277:# + geom_point(size = 1)#, color = "darkred")
1567979624277:+ geom_step(color = "darkred", size = 1)
1567979624278:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979624278:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979624280:breaks = x_breaks, labels = x_breaks/1e+6)
1567979624281:+ labs(
1567979624282:title    = "SNP-index plot",
1567979624283:subtitle = "MUT All - SNP-index >= 0.5",
1567979624283:x        = "Chr position (Mb)",
1567979624284:y        = "SNP index"
1567979624284:)
1567979624285:+ facet_wrap(vars(chr), ncol = 3)
1567979624286:+ theme_bw(base_size = base_text_size)
1567979624286:+ theme(
1567979624287:axis.text     = element_text(size = base_text_size * 0.9),
1567979624288:axis.title    = element_text(size = base_text_size),
1567979624289:# axis.title.x  = element_blank(),
1567979624289:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979624290:panel.grid    = element_blank(),
1567979624291:plot.subtitle = element_text(face = "bold", hjust = 0.5),
1567979624291:plot.title    = element_text(face = "bold", hjust = 0.5),
1567979624292:strip.background = element_blank(),
1567979624293:text          = element_text(color = text_color)
1567979624293:)
1567979624294:)
1567979637293:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979637293:# + geom_point(size = 1)#, color = "darkred")
1567979637294:+ geom_step(color = "darkred", size = 1)
1567979637294:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979637294:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979637295:breaks = x_breaks, labels = x_breaks/1e+6)
1567979637295:+ labs(
1567979637296:title    = "SNP-index plot",
1567979637296:subtitle = "MUT All - SNP-index >= 0.5",
1567979637296:x        = "Chr position (Mb)",
1567979637297:y        = "SNP index"
1567979637297:)
1567979637298:+ facet_wrap(vars(chr), ncol = 3)
1567979637298:+ theme_bw(base_size = base_text_size)
1567979637298:+ theme(
1567979637299:axis.text     = element_text(size = base_text_size * 0.9),
1567979637300:axis.title    = element_text(size = base_text_size),
1567979637303:# axis.title.x  = element_blank(),
1567979637304:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979637305:panel.grid    = element_blank(),
1567979637306:plot.subtitle = element_text(face = "bold", hjust = 0.5),
1567979637307:plot.title    = element_text(hjust = 0.5),
1567979637308:strip.background = element_blank(),
1567979637311:text          = element_text(color = text_color)
1567979637312:)
1567979637326:)
1567979643062:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979643062:# + geom_point(size = 1)#, color = "darkred")
1567979643063:+ geom_step(color = "darkred", size = 1)
1567979643063:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979643063:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979643063:breaks = x_breaks, labels = x_breaks/1e+6)
1567979643064:+ labs(
1567979643064:title    = "SNP-index plot",
1567979643064:subtitle = "MUT All - SNP-index >= 0.5",
1567979643065:x        = "Chr position (Mb)",
1567979643065:y        = "SNP index"
1567979643065:)
1567979643066:+ facet_wrap(vars(chr), ncol = 3)
1567979643066:+ theme_bw(base_size = base_text_size)
1567979643067:+ theme(
1567979643067:axis.text     = element_text(size = base_text_size * 0.9),
1567979643067:axis.title    = element_text(size = base_text_size),
1567979643068:# axis.title.x  = element_blank(),
1567979643068:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979643068:panel.grid    = element_blank(),
1567979643069:plot.subtitle = element_text(hjust = 0.5),
1567979643069:plot.title    = element_text(face = "bold", hjust = 0.5),
1567979643070:strip.background = element_blank(),
1567979643070:text          = element_text(color = text_color)
1567979643070:)
1567979643071:)
1567979664173:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979664174:# + geom_point(size = 1)#, color = "darkred")
1567979664175:+ geom_step(color = "darkred", size = 0.6)
1567979664175:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979664176:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979664176:breaks = x_breaks, labels = x_breaks/1e+6)
1567979664177:+ labs(
1567979664177:title    = "SNP-index plot",
1567979664178:subtitle = "MUT All - SNP-index >= 0.5",
1567979664179:x        = "Chr position (Mb)",
1567979664179:y        = "SNP index"
1567979664180:)
1567979664180:+ facet_wrap(vars(chr), ncol = 3)
1567979664181:+ theme_bw(base_size = base_text_size)
1567979664182:+ theme(
1567979664182:axis.text     = element_text(size = base_text_size * 0.9),
1567979664191:axis.title    = element_text(size = base_text_size),
1567979664192:# axis.title.x  = element_blank(),
1567979664192:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979664193:panel.grid    = element_blank(),
1567979664194:plot.subtitle = element_text(hjust = 0.5),
1567979664194:plot.title    = element_text(face = "bold", hjust = 0.5),
1567979664195:strip.background = element_blank(),
1567979664196:text          = element_text(color = text_color)
1567979664197:)
1567979664197:)
1567979726551:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979726551:# + geom_point(size = 1)#, color = "darkred")
1567979726552:+ geom_step(color = "darkred", size = 0.6)
1567979726552:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979726553:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979726554:breaks = x_breaks, labels = x_breaks/1e+6)
1567979726554:+ labs(
1567979726555:title    = "SNP-index plot",
1567979726556:subtitle = "MUT All - SNP-index >= 0.5",
1567979726556:x        = "Chr position (Mb)",
1567979726557:y        = "SNP index"
1567979726558:)
1567979726558:+ facet_wrap(vars(chr), ncol = 3)
1567979726559:+ theme_bw(base_size = base_text_size)
1567979726560:+ theme(
1567979726560:axis.text     = element_text(size = base_text_size * 0.9),
1567979726561:axis.title    = element_text(size = base_text_size),
1567979726562:# axis.title.x  = element_blank(),
1567979726563:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979726563:panel.grid    = element_blank(),
1567979726564:plot.subtitle = element_text(hjust = 0.5),
1567979726565:plot.title    = element_text(face = "bold", hjust = 0.5),
1567979726566:strip.background = element_blank(),
1567979726567:strip.text = element_text(face = "bold"),
1567979726567:text          = element_text(color = text_color)
1567979726571:)
1567979726572:)
1567979790571:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979790571:# + geom_point(size = 1)#, color = "darkred")
1567979790572:+ geom_step(color = "darkred", size = 0.6)
1567979790572:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979790573:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979790573:breaks = x_breaks, labels = x_breaks/1e+6)
1567979790574:+ labs(
1567979790575:title    = "SNP-index plot",
1567979790575:subtitle = "MUT All - SNP-index >= 0.5",
1567979790576:x        = "Chr position (Mb)",
1567979790577:y        = "SNP index"
1567979790577:)
1567979790578:+ facet_wrap(vars(chr), ncol = 3)
1567979790579:+ theme_bw(base_size = base_text_size)
1567979790579:+ theme(
1567979790580:axis.text     = element_text(size = base_text_size * 0.9),
1567979790581:axis.title    = element_text(size = base_text_size),
1567979790581:# axis.title.x  = element_blank(),
1567979790582:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979790583:panel.grid    = element_blank(),
1567979790584:panel.spacing = unit(4, units = "mm"),
1567979790584:plot.subtitle = element_text(hjust = 0.5),
1567979790585:plot.title    = element_text(face = "bold", hjust = 0.5),
1567979790586:strip.background = element_blank(),
1567979790587:strip.text = element_text(face = "bold"),
1567979790588:text          = element_text(color = text_color)
1567979790589:)
1567979790590:)
1567979960687:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567979960688:# + geom_point(size = 1)#, color = "darkred")
1567979960688:+ geom_step(color = "darkred", size = 0.6)
1567979960689:+ scale_y_continuous(limits = c(0.5, 1.0))
1567979960689:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567979960690:breaks = x_breaks, labels = x_breaks/1e+6)
1567979960690:+ labs(
1567979960691:title    = "SNP-index plot",
1567979960691:subtitle = "MUT All | SNP-index >= 0.5",
1567979960691:x        = "Chr position (Mb)",
1567979960692:y        = "SNP index"
1567979960692:)
1567979960693:+ facet_wrap(vars(chr), ncol = 3)
1567979960693:+ theme_bw(base_size = base_text_size)
1567979960693:+ theme(
1567979960694:axis.text     = element_text(size = base_text_size * 0.9),
1567979960694:axis.title    = element_text(size = base_text_size),
1567979960695:# axis.title.x  = element_blank(),
1567979960695:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567979960696:panel.grid    = element_blank(),
1567979960697:panel.spacing = unit(4, units = "mm"),
1567979960698:plot.subtitle = element_text(hjust = 0.5),
1567979960698:plot.title    = element_text(face = "bold", hjust = 0.5),
1567979960699:strip.background = element_blank(),
1567979960700:strip.text = element_text(face = "bold"),
1567979960701:text          = element_text(color = text_color)
1567979960702:)
1567979960702:)
1567980187873:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980187873:# + geom_point(size = 1)#, color = "darkred")
1567980187874:+ geom_step(color = "darkred", size = 0.6)
1567980187874:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980187875:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980187875:breaks = x_breaks, labels = x_breaks/1e+6)
1567980187876:+ labs(
1567980187876:title    = "SNP-index plot",
1567980187877:subtitle = "MUT All | SNP-index >= 0.5",
1567980187877:x        = "Chr position (Mb)",
1567980187878:y        = "SNP index"
1567980187879:)
1567980187879:+ facet_wrap(vars(chr), ncol = 3,  scales = "free")
1567980187880:+ theme_bw(base_size = base_text_size)
1567980187880:+ theme(
1567980187881:axis.text     = element_text(size = base_text_size * 0.9),
1567980187882:axis.title    = element_text(size = base_text_size),
1567980187886:# axis.title.x  = element_blank(),
1567980187886:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980187887:panel.grid    = element_blank(),
1567980187888:panel.spacing = unit(4, units = "mm"),
1567980187888:plot.subtitle = element_text(hjust = 0.5),
1567980187889:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980187890:strip.background = element_blank(),
1567980187890:strip.text = element_text(face = "bold"),
1567980187922:text          = element_text(color = text_color)
1567980187923:)
1567980187924:)
1567980228925:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980228926:# + geom_point(size = 1)#, color = "darkred")
1567980228927:+ geom_step(color = "darkred", size = 0.6)
1567980228927:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980228928:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980228928:breaks = x_breaks, labels = x_breaks/1e+6)
1567980228929:+ labs(
1567980228929:title    = "SNP-index plot",
1567980228929:subtitle = "MUT All | SNP-index >= 0.5",
1567980228930:x        = "Chr position (Mb)",
1567980228930:y        = "SNP index"
1567980228931:)
1567980228931:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567980228931:+ theme_bw(base_size = base_text_size)
1567980228932:+ theme(
1567980228932:axis.text     = element_text(size = base_text_size * 0.9),
1567980228933:axis.title    = element_text(size = base_text_size),
1567980228933:# axis.title.x  = element_blank(),
1567980228934:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980228934:panel.grid    = element_blank(),
1567980228935:panel.spacing = unit(4, units = "mm"),
1567980228936:plot.subtitle = element_text(hjust = 0.5),
1567980228937:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980228937:strip.background = element_blank(),
1567980228938:strip.text = element_text(face = "bold"),
1567980228938:text          = element_text(color = text_color)
1567980228939:)
1567980228939:)
1567980365095:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980365096:# + geom_point(size = 1)#, color = "darkred")
1567980365097:+ geom_step(color = "darkred", size = 0.6)
1567980365097:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980365098:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980365099:breaks = x_breaks, labels = x_breaks/1e+6)
1567980365100:+ labs(
1567980365100:title    = "SNP-index plot",
1567980365101:subtitle = "MUT All | SNP-index >= 0.5",
1567980365102:x        = "Chr position (Mb)",
1567980365102:y        = "SNP index"
1567980365103:)
1567980365104:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567980365104:+ theme_bw(base_size = base_text_size)
1567980365105:+ theme(
1567980365107:axis.text     = element_text(size = base_text_size * 0.9),
1567980365107:axis.title    = element_text(size = base_text_size),
1567980365108:# axis.title.x  = element_blank(),
1567980365109:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980365111:# panel.grid    = element_blank(),
1567980365112:panel.grid.major.y = element_blank(),
1567980365113:panel.spacing = unit(4, units = "mm"),
1567980365113:plot.subtitle = element_text(hjust = 0.5),
1567980365114:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980365115:strip.background = element_blank(),
1567980365116:strip.text = element_text(face = "bold"),
1567980365117:text          = element_text(color = text_color)
1567980365118:)
1567980365119:)
1567980417891:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980417892:# + geom_point(size = 1)#, color = "darkred")
1567980417893:+ geom_step(color = "darkred", size = 0.6)
1567980417894:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980417895:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980417895:breaks = x_breaks, labels = x_breaks/1e+6)
1567980417896:+ labs(
1567980417896:title    = "SNP-index plot",
1567980417897:subtitle = "MUT All | SNP-index >= 0.5",
1567980417898:x        = "Chr position (Mb)",
1567980417898:y        = "SNP index"
1567980417899:)
1567980417899:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567980417900:+ theme_bw(base_size = base_text_size)
1567980417900:+ theme(
1567980417901:axis.text     = element_text(size = base_text_size * 0.9),
1567980417902:axis.title    = element_text(size = base_text_size),
1567980417902:# axis.title.x  = element_blank(),
1567980417903:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980417904:# panel.grid    = element_blank(),
1567980417904:panel.grid.major.x = element_blank(),
1567980417905:panel.grid.minor = element_blank(),
1567980417906:panel.spacing = unit(4, units = "mm"),
1567980417907:plot.subtitle = element_text(hjust = 0.5),
1567980417907:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980417908:strip.background = element_blank(),
1567980417909:strip.text = element_text(face = "bold"),
1567980417910:text          = element_text(color = text_color)
1567980417910:)
1567980417911:)
1567980450831:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980450832:# + geom_point(size = 1)#, color = "darkred")
1567980450832:+ geom_step(color = "darkred", size = 0.6)
1567980450833:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980450834:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980450834:breaks = x_breaks, labels = x_breaks/1e+6)
1567980450835:+ labs(
1567980450836:title    = "SNP-index plot",
1567980450837:subtitle = "MUT All | SNP-index >= 0.5",
1567980450838:x        = "Chr position (Mb)",
1567980450838:y        = "SNP index"
1567980450839:)
1567980450840:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567980450841:+ theme_bw(base_size = base_text_size)
1567980450842:+ theme(
1567980450843:axis.text     = element_text(size = base_text_size * 0.9),
1567980450845:axis.title    = element_text(size = base_text_size),
1567980450846:# axis.title.x  = element_blank(),
1567980450847:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980450848:# panel.grid    = element_blank(),
1567980450849:# panel.grid.major.x = element_blank(),
1567980450849:panel.grid.minor = element_blank(),
1567980450850:panel.spacing = unit(4, units = "mm"),
1567980450851:plot.subtitle = element_text(hjust = 0.5),
1567980450852:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980450853:strip.background = element_blank(),
1567980450854:strip.text = element_text(face = "bold"),
1567980450855:text          = element_text(color = text_color)
1567980450855:)
1567980450856:)
1567980727177:# Filter variants ---------------------------------------------------------
1567980727177:# Keep variants:
1567980727177:## - with coverage < 100,
1567980727178:# - with fvar >= 0.5, and
1567980727178:# - that are present in the MUT and not in the WT (background) variant set
1567980727178:(filtered_mut_variants <- all_mut_variants %>%
1567980727179:# filter(cov < 100) #%>%
1567980727179:filter(fvar >= 0.5) %>%
1567980727179:# anti_join(background_variants, by = c("lg", "pos"))
1567980727180:replace(chr, str_detect(chr, "scaffold_"), "chr ") %>%
1567980727180:mutate(chr = factor(chr, levels = unique(all_mut_variants$chr)))
1567980727181:)
1567980840112:ggsave(filename = "results/snp_index_plot.MUT_All.fvar_0.5_and_up.pdf",
1567980840113:plot = snp_index_plot, width = 18, height = 12)
1567980906019:ggsave(filename = "results/snp_index_plot.MUT_All.fvar_0.5_and_up.pdf",
1567980906020:plot = snp_index_plot, width = 12, height = 7)
1567980965272:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980965272:# + geom_point(size = 1)#, color = "darkred")
1567980965273:+ geom_step(color = "darkred", size = 0.6)
1567980965274:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980965274:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980965275:breaks = x_breaks, labels = x_breaks/1e+6)
1567980965276:+ labs(
1567980965277:title    = "SNP-index plot",
1567980965277:subtitle = "MUT All | SNP-index >= 0.5",
1567980965280:x        = "Chr position (Mb)",
1567980965281:y        = "SNP index"
1567980965282:)
1567980965283:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567980965283:+ theme_bw(base_size = base_text_size)
1567980965284:+ theme(
1567980965284:axis.text     = element_text(size = base_text_size * 0.9),
1567980965285:axis.title    = element_text(size = base_text_size),
1567980965286:# axis.title.x  = element_blank(),
1567980965287:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980965287:# panel.grid    = element_blank(),
1567980965287:# panel.grid.major.x = element_blank(),
1567980965288:panel.grid.minor = element_blank(),
1567980965288:panel.spacing = unit(4, units = "mm"),
1567980965289:plot.subtitle = element_text(hjust = 0.5),
1567980965289:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980965290:plot.margin = margin(4,4,4,4,"mm"),
1567980965290:strip.background = element_blank(),
1567980965291:strip.text = element_text(face = "bold"),
1567980965292:text          = element_text(color = text_color)
1567980965293:)
1567980965294:)
1567980987577:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567980987578:# + geom_point(size = 1)#, color = "darkred")
1567980987578:+ geom_step(color = "darkred", size = 0.6)
1567980987578:+ scale_y_continuous(limits = c(0.5, 1.0))
1567980987579:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567980987579:breaks = x_breaks, labels = x_breaks/1e+6)
1567980987579:+ labs(
1567980987580:title    = "SNP-index plot",
1567980987580:subtitle = "MUT All | SNP-index >= 0.5",
1567980987581:x        = "Chr position (Mb)",
1567980987581:y        = "SNP index"
1567980987581:)
1567980987582:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567980987582:+ theme_bw(base_size = base_text_size)
1567980987583:+ theme(
1567980987583:axis.text     = element_text(size = base_text_size * 0.9),
1567980987583:axis.title    = element_text(size = base_text_size),
1567980987584:# axis.title.x  = element_blank(),
1567980987584:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567980987584:# panel.grid    = element_blank(),
1567980987585:# panel.grid.major.x = element_blank(),
1567980987585:panel.grid.minor = element_blank(),
1567980987586:panel.spacing = unit(4, units = "mm"),
1567980987586:plot.subtitle = element_text(hjust = 0.5),
1567980987586:plot.title    = element_text(face = "bold", hjust = 0.5),
1567980987587:plot.margin = margin(4,8,4,4,"mm"),
1567980987587:strip.background = element_blank(),
1567980987588:strip.text = element_text(face = "bold"),
1567980987588:text          = element_text(color = text_color)
1567980987589:)
1567980987590:)
1567980990757:ggsave(filename = "results/snp_index_plot.MUT_All.fvar_0.5_and_up.pdf",
1567980990941:plot = snp_index_plot, width = 12, height = 7)
1567981051934:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567981051935:# + geom_point(size = 1)#, color = "darkred")
1567981051936:+ geom_step(color = "darkred", size = 0.6)
1567981051936:+ scale_y_continuous(expand = c(0,0), limits = c(0.5, 1.0))
1567981051936:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567981051937:breaks = x_breaks, labels = x_breaks/1e+6)
1567981051938:+ labs(
1567981051938:title    = "SNP-index plot",
1567981051939:subtitle = "MUT All | SNP-index >= 0.5",
1567981051939:x        = "Chr position (Mb)",
1567981051940:y        = "SNP index"
1567981051941:)
1567981051942:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567981051942:+ theme_bw(base_size = base_text_size)
1567981051943:+ theme(
1567981051944:axis.text     = element_text(size = base_text_size * 0.9),
1567981051945:axis.title    = element_text(size = base_text_size),
1567981051947:# axis.title.x  = element_blank(),
1567981051947:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567981051948:# panel.grid    = element_blank(),
1567981051949:# panel.grid.major.x = element_blank(),
1567981051950:panel.grid.minor = element_blank(),
1567981051950:panel.spacing = unit(4, units = "mm"),
1567981051951:plot.subtitle = element_text(hjust = 0.5),
1567981051952:plot.title    = element_text(face = "bold", hjust = 0.5),
1567981051953:plot.margin = margin(4,8,4,4,"mm"),
1567981051954:strip.background = element_blank(),
1567981051955:strip.text = element_text(face = "bold"),
1567981051956:text          = element_text(color = text_color)
1567981051957:)
1567981051957:)
1567981055549:ggsave(filename = "results/snp_index_plot.MUT_All.fvar_0.5_and_up.pdf",
1567981055550:plot = snp_index_plot, width = 12, height = 7)
1567981227548:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567981227549:# + geom_point(size = 1)#, color = "darkred")
1567981227549:+ geom_step(color = "darkred", size = 0.6)
1567981227550:+ scale_y_continuous(expand = c(0,0), limits = c(0.5, 1.0))
1567981227550:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567981227551:breaks = x_breaks, labels = x_breaks/1e+6)
1567981227552:+ labs(
1567981227552:title    = "SNP-index plot",
1567981227553:subtitle = "MUT All (SNP-index >= 0.5)",
1567981227553:x        = "Chr position (Mb)",
1567981227554:y        = "SNP index"
1567981227555:)
1567981227556:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567981227556:+ theme_bw(base_size = base_text_size)
1567981227557:+ theme(
1567981227558:axis.text     = element_text(size = base_text_size * 0.9),
1567981227558:axis.ticks = element_line(sze = 0.5),
1567981227559:axis.title    = element_text(size = base_text_size),
1567981227560:# axis.title.x  = element_blank(),
1567981227561:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567981227561:# panel.grid    = element_blank(),
1567981227562:# panel.grid.major.x = element_blank(),
1567981227563:panel.grid.minor = element_blank(),
1567981227563:panel.spacing = unit(4, units = "mm"),
1567981227564:plot.subtitle = element_text(hjust = 0.5),
1567981227565:plot.title    = element_text(face = "bold", hjust = 0.5),
1567981227566:plot.margin = margin(4,8,4,4,"mm"),
1567981227567:strip.background = element_blank(),
1567981227568:strip.text = element_text(face = "bold"),
1567981227568:text          = element_text(color = text_color)
1567981227569:)
1567981227570:)
1567981234743:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567981234744:# + geom_point(size = 1)#, color = "darkred")
1567981234744:+ geom_step(color = "darkred", size = 0.6)
1567981234745:+ scale_y_continuous(expand = c(0,0), limits = c(0.5, 1.0))
1567981234745:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567981234746:breaks = x_breaks, labels = x_breaks/1e+6)
1567981234746:+ labs(
1567981234747:title    = "SNP-index plot",
1567981234748:subtitle = "MUT All (SNP-index >= 0.5)",
1567981234748:x        = "Chr position (Mb)",
1567981234749:y        = "SNP index"
1567981234750:)
1567981234750:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567981234751:+ theme_bw(base_size = base_text_size)
1567981234752:+ theme(
1567981234753:axis.text     = element_text(size = base_text_size * 0.9),
1567981234754:axis.ticks = element_line(size = 0.5),
1567981234755:axis.title    = element_text(size = base_text_size),
1567981234755:# axis.title.x  = element_blank(),
1567981234756:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567981234757:# panel.grid    = element_blank(),
1567981234758:# panel.grid.major.x = element_blank(),
1567981234759:panel.grid.minor = element_blank(),
1567981234760:panel.spacing = unit(4, units = "mm"),
1567981234760:plot.subtitle = element_text(hjust = 0.5),
1567981234761:plot.title    = element_text(face = "bold", hjust = 0.5),
1567981234762:plot.margin = margin(4,8,4,4,"mm"),
1567981234763:strip.background = element_blank(),
1567981234764:strip.text = element_text(face = "bold"),
1567981234765:text          = element_text(color = text_color)
1567981234766:)
1567981234767:)
1567981267070:ggsave(filename = "results/snp_index_plot.MUT_All.fvar_0.5_and_up.pdf",
1567981267071:plot = snp_index_plot, width = 12, height = 7)
1567981300281:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index))
1567981300282:# + geom_point(size = 1)#, color = "darkred")
1567981300282:+ geom_step(color = "darkred", size = 0.6)
1567981300283:+ scale_y_continuous(expand = c(0,0), limits = c(0.5, 1.0))
1567981300283:+ scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1567981300284:breaks = x_breaks, labels = x_breaks/1e+6)
1567981300284:+ labs(
1567981300285:title    = "SNP-index plot",
1567981300286:subtitle = "MUT All (SNP-index >= 0.5)",
1567981300286:x        = "Chr position (Mb)",
1567981300287:y        = "SNP index"
1567981300287:)
1567981300288:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1567981300288:+ theme_bw(base_size = base_text_size)
1567981300289:+ theme(
1567981300289:axis.text     = element_text(size = base_text_size * 0.9),
1567981300290:axis.ticks = element_line(size = 0.3),
1567981300291:axis.title    = element_text(size = base_text_size),
1567981300295:# axis.title.x  = element_blank(),
1567981300296:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1567981300297:# panel.grid    = element_blank(),
1567981300297:# panel.grid.major.x = element_blank(),
1567981300298:panel.grid.minor = element_blank(),
1567981300299:panel.spacing = unit(4, units = "mm"),
1567981300300:plot.subtitle = element_text(hjust = 0.5),
1567981300300:plot.title    = element_text(face = "bold", hjust = 0.5),
1567981300301:plot.margin = margin(4,8,4,4,"mm"),
1567981300302:strip.background = element_blank(),
1567981300303:strip.text = element_text(face = "bold"),
1567981300304:text          = element_text(color = text_color)
1567981300305:)
1567981300306:)
1567981303783:ggsave(filename = "results/snp_index_plot.MUT_All.fvar_0.5_and_up.pdf",
1567981303783:plot = snp_index_plot, width = 12, height = 7)
1569166898230:install.packages("doParallel")
1569166906957:registerDoParallel(cores)
1569167194626:install.packages(c("foreach", "doParallel", "tidyverse"))
1569167209010:# installAndLoadPackages(packages, verbose = TRUE)
1569167209010:# Load packages
1569167209011:require(tidyverse)
1569167211655:require(foreach)
1569167214000:require(doParallel)
1569168983445:# Initialization of variables ---------------------------------------------
1569168983504:# Values to test the script using RStudio
1569168983505:script.home       <- "/home/hspitia/Dropbox (GaTech)/data/bsa"
1569168983506:variants_file     <- paste(script.home, "data/03_separated_population/P2S1_10.complete.pileup.csv.gz", sep = "/")
1569168983507:# variants_file     <- paste(script.home, "data/03_separated_population/WT.P2S1.complete.pileup.csv.gz", sep = "/")
1569168983507:# variants_file     <- paste(script.home, "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz", sep = "/")
1569168983508:chr_lengths_file  <- paste(script.home, "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv", sep = "/")
1569168983509:fvar_thresold     <- 0.3
1569168983509:window_size       <- 5 # in SNPs
1569168983510:increment         <- 1 # in SNPs
1569168983511:cores             <- 1
1569168983512:ouput_file        <- "snp_index_table.tsv"
1569169003834:(snp_index_table  <- read_csv(output_file, col_names = c("chr", "mean_snp_index", "pos")))
1569169025679:getwd()
1569169056438:(snp_index_table  <- read_csv(paste0("scripts/",output_file), col_names = c("chr", "mean_snp_index", "pos")))
1569169068947:script.home       <- "/home/hspitia/Dropbox (GaTech)/data/bsa"
1569169068949:variants_file     <- paste(script.home, "data/03_separated_population/P2S1_10.complete.pileup.csv.gz", sep = "/")
1569169068950:# variants_file     <- paste(script.home, "data/03_separated_population/WT.P2S1.complete.pileup.csv.gz", sep = "/")
1569169068952:# variants_file     <- paste(script.home, "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz", sep = "/")
1569169068953:chr_lengths_file  <- paste(script.home, "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv", sep = "/")
1569169068954:fvar_thresold     <- 0.3
1569169068954:window_size       <- 5 # in SNPs
1569169068955:increment         <- 1 # in SNPs
1569169068956:cores             <- 1
1569169068957:ouput_file        <- "snp_index_table.tsv"
1569169074464:(snp_index_table  <- read_csv(paste0("scripts/",output_file), col_names = c("chr", "mean_snp_index", "pos")))
1569169079564:output_file
1569169084414:(snp_index_table  <- read_csv(paste0("scripts/",ouput_file), col_names = c("chr", "mean_snp_index", "pos")))
1569169095193:(snp_index_table  <- read_tsv(paste0("scripts/",ouput_file), col_names = c("chr", "mean_snp_index", "pos")))
1569169122231:roundUp <- function(x) 10^ceiling(log10(x))
1569169122679:# Plot --------------------------------------------------------------------
1569169122679:# Plot configuration variables and options
1569169122680:# options(scipen=10) # Avoid scientific notation on tick labels
1569169122681:x_breaks    <- round(seq(0, 6e+7, by = 1e+7), digits = 0)
1569169122826:chr_palette <- c("#ffffff", "#E5E0CA")
1569169123099:base_text_size <- 14
1569169123273:box_color      <- "#E5E0CA"
1569169123477:mean_color     <- "orange"
1569169123681:points_color   <- "darkolivegreen"
1569169123871:text_color     <- "#333333"
1569169124322:data_to_plot <- snp_index_table
1569169124714:max(data_to_plot$mean_snp_index)
1569169130311:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569169130311:# geom_point(size = 1)#, color = "darkred")
1569169130312:geom_step(color = "darkred", size = 0.6) +
1569169130313:# scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569169130313:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569169130313:# breaks = x_breaks, labels = x_breaks/1e+6) +
1569169130315:labs(
1569169130316:title    = "SNP-index plot",
1569169130317:subtitle = "MUT All (SNP-index >= 0.5)",
1569169130318:x        = "Chr position (Mb)",
1569169130320:y        = "SNP index"
1569169130321:)
1569169130329:# + facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1569169130330:+ theme_bw(base_size = base_text_size)
1569169130330:+ theme(
1569169130331:axis.text     = element_text(size = base_text_size * 0.9),
1569169130332:axis.ticks = element_line(size = 0.3),
1569169130332:axis.title    = element_text(size = base_text_size),
1569169130333:# axis.title.x  = element_blank(),
1569169130333:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569169130334:# panel.grid    = element_blank(),
1569169130334:# panel.grid.major.x = element_blank(),
1569169130335:panel.grid.minor = element_blank(),
1569169130335:panel.spacing = unit(4, units = "mm"),
1569169130336:plot.subtitle = element_text(hjust = 0.5),
1569169130336:plot.title    = element_text(face = "bold", hjust = 0.5),
1569169130337:plot.margin = margin(4,8,4,4,"mm"),
1569169130338:strip.background = element_blank(),
1569169130338:strip.text = element_text(face = "bold"),
1569169130339:text          = element_text(color = text_color)
1569169130339:)
1569169130340:)
1569169267020:data_to_plot <- snp_index_table %>%
1569169267021:filter(chr == "chr 1" | chr == "chr")
1569169269658:data_to_plot
1569169275368:max(data_to_plot$mean_snp_index)
1569169277303:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569169277303:# geom_point(size = 1)#, color = "darkred")
1569169277304:geom_step(color = "darkred", size = 0.6) +
1569169277305:# scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569169277305:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569169277306:# breaks = x_breaks, labels = x_breaks/1e+6) +
1569169277306:labs(
1569169277307:title    = "SNP-index plot",
1569169277308:subtitle = "MUT All (SNP-index >= 0.5)",
1569169277308:x        = "Chr position (Mb)",
1569169277309:y        = "SNP index"
1569169277309:)
1569169277310:# + facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1569169277310:+ theme_bw(base_size = base_text_size)
1569169277311:+ theme(
1569169277311:axis.text     = element_text(size = base_text_size * 0.9),
1569169277312:axis.ticks = element_line(size = 0.3),
1569169277313:axis.title    = element_text(size = base_text_size),
1569169277313:# axis.title.x  = element_blank(),
1569169277314:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569169277314:# panel.grid    = element_blank(),
1569169277315:# panel.grid.major.x = element_blank(),
1569169277321:panel.grid.minor = element_blank(),
1569169277322:panel.spacing = unit(4, units = "mm"),
1569169277323:plot.subtitle = element_text(hjust = 0.5),
1569169277324:plot.title    = element_text(face = "bold", hjust = 0.5),
1569169277324:plot.margin = margin(4,8,4,4,"mm"),
1569169277325:strip.background = element_blank(),
1569169277326:strip.text = element_text(face = "bold"),
1569169277326:text          = element_text(color = text_color)
1569169277327:)
1569169277328:)
1569169295183:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569169295184:# geom_point(size = 1)#, color = "darkred")
1569169295184:geom_step(color = "darkred", size = 0.6) +
1569169295185:# scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569169295185:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569169295186:# breaks = x_breaks, labels = x_breaks/1e+6) +
1569169295187:labs(
1569169295187:title    = "SNP-index plot",
1569169295188:subtitle = "MUT All (SNP-index >= 0.5)",
1569169295188:x        = "Chr position (Mb)",
1569169295189:y        = "SNP index"
1569169295190:)
1569169295190:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1569169295191:+ theme_bw(base_size = base_text_size)
1569169295191:+ theme(
1569169295192:axis.text     = element_text(size = base_text_size * 0.9),
1569169295192:axis.ticks = element_line(size = 0.3),
1569169295193:axis.title    = element_text(size = base_text_size),
1569169295195:# axis.title.x  = element_blank(),
1569169295196:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569169295196:# panel.grid    = element_blank(),
1569169295197:# panel.grid.major.x = element_blank(),
1569169295198:panel.grid.minor = element_blank(),
1569169295198:panel.spacing = unit(4, units = "mm"),
1569169295199:plot.subtitle = element_text(hjust = 0.5),
1569169295200:plot.title    = element_text(face = "bold", hjust = 0.5),
1569169295202:plot.margin = margin(4,8,4,4,"mm"),
1569169295203:strip.background = element_blank(),
1569169295205:strip.text = element_text(face = "bold"),
1569169295206:text          = element_text(color = text_color)
1569169295207:)
1569169295207:)
1569169307641:data_to_plot
1569169393810:data_to_plot <- snp_index_table %>%
1569169393810:filter(chr == "chr 1" | chr == "chr") %>%
1569169393811:chr = factor(chr, levels = unique(snp_index_table$chr))
1569169397279:snp_index_table
1569169409027:snp_index_table %>%
1569169409027:filter(chr == "chr 1" | chr == "chr")
1569169426897:data_to_plot <- snp_index_table %>%
1569169426897:filter(chr == "chr 1" | chr == "chr") %>%
1569169426898:mutate(chr = factor(chr, levels = unique(snp_index_table$chr)))
1569169429452:max(data_to_plot$mean_snp_index)
1569169432498:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569169432499:# geom_point(size = 1)#, color = "darkred")
1569169432500:geom_step(color = "darkred", size = 0.6) +
1569169432501:# scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569169432502:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569169432504:# breaks = x_breaks, labels = x_breaks/1e+6) +
1569169432505:labs(
1569169432506:title    = "SNP-index plot",
1569169432507:subtitle = "MUT All (SNP-index >= 0.5)",
1569169432508:x        = "Chr position (Mb)",
1569169432508:y        = "SNP index"
1569169432509:)
1569169432509:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1569169432510:+ theme_bw(base_size = base_text_size)
1569169432511:+ theme(
1569169432511:axis.text     = element_text(size = base_text_size * 0.9),
1569169432512:axis.ticks = element_line(size = 0.3),
1569169432512:axis.title    = element_text(size = base_text_size),
1569169432513:# axis.title.x  = element_blank(),
1569169432513:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569169432514:# panel.grid    = element_blank(),
1569169432515:# panel.grid.major.x = element_blank(),
1569169432515:panel.grid.minor = element_blank(),
1569169432516:panel.spacing = unit(4, units = "mm"),
1569169432517:plot.subtitle = element_text(hjust = 0.5),
1569169432517:plot.title    = element_text(face = "bold", hjust = 0.5),
1569169432518:plot.margin = margin(4,8,4,4,"mm"),
1569169432519:strip.background = element_blank(),
1569169432521:strip.text = element_text(face = "bold"),
1569169432523:text          = element_text(color = text_color)
1569169432525:)
1569169432525:)
1569169448986:data_to_plot
1569169461283:data_to_plot$char
1569169464582:data_to_plot$chr
1569169475412:data_to_plot$chr
1569169480192:data_to_plot <- snp_index_table %>%
1569169480193:filter(chr == "chr 1" | chr == "chr") %>%
1569169480193:mutate(chr = factor(chr, levels = unique(snp_index_table$chr)))
1569169481135:data_to_plot$chr
1569169498992:unique(data_to_plot$chr)
1569169558679:(snp_index_table  <- read_tsv(paste0("scripts/",ouput_file), col_names = TRUE))
1569169566143:roundUp <- function(x) 10^ceiling(log10(x))
1569169566144:# Plot --------------------------------------------------------------------
1569169566145:# Plot configuration variables and options
1569169566145:# options(scipen=10) # Avoid scientific notation on tick labels
1569169566145:x_breaks    <- round(seq(0, 6e+7, by = 1e+7), digits = 0)
1569169566146:chr_palette <- c("#ffffff", "#E5E0CA")
1569169566146:base_text_size <- 14
1569169566147:box_color      <- "#E5E0CA"
1569169566147:mean_color     <- "orange"
1569169566148:points_color   <- "darkolivegreen"
1569169566149:text_color     <- "#333333"
1569169566152:data_to_plot <- snp_index_table %>%
1569169566152:filter(chr == "chr 1" | chr == "chr") %>%
1569169566153:mutate(chr = factor(chr, levels = unique(snp_index_table$chr)))
1569169566159:unique(data_to_plot$chr)
1569169566161:max(data_to_plot$mean_snp_index)
1569169571196:unique(data_to_plot$chr)
1569169577839:data_to_plot <- snp_index_table %>%
1569169577840:filter(chr == "chr 1" | chr == "chr 2") %>%
1569169577840:mutate(chr = factor(chr, levels = unique(snp_index_table$chr)))
1569169579388:unique(data_to_plot$chr)
1569169581317:max(data_to_plot$mean_snp_index)
1569169583131:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569169583132:# geom_point(size = 1)#, color = "darkred")
1569169583132:geom_step(color = "darkred", size = 0.6) +
1569169583133:# scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569169583133:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569169583134:# breaks = x_breaks, labels = x_breaks/1e+6) +
1569169583134:labs(
1569169583135:title    = "SNP-index plot",
1569169583135:subtitle = "MUT All (SNP-index >= 0.5)",
1569169583136:x        = "Chr position (Mb)",
1569169583136:y        = "SNP index"
1569169583137:)
1569169583137:+ facet_wrap(vars(chr), ncol = 3,  scales = "free_x")
1569169583138:+ theme_bw(base_size = base_text_size)
1569169583138:+ theme(
1569169583139:axis.text     = element_text(size = base_text_size * 0.9),
1569169583140:axis.ticks = element_line(size = 0.3),
1569169583140:axis.title    = element_text(size = base_text_size),
1569169583144:# axis.title.x  = element_blank(),
1569169583145:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569169583146:# panel.grid    = element_blank(),
1569169583150:# panel.grid.major.x = element_blank(),
1569169583151:panel.grid.minor = element_blank(),
1569169583151:panel.spacing = unit(4, units = "mm"),
1569169583152:plot.subtitle = element_text(hjust = 0.5),
1569169583153:plot.title    = element_text(face = "bold", hjust = 0.5),
1569169583155:plot.margin = margin(4,8,4,4,"mm"),
1569169583155:strip.background = element_blank(),
1569169583156:strip.text = element_text(face = "bold"),
1569169583157:text          = element_text(color = text_color)
1569169583157:)
1569169583158:)
1569169618579:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569169618580:# geom_point(size = 1)#, color = "darkred")
1569169618581:geom_step(color = "darkred", size = 0.6) +
1569169618582:# scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569169618583:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569169618583:# breaks = x_breaks, labels = x_breaks/1e+6) +
1569169618584:labs(
1569169618585:title    = "SNP-index plot",
1569169618585:subtitle = "MUT All (SNP-index >= 0.5)",
1569169618586:x        = "Chr position (Mb)",
1569169618595:y        = "SNP index"
1569169618596:)
1569169618597:+ facet_wrap(vars(chr), ncol = 1,  scales = "free_x")
1569169618597:+ theme_bw(base_size = base_text_size)
1569169618598:+ theme(
1569169618598:axis.text     = element_text(size = base_text_size * 0.9),
1569169618599:axis.ticks = element_line(size = 0.3),
1569169618600:axis.title    = element_text(size = base_text_size),
1569169618600:# axis.title.x  = element_blank(),
1569169618601:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569169618609:# panel.grid    = element_blank(),
1569169618610:# panel.grid.major.x = element_blank(),
1569169618616:panel.grid.minor = element_blank(),
1569169618617:panel.spacing = unit(4, units = "mm"),
1569169618618:plot.subtitle = element_text(hjust = 0.5),
1569169618618:plot.title    = element_text(face = "bold", hjust = 0.5),
1569169618619:plot.margin = margin(4,8,4,4,"mm"),
1569169618620:strip.background = element_blank(),
1569169618621:strip.text = element_text(face = "bold"),
1569169618621:text          = element_text(color = text_color)
1569169618622:)
1569169618623:)
1569170167590:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569170167591:# geom_point(size = 1)#, color = "darkred")
1569170167592:geom_step(color = "darkred", size = 0.6) +
1569170167592:scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569170167593:scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569170167595:breaks = x_breaks, labels = x_breaks/1e+6) +
1569170167596:labs(
1569170167597:title    = "SNP-index plot",
1569170167598:subtitle = paste("SNP-index >=", fvar_thresold),
1569170167598:x        = "Chr position (Mb)",
1569170167599:y        = "SNP index"
1569170167599:)
1569170167600:+ facet_wrap(vars(chr), ncol = 1,  scales = "free_x")
1569170167600:+ theme_bw(base_size = base_text_size)
1569170167601:+ theme(
1569170167601:axis.text     = element_text(size = base_text_size * 0.9),
1569170167602:axis.ticks = element_line(size = 0.3),
1569170167603:axis.title    = element_text(size = base_text_size),
1569170167603:# axis.title.x  = element_blank(),
1569170167604:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569170167604:# panel.grid    = element_blank(),
1569170167605:# panel.grid.major.x = element_blank(),
1569170167606:panel.grid.minor = element_blank(),
1569170167606:panel.spacing = unit(4, units = "mm"),
1569170167607:plot.subtitle = element_text(hjust = 0.5),
1569170167607:plot.title    = element_text(face = "bold", hjust = 0.5),
1569170167608:plot.margin = margin(4,8,4,4,"mm"),
1569170167609:strip.background = element_blank(),
1569170167609:strip.text = element_text(face = "bold"),
1569170167610:text          = element_text(color = text_color)
1569170167611:)
1569170167611:)
1569170209594:# data_to_plot <- snp_index_table %>%
1569170209594:#   filter(chr == "chr 1" | chr == "chr 2") %>%
1569170209595:#   mutate(chr = factor(chr, levels = unique(snp_index_table$chr)))
1569170209595:# unique(data_to_plot$chr)
1569170209596:max(data_to_plot$mean_snp_index)
1569170217786:# Plot --------------------------------------------------------------------
1569170217786:# Plot configuration variables and options
1569170217786:# options(scipen=10) # Avoid scientific notation on tick labels
1569170217787:x_breaks    <- round(seq(0, 6e+7, by = 1e+7), digits = 0)
1569170218809:x_breaks
1569170230212:max(x_breaks)
1569170243361:x_breaks/1e+6
1569170255197:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569170255198:# geom_point(size = 1)#, color = "darkred")
1569170255199:geom_step(color = "darkred", size = 0.6) +
1569170255200:scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569170255201:scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569170255204:breaks = x_breaks, labels = x_breaks/1e+6) +
1569170255205:labs(
1569170255205:title    = "SNP-index plot",
1569170255206:subtitle = paste("SNP-index >=", fvar_thresold),
1569170255206:x        = "Chr position (Mb)",
1569170255207:y        = "SNP index"
1569170255207:)
1569170255208:+ facet_wrap(vars(chr), ncol = 1,  scales = "free_x")
1569170255208:+ theme_bw(base_size = base_text_size)
1569170255209:+ theme(
1569170255209:axis.text     = element_text(size = base_text_size * 0.9),
1569170255210:axis.ticks = element_line(size = 0.3),
1569170255211:axis.title    = element_text(size = base_text_size),
1569170255211:# axis.title.x  = element_blank(),
1569170255212:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569170255212:# panel.grid    = element_blank(),
1569170255213:# panel.grid.major.x = element_blank(),
1569170255214:panel.grid.minor = element_blank(),
1569170255214:panel.spacing = unit(4, units = "mm"),
1569170255215:plot.subtitle = element_text(hjust = 0.5),
1569170255218:plot.title    = element_text(face = "bold", hjust = 0.5),
1569170255220:plot.margin = margin(4,8,4,4,"mm"),
1569170255222:strip.background = element_blank(),
1569170255223:strip.text = element_text(face = "bold"),
1569170255224:text          = element_text(color = text_color)
1569170255225:)
1569170255226:)
1569170291257:max(data_to_plot$pos)
1569170327817:roundUp(max(data_to_plot$pos))
1569170367215:roundUp(max(data_to_plot$pos))
1569170367702:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569170367703:# geom_point(size = 1)#, color = "darkred")
1569170367703:geom_step(color = "darkred", size = 0.6) +
1569170367704:scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569170367704:# scale_x_continuous(expand = c(0,0), limits = c(0, max(x_breaks)),
1569170367705:#                      breaks = x_breaks, labels = x_breaks/1e+6) +
1569170367706:labs(
1569170367706:title    = "SNP-index plot",
1569170367707:subtitle = paste("SNP-index >=", fvar_thresold),
1569170367730:x        = "Chr position (Mb)",
1569170367731:y        = "SNP index"
1569170367731:)
1569170367732:+ facet_wrap(vars(chr), ncol = 1,  scales = "free_x")
1569170367734:+ theme_bw(base_size = base_text_size)
1569170367735:+ theme(
1569170367736:axis.text     = element_text(size = base_text_size * 0.9),
1569170367740:axis.ticks = element_line(size = 0.3),
1569170367740:axis.title    = element_text(size = base_text_size),
1569170367741:# axis.title.x  = element_blank(),
1569170367742:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569170367742:# panel.grid    = element_blank(),
1569170367743:# panel.grid.major.x = element_blank(),
1569170367744:panel.grid.minor = element_blank(),
1569170367747:panel.spacing = unit(4, units = "mm"),
1569170367747:plot.subtitle = element_text(hjust = 0.5),
1569170367748:plot.title    = element_text(face = "bold", hjust = 0.5),
1569170367749:plot.margin = margin(4,8,4,4,"mm"),
1569170367758:strip.background = element_blank(),
1569170367759:strip.text = element_text(face = "bold"),
1569170367760:text          = element_text(color = text_color)
1569170367761:)
1569170367763:)
1569170468138:(snp_index_plot <- ggplot(data_to_plot, aes(x = pos, y = mean_snp_index)) +
1569170468139:# geom_point(size = 1)#, color = "darkred")
1569170468140:geom_step(color = "darkred", size = 0.6) +
1569170468140:scale_y_continuous(expand = c(0,0), limits = c(0, 1.0)) +
1569170468141:scale_x_continuous(expand = c(0,0)) + #, limits = c(0, max(x_breaks)),
1569170468141:#                      breaks = x_breaks, labels = x_breaks/1e+6) +
1569170468142:labs(
1569170468142:title    = "SNP-index plot",
1569170468143:subtitle = paste("SNP-index >=", fvar_thresold),
1569170468143:x        = "Chr position (Mb)",
1569170468144:y        = "SNP index"
1569170468145:)
1569170468145:+ facet_wrap(vars(chr), ncol = 1,  scales = "free_x")
1569170468146:+ theme_bw(base_size = base_text_size)
1569170468146:+ theme(
1569170468147:axis.text     = element_text(size = base_text_size * 0.9),
1569170468149:axis.ticks = element_line(size = 0.3),
1569170468173:axis.title    = element_text(size = base_text_size),
1569170468173:# axis.title.x  = element_blank(),
1569170468174:axis.title.y  = element_text(margin = margin(0,12,0,0)),
1569170468175:# panel.grid    = element_blank(),
1569170468175:# panel.grid.major.x = element_blank(),
1569170468176:panel.grid.minor = element_blank(),
1569170468177:panel.spacing = unit(4, units = "mm"),
1569170468178:plot.subtitle = element_text(hjust = 0.5),
1569170468178:plot.title    = element_text(face = "bold", hjust = 0.5),
1569170468179:plot.margin = margin(4,8,4,4,"mm"),
1569170468180:strip.background = element_blank(),
1569170468197:strip.text = element_text(face = "bold"),
1569170468198:text          = element_text(color = text_color)
1569170468198:)
1569170468199:)
1569170709110:table_out_filename <- paste0(out_prefix, "_table.tsv")
1569170709687:plot_out_filename  <- paste0(out_prefix, "_plot.pdf")
1569174972759:fname <- "Rplots.pdf"
1569174973562:if(!file.exists(fname)){
1569174973563:file.remove(fname)
1569174973563:}
1569175061289:fname <- file.path(getwd(), "Rplots.pdf")
1569175062073:if(!file.exists(fname)){
1569175062074:file.remove(fname)
1569175062074:}
1569175309241:file.path(out_prefix, ".table.tsv")
1569175321977:table_out_filename <- file.path("my_prefix", ".table.tsv")
1569175324173:table_out_filename
1569202197183:#!/usr/bin/env Rscript
1569202197216:# ##############################################################################
1569202197216:#  Author:   Hector Fabio Espitia-Navarro
1569202197217:#            Georgia Institute of Technology
1569202197217:#  Version:  1.0
1569202197218:#  Date:     11/22/2019
1569202197219:# ##############################################################################
1569202197220:# # Install packages
1569202197220:# install.packages(c("sitools", "tidyverse", "foreach", "doParallel"), dependencies = TRUE,
1569202197221:#                  repos="http://cran.rstudio.com/", lib = Sys.getenv("R_LIBS_USER"))
1569202197222:# Load packages -----------------------------------------------------------
1569202197222:require(argparser)
1569202197297:# require(grid)
1569202197298:# Command line arguments processing ---------------------------------------
1569202197299:# Get script name
1569202197299:initial.options <- commandArgs(trailingOnly = FALSE)
1569202197300:script.name     <- basename(sub("--file=", "", initial.options[grep("--file=", initial.options)]))
1569202197301:# Process command line arguments
1569202197303:# Create a parser
1569202197304:p <- arg_parser("This script calcualtes the SNP-index regression according to the method described on Abe et al., Nature Biotechnologyvolume 30, pages174–178 (2012).  The packages 'tidyverse', 'fooreach', and 'doParallel' are required.", name = script.name)
1569202197407:# Add Positional arguments (required)
1569202197407:p <- add_argument(p, "VARIANTS_FILE", help = "Pileup file. Comma separated text file with 9 columns: chromosome, position, reference base, A, C, G, T, coverage, and alternative allelic frequency.  This format is the result of filtering a SAMtools pileup file using the script 'pileup_parser.pl' available as the Galaxy plugin Filter pileup (version 1.0.2)  (https://github.com/galaxyproject/tools-devteam/tree/master/tools/pileup_parser)")
1569202197409:p <- add_argument(p, "CHAR_LENGTHS_FILE", help = "Chromosome lengths file. Comma separated text file with 2 columns: chromosome, and lenght in base pairs.")
1569202197411:# Add options
1569202197412:p <- add_argument(p, "--fvar_thresold", help = "Minimum alternative allele frequency accepted.",
1569202197412:default = 0.3)
1569202197414:p <- add_argument(p, "--window_size", help = "Window size in SNPs for calculating the average SNP-index.",
1569202197415:default = 5)
1569202197417:p <- add_argument(p, "--increment", help = "Size of the increment in SNPs for sliding the window.",
1569202197417:default = 0.3)
1569202197419:p <- add_argument(p, "--cores", help = "Number of cores for performing the computation.",
1569202197419:default = 1)
1569202197421:p <- add_argument(p, "--out_prefix", help = "Output prefix filename.", default = "snp_index")
1569202197423:# Initialization of variables ---------------------------------------------
1569202197424:# Values to test the script using RStudio
1569202197424:script.home       <- "/home/hspitia/Dropbox (GaTech)/data/bsa"
1569202197425:variants_file     <- paste(script.home, "data/03_separated_population/P2S1_10.complete.pileup.csv.gz", sep = "/")
1569202197426:# variants_file     <- paste(script.home, "data/03_separated_population/WT.P2S1.complete.pileup.csv.gz", sep = "/")
1569202197426:# variants_file     <- paste(script.home, "data/02_WT_MUT_ALL/MUT.ALL.complete.pileup.csv.gz", sep = "/")
1569202197427:chr_lengths_file  <- paste(script.home, "data/S_italica_genome/Sitalica_312_v2.9_scaffolds.lengths.tsv", sep = "/")
1569202197428:fvar_thresold     <- 0.3
1569202197429:window_size       <- 5 # in SNPs
1569202197429:increment         <- 1 # in SNPs
1569202197430:cores             <- 1
1569202197431:out_prefix      <- "snp_index"
1569202197433:# Parse command line arguments --------------------------------------------
1569202197433:command.line = FALSE  # Turn to FALSE to test the script inside RStudio
1569202197435:argv <- list()
1569202208988:argv <- parse_args(p, list(inputFile,
1569202208988:"--variants_file", variants_file,
1569202208989:"--chr_lengths_file", chr_lengths_file,
1569202208989:"--fvar_thresold", fvar_thresold,
1569202208990:"--window_size", window_size,
1569202208990:"--increment", increment,
1569202208991:"--cores", 1,
1569202208992:"--out_prefix", out_prefix
1569202208993:)
1569202208993:)
1569202248871:argv <- parse_args(p, list(variants_file, chr_lengths_file,
1569202248871:"--fvar_thresold", fvar_thresold,
1569202248872:"--window_size", window_size,
1569202248872:"--increment", increment,
1569202248873:"--cores", 1,
1569202248873:"--out_prefix", out_prefix
1569202248874:)
1569202248875:)
1569202260041:# Get argument values from the command line
1569202260042:variants_file    <- argv$VARIANTS_FILE
1569202260043:chr_lengths_file <- argv$CHAR_LENGTHS_FILE
1569202260044:fvar_thresold    <- argv$fvar_thresold
1569202260044:window_size      <- argv$window_size
1569202260045:increment        <- argv$increment
1569202260046:cores            <- argv$cores
1569202260046:out_prefix       <- argv$out_prefix
1569202264009:# Function to check if file exists ----------------------------------------
1569202264010:CheckFileExists <- function(file.list) {
1569202264010:non.exist.files <- !file.exists(file.list)
1569202264011:if(any(non.exist.files)) {
1569202264011:sprintf("\n  The file \"%s\" does not exist.", file.list[non.exist.files])
1569202264012:}
1569202264012:}
1569202265209:# Check for input files ---------------------------------------------------
1569202265210:files.to.check <- c(variants_file, chr_lengths_file)
1569202266517:error.message  <- CheckFileExists(files.to.check)
1569202271049:error.message
1569202279522:cat("Loading packages\n")
1569202279524:# Load packages
1569202279525:require(tidyverse)
1569202281619:require(foreach)
1569202281676:require(doParallel)
1569202281749:# require(sitools)
1569202281749:cat("Packages loaded!\n\n")
1569202281750:options(stringsAsFactors = F)
1569202281750:registerDoParallel(cores)
1569202281752:# FUNCTIONS:
1569202281753:# Function to dark a list of colors ---------------------------------------
1569202281753:darkColors <- function(palette, level){
1569202281753:rgbColors <- as.data.frame(t(as.data.frame(lapply(as.data.frame(t(col2rgb(palette))),
1569202281754:function(x) { round(x * level)}))))
1569202281754:unname(sapply(rgbColors, function(x){ rgb(x[1], x[2], x[3], maxColorValue=255) }))
1569202281754:}
1569202281755:# General variables
1569202281756:var_column_names <- c("chr", "pos", "ref", "A", "C", "G", "T", "cov", "fvar")
1569202281756:table_out_filename <- paste0(out_prefix, ".table.tsv")
1569202281757:plot_out_filename  <- paste0(out_prefix, ".plot.pdf")
1569202314414:wt_variants_file  <- paste(script.home, "data/03_separated_population/WT.P2S1.complete.pileup.csv.gz", sep = "/")
1569202329140:(wt_variants         <- read_csv(wt_variants_file, col_names = var_column_names))
1570716768273:shiny::runApp('shiny_app/gene_detector')
1570716830304:install.packages("DT")
1570716863219:runApp('shiny_app/gene_detector')
1570717504434:blastFile         <- "data/genes_vs_genomes.blast"
1570717504435:resultsFile       <- "data/detector.tsv"
1570717504436:identity          <- 100
1570717504437:qCoverage         <- 100
1570717504438:detectorThreshold <- 100
1570717504439:genesRefFile      <- "data/tags_ids_xRef.tsv"
1570717504440:genomesRefFile    <- "data/genomesTableRef.tsv"
1570717509709:library(shiny)
1570717509710:library(ggpubr)
1570717509711:library(gridExtra)
1570717509712:library(tidyverse)
1570717509713:library(caret)
1570717509714:library(DT)
1570717531937:inBlastData    <- read_tsv(blastFile)
1570717535953:# Testing from rstudio
1570717535953:blastFile         <- "shiny_app/gene_detector/data/genes_vs_genomes.blast"
1570717536147:resultsFile       <- "shiny_app/gene_detector/data/detector.tsv"
1570717536353:identity          <- 100
1570717536541:qCoverage         <- 100
1570717536734:detectorThreshold <- 100
1570717536926:genesRefFile      <- "shiny_app/gene_detector/data/tags_ids_xRef.tsv"
1570717537289:genomesRefFile    <- "shiny_app/gene_detector/data/genomesTableRef.tsv"
1570717538811:inBlastData    <- read_tsv(blastFile)
1570717539662:inResultsData  <- read_tsv(resultsFile)
1570717540314:inGenesRef     <- read_tsv(genesRefFile, col_names = c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism
1570717540314:"))
1570717541453:inGenomesRef   <- read_tsv(genomesRefFile)
1570717542139:# genesFullRef <- read_tsv(genesFullRefFile, col_names = c("GeneTag", "CARD_description"))
1570717542140:dataSets       <- sort(unique(inGenesRef$Dataset))
1570717542476:geneTypes      <- c(sort(unique(inGenesRef$Type)),"All")
1570717542682:outPlot        <- NULL
1570717542900:# Theme definition --------------------------------------------------------
1570717542901:width            <- 7
1570717543541:height           <- width * 0.618
1570717543719:lineSize         <- 0.5
1570717543964:annotLinetype    <- "solid"
1570717544083:axisColor        <- "#666666"
1570717544260:gridColor        <- "#cccccc"
1570717544422:baseTextSize     <- 18
1570717544631:barAnnotTextSize <- 4
1570717544767:barWidth         <- 0.75
1570717544963:baseFontFamily   <- "Arial"
1570717545145:baseFontFamily   <- "HelveticaNeueLT Com 45 Lt"
1570717545310:baseFontFamily   <- "HelveticaNeueLT Std Lt"
1570717545511:publicationTheme <- list(
1570717545512:# theme_pubr() +
1570717545512:theme(
1570717545512:axis.line    = element_blank(),
1570717545513:axis.text    = element_text(size = baseTextSize * 0.875,
1570717545513:# family = baseFontFamily,
1570717545513:color = "black"),
1570717545514:axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),
1570717545514:# axis.ticks   = element_blank(),
1570717545514:axis.title   = element_text(size = baseTextSize),
1570717545515:# legend.direction  = "horizontal",
1570717545515:# legend.key.height = unit(4, "mm"),
1570717545516:# legend.key.width  = unit(4*1.618, "mm"),
1570717545516:# panel.grid.major  = element_blank(),
1570717545516:# panel.grid.major.x = element_line(colour = gridColor,
1570717545517:# size = lineSize),
1570717545517:# plot.margin = margin(8, 20, 24, 8, "mm"),
1570717545517:# plot.margin = margin(4, 4, 4, 4, "mm"),
1570717545518:text = element_text(size = baseTextSize
1570717545518:# , family = baseFontFamily
1570717545519:)
1570717545519:)
1570717545519:)
1570717547213:library(scales)
1570717547875:# colfunc <- colorRampPalette(c("#ffffff", "#4191C5"))
1570717547876:# colfunc <- colorRampPalette(c("#ffffff", "#FFB238"))
1570717547876:# colfunc <- colorRampPalette(c("#ffffff", "#91bbe4"))
1570717547876:# colfunc <- colorRampPalette(c("#ffffff", "#0a4f75"))
1570717547877:# colfunc <- colorRampPalette(c("#ffffff", "#366f8e"))
1570717547877:# colfunc <- colorRampPalette(c("#ffffff", "#4c7f9a"))
1570717547877:colfunc <- colorRampPalette(c("#ffffff", "#3e8db7"))
1570717548052:show_col(colfunc(5))
1570717549798:# App logic ---------------------------------------------------------------
1570717549798:# Define server logic required to draw a histogram
1570717549798:shinyServer(function(input, output) {
1570717549799:values <- reactiveValues()
1570717549800:# Function to generate the presence table ---------------------------------
1570717549800:generatePresenceTable <- function(identity, qCoverage, detectorThreshold, datasetName, geneType, depth, filterBlastPresentGenes){
1570717549800:if(debugging) {
1570717549801:datasetName       <- "vfdb"
1570717549801:geneType          <- "Associated"
1570717549802:identity          <- 100
1570717549802:qCoverage         <- 100
1570717549803:gCov              <- 100
1570717549803:detectorThreshold <- 100
1570717549804:depth             <- 20
1570717549804:filterBlastPresentGenes <- TRUE
1570717549804:}
1570717549805:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570717549806:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570717549806:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570717549806:if (filterBlastPresentGenes) {
1570717549807:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570717549807:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570717549808:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570717549809:}
1570717549810:# print(paste("Present genes:", nrow(genesRef)))
1570717549810:values$totalGenes <- nrow(genesRef)
1570717549811:if (geneType != "All"){
1570717549812:genesRef <- genesRef %>% filter(Type == geneType)
1570717549812:}
1570717549813:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570717549814:genes       <- genesRef$GeneTag
1570717549814:# blastData   <- inBlastData %>% filter(dataset == datasetName, qseqid %in% genes)
1570717549814:blastData   <- blastData %>% filter(qseqid %in% genes)
1570717549815:resultsData <- inResultsData %>% filter(Dataset == datasetName, GeneTag %in% genes)
1570717549816:genomesRef  <- inGenomesRef
1570717549817:nGenes       <- nrow(genesRef)
1570717549817:totalGenomes <- nrow(inGenomesRef)
1570717549818:values$nGenes   <- nGenes
1570717549818:values$nGenomes <- totalGenomes
1570717549819:if (length(genesRef$GeneTag) == 0)
1570717549820:return(NULL)
1570717549821:(genomes <- blastData %>%
1570717549822:select(GeneTag = sseqid) %>%
1570717549822:unique() %>% pull())
1570717549824:(blastFilteredResults <- blastData %>%
1570717549825:# filter(qseqid %in% genes) %>%
1570717549825:mutate(BlastPresence = if_else(pident >= identity & qcovhsp >= qCoverage, 1L, 0L)) %>%
1570717549826:filter(BlastPresence == 1L)
1570717549827:)
1570717549828:# Create blank  matrices for presence/absence of genes in 71 genomes
1570717549829:(blastPresence <- matrix(0L, nrow = nGenes,
1570717549830:ncol = totalGenomes,
1570717549831:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570717549833:nGenesInBlast <- nrow(blastFilteredResults)
1570717549834:if (nGenesInBlast > 0) {
1570717549835:# Fill BLAST presence matrix with present genes
1570717549835:for (row in 1:nGenesInBlast) {
1570717549837:gene   <- blastFilteredResults$qseqid[row]
1570717549838:genome <- blastFilteredResults$sseqid[row]
1570717549838:blastPresence[gene, genome] = 1
1570717549839:}
1570717549840:}
1570717549841:blastPresenceTable <- as_tibble(blastPresence)
1570717549842:blastPresenceTable <- as_tibble(cbind.data.frame(data.frame(GeneTag = genes),
1570717549843:blastPresenceTable))
1570717549845:# Detector Tables presence/absence (whole DB) genes x genomes
1570717549846:# Fill detector presence matrix  with present genes
1570717549847:(detectorPresenceTable <- matrix(0L, nrow = nGenes,
1570717549848:ncol = totalGenomes,
1570717549849:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570717549851:(detectorResults <- resultsData %>%
1570717549852:filter(SeqDepth == depth) %>%
1570717549853:drop_na()
1570717549854:)
1570717549855:nGenesInResults <- nrow(detectorResults)
1570717549856:if (nGenesInResults > 0) {
1570717549857:for (row in 1:nrow(detectorResults)) {
1570717549859:gene    <- detectorResults$GeneTag[row]
1570717549860:genome  <- detectorResults$Accn[row]
1570717549861:geneCov <- detectorResults$GeneCov[row]
1570717549864:if (geneCov >= detectorThreshold){
1570717549865:detectorPresenceTable[gene, genome] = 1
1570717549866:}
1570717549867:}
1570717549868:}
1570717549871:(detectorPresenceTable %<>%
1570717549872:as_tibble() %>%
1570717549873:mutate(GeneTag = rownames(detectorPresenceTable)) %>%
1570717549874:select(GeneTag, everything()) %>%
1570717549875:gather(Accn, DetectorPresence, -GeneTag) %>%
1570717549877:mutate(SeqDepth = depth)
1570717549878:)
1570717549880:# Combined results table
1570717549882:(presenceTable <- left_join(
1570717549883:by = c("GeneTag", "Accn", "SeqDepth"),
1570717549884:blastPresenceTable %>%
1570717549885:gather(Accn, BlastPresence, -GeneTag) %>%
1570717549887:mutate(SeqDepth = depth,
1570717549888:GeneTag = as.character(GeneTag)),
1570717549890:detectorPresenceTable) %>%
1570717549891:select(-SeqDepth, everything())
1570717549892:)
1570717549893:}
1570717549896:# Function to generate a confusion matrix plot ----------------------------
1570717549897:confusionMatrixPlot <- function(confMatrix,
1570717549899:title = NULL,
1570717549900:subtitle = NULL,
1570717549902:legend = TRUE,
1570717549903:yaxis = TRUE) {
1570717549904:pmargin <- unit(c(4,4,4,4), "mm")
1570717549906:dataSet <- as.data.frame(as.table(confMatrix))
1570717549908:# Calculate Normalized Frequencies
1570717549910:dataSet$NormFreq = 0.0
1570717549912:for (row in 1:nrow(dataSet)) {
1570717549913:class = dataSet$Reference[row]
1570717549915:sum = dataSet %>%
1570717549916:filter(Reference == class) %>%
1570717549918:select(Freq) %>% sum()
1570717549919:dataSet$NormFreq[row] = dataSet$Freq[row]/sum
1570717549921:}
1570717549924:dataSet <- mutate(dataSet,
1570717549925:Reference = factor(Reference, levels = rev(levels(dataSet$Reference))))
1570717549928:matPlot <- ggplot(dataSet,
1570717549929:aes(x = Reference, y = Prediction, fill = NormFreq)) +
1570717549931:geom_tile(aes(fill = NormFreq), size = lineSize, color = "black") +
1570717549933:# geom_text(aes(label = format(Freq, big.mark = ",")),
1570717549934:geom_text(aes(label = Freq),
1570717549936:size = baseTextSize * 0.4,
1570717549938:hjust = 0.5
1570717549939:# ,family = baseFontFamily
1570717549941:) +
1570717549942:scale_x_discrete(expand = c(0,0), position = "top") +
1570717549944:scale_y_discrete(expand = c(0,0)) +
1570717549945:scale_fill_gradientn(name = "Norm. Freq.",
1570717549947:colors = colfunc(5),
1570717549949:# #FFB238
1570717549950:# breaks = seq(0,100,25),
1570717549952:# limits = c(0,100),
1570717549953:breaks = seq(0,1,0.25),
1570717549955:limits = c(0.0,1.0)
1570717549956:) +
1570717549958:publicationTheme +
1570717549960:theme(
1570717549961:axis.title.x = element_text(margin = margin(10, 1, 10, 1, "mm")),
1570717549963:axis.ticks = element_blank(),
1570717549964:# legend.direction = "vertical",
1570717549966:# legend.position  = "right",
1570717549968:# legend.title = element_text(size = baseTextSize * 0.75),
1570717549969:panel.border = element_rect(colour = "black", fill = NA, size = lineSize * 2),
1570717549971:plot.title = element_text(hjust = 0.5),
1570717549973:plot.subtitle = element_text(hjust = 0.5, margin = margin(1,1,10,1, "mm"))
1570717549974:) +
1570717549976:labs(x = "Observed\n")
1570717549980:if(legend) {
1570717549981:matPlot <- matPlot +
1570717549983:theme(
1570717549985:legend.direction = "vertical",
1570717549987:legend.position  = "right",
1570717549988:legend.title = element_text(size = baseTextSize * 0.75)
1570717549991:) +
1570717549993:guides(fill = guide_colorbar(
1570717549994:# draw.ulim = FALSE, draw.llim = FALSE,
1570717549996:barwidth = 1,
1570717549998:frame.colour = "black",
1570717550000:frame.linewidth = 1.5,
1570717550001:ticks.colour = "black",
1570717550003:ticks.linewidth = 1))
1570717550005:} else {
1570717550007:matPlot <- matPlot + guides(fill = "none")
1570717550009:pmargin <- unit(c(0,0,0,37), "mm")
1570717550010:}
1570717550014:if(!is.null(title)){
1570717550016:matPlot <- matPlot +
1570717550037:labs( title = title)
1570717550039:}
1570717550042:if(!is.null(subtitle)){
1570717550056:matPlot <- matPlot +
1570717550058:labs(subtitle = subtitle)
1570717550060:}
1570717550063:if(yaxis){
1570717550077:matPlot <- matPlot +
1570717550079:labs(y = "Predicted")
1570717550081:} else {
1570717550083:matPlot <- matPlot +
1570717550085:theme(
1570717550086:axis.text.y  = element_blank(),
1570717550100:axis.ticks.y = element_blank(),
1570717550102:axis.title.y = element_blank()
1570717550104:)
1570717550106:pmargin <- unit(c(0,0,0,-35), "mm")
1570717550107:}
1570717550111:details <- data.frame(Value = format(round(c(confMatrix$byClass[c(1,2,5)],
1570717550113:confMatrix$overall[1]),
1570717550115:3),
1570717550118:nsmall = 3))
1570717550120:details <- details %>%
1570717550122:mutate(Parameter = paste0(rownames(details), ":")) %>%
1570717550124:select(Parameter, Value)
1570717550128:tbody.style = tbody_style(color = "black",
1570717550130:# fill = c("#e8f3de", "#d3e8bb"),
1570717550133:fill = c("#ffffff", "#ffffff"),
1570717550135:# linewidth = 1, linecolor = "black",
1570717550137:linewidth = 1, linecolor = "white",
1570717550139:size = 16,
1570717550141:hjust=1, x=0.9)
1570717550143:tablePlot <- as_ggplot(tableGrob(details, theme = ttheme_minimal(
1570717550147:# base_family = baseFontFamily,
1570717550150:base_size = 14),
1570717550153:rows = NULL, cols = NULL))
1570717550155:totalPlot <- ggarrange(matPlot + theme(plot.margin = unit(c(4,4,4,4), "mm")),
1570717550157:tablePlot + theme(plot.margin = pmargin),
1570717550159:ncol = 1, nrow = 2,
1570717550166:widths = c(1, 0.6),
1570717550183:heights = c(1, 0.6)
1570717550185:# align = "h",
1570717550187:# common.legend = TRUE, legend = c("bottom")
1570717550189:)
1570717550194:totalPlot
1570717550197:}
1570717550201:# # Function to get the confusion matrix from a presence table --------------
1570717550203:# getConfusionMatrix <- function(presenceTable, depth){
1570717550205:#   nLevels <- length(levels(factor(c(presenceTable$BlastPresence, presenceTable$DetectorPresence))))
1570717550207:#   confMat <- NULL
1570717550209:#   if (nLevels > 1) {
1570717550211:#     confMat <- confusionMatrix(data = factor(presenceTable %>%
1570717550213:#                                                mutate(DetectorPresence = if_else(DetectorPresence == 0, "Absent", "Present")) %>%
1570717550214:#                                                filter(SeqDepth == depth) %>%
1570717550216:#                                                pull(DetectorPresence)),
1570717550218:#                                reference = factor(presenceTable %>%
1570717550219:#                                                     mutate(BlastPresence = if_else(BlastPresence == 0, "Absent", "Present")) %>%
1570717550221:#                                                     filter(SeqDepth == depth) %>%
1570717550223:#                                                     pull(BlastPresence)),
1570717550224:#                                positive = "Present")
1570717550226:#   }
1570717550227:#   confMat
1570717550229:# }
1570717550232:# Function to get the confusion matrix from a presence table --------------
1570717550234:getConfusionMatrix <- function(presenceTable){
1570717550235:nLevels <- length(levels(factor(c(presenceTable$BlastPresence, presenceTable$DetectorPresence))))
1570717550237:confMat <- NULL
1570717550239:if (nLevels > 1) {
1570717550240:confMat <- confusionMatrix(data = factor(presenceTable %>%
1570717550242:mutate(DetectorPresence = if_else(DetectorPresence == 0, "Absent", "Present")) %>%
1570717550245:# filter(SeqDepth == depth) %>%
1570717550247:pull(DetectorPresence)),
1570717550250:reference = factor(presenceTable %>%
1570717550252:mutate(BlastPresence = if_else(BlastPresence == 0, "Absent", "Present")) %>%
1570717550254:# filter(SeqDepth == depth) %>%
1570717550257:pull(BlastPresence)),
1570717550259:positive = "Present")
1570717550262:}
1570717550264:confMat
1570717550266:}
1570717550274:# Render selector for dataset  -------------------------------------
1570717550276:output$datasetSelect <- renderUI({
1570717550279:selectInput("datasetSelect", "Dataset:",
1570717550281:dataSets,
1570717550284:# multiple = FALSE, #selectize = TRUE,
1570717550286:selected = dataSets[1])
1570717550289:})
1570717550295:# Render selector for type --------------------------------------
1570717550298:output$typeSelect <- renderUI({
1570717550307:selectInput("typeSelect", "Gene type:",
1570717550310:geneTypes,
1570717550313:# multiple = FALSE, #selectize = TRUE,
1570717550316:selected = geneTypes[1])
1570717550319:})
1570717550324:# Generate plot -----------------------------------------------------------
1570717550327:createPlot <- function(){
1570717550329:dSetName <- dataSets[1]
1570717550332:if (!is.null(input$datasetSelect))
1570717550347:dSetName <- input$datasetSelect
1570717550352:gType <- geneTypes[1]
1570717550355:if (!is.null(input$typeSelect))
1570717550369:gType <- input$typeSelect
1570717550374:if (debugging) {
1570717550377:dSetName <- "card"
1570717550379:gType <- "associated"
1570717550382:iden  <- 100
1570717550396:qCov  <- 100
1570717550399:gCov  <- 100
1570717550401:}
1570717550406:iden  <- input$iden
1570717550424:qCov  <- input$qcov
1570717550426:gCov  <- input$genecov
1570717550429:filterPresGenes <- input$filterNonPresentGenesCheck
1570717550431:presenceTable20 <- generatePresenceTable(identity = iden,
1570717550433:qCoverage = qCov,
1570717550448:detectorThreshold = gCov,
1570717550450:datasetName = dSetName,
1570717550452:geneType = gType,
1570717550454:depth = 20,
1570717550456:filterPresGenes)
1570717550458:# dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570717550460:presenceTable40 <- generatePresenceTable(identity = iden,
1570717550462:qCoverage = qCov,
1570717550464:detectorThreshold = gCov,
1570717550467:datasetName = dSetName,
1570717550469:geneType = gType,
1570717550472:depth = 40,
1570717550474:filterPresGenes)
1570717550482:# Failed predictions table
1570717550485:failedPred <- rbind(
1570717550487:presenceTable20 %>%
1570717550490:filter(BlastPresence == 0, DetectorPresence == 1) %>%
1570717550492:mutate(ErrorType = "FP"),
1570717550495:presenceTable40 %>%
1570717550497:filter(BlastPresence == 0, DetectorPresence == 1) %>%
1570717550500:mutate(ErrorType = "FP"),
1570717550502:presenceTable20 %>%
1570717550505:filter(BlastPresence == 1, DetectorPresence == 0) %>%
1570717550508:mutate(ErrorType = "FN"),
1570717550510:presenceTable40 %>%
1570717550513:filter(BlastPresence == 1, DetectorPresence == 0) %>%
1570717550515:mutate(ErrorType = "FN")
1570717550518:)
1570717550523:failedPred %<>%
1570717550526:left_join(inGenesRef, by = "GeneTag") %>%
1570717550528:left_join(inGenomesRef, by = "Accn") %>%
1570717550531:select(GeneTag, Accn,
1570717550534:# Obs = BlastPresence,
1570717550536:# Pred = DetectorPresence,
1570717550539:ErrorType,
1570717550541:Depth = SeqDepth,
1570717550544:GeneName, Organism)
1570717550549:values$failedPred <- failedPred
1570717550551:# print(head(failedPred))
1570717550554:# print(head(presenceTable20))
1570717550557:# print(head(presenceTable40))
1570717550562:if (is.null(presenceTable20) | is.null(presenceTable40))
1570717550564:return(NULL)
1570717550569:dataToPlot20 <- getConfusionMatrix(presenceTable20)
1570717550572:dataToPlot40 <- getConfusionMatrix(presenceTable40)
1570717550577:outPlot <- NULL
1570717550579:if ((!is.null(dataToPlot20)) && (!is.null(dataToPlot40))){
1570717550585:plot20  <- confusionMatrixPlot(dataToPlot20, legend = FALSE, title = "20x")
1570717550587:plot40  <- confusionMatrixPlot(dataToPlot40, yaxis = FALSE, title = "40x")
1570717550590:# outPlot <- getCompletePlot(plot20, plot40, str_glue("Confusion matrix - {toupper(dSetName)}"))
1570717550596:title <- str_glue("Confusion matrix - {toupper(dSetName)}")
1570717550598:(plotTitle <- text_grob(title, size = baseTextSize * 1.4
1570717550601:# , family = baseFontFamily
1570717550604:))
1570717550610:(totalConfMatrixPlot <- ggarrange(plot20 + theme(plot.margin = unit(c(8,0,4,4), "mm")),
1570717550612:plot40 + theme(plot.margin = unit(c(8,4,4,0), "mm")),
1570717550615:# labels = c("(A)", "(B)"),
1570717550618:# hjust = c(-5.6, -0.5),
1570717550621:# vjust = c(1.5),
1570717550623:ncol = 2, nrow = 1
1570717550626:# widths = c(1, 0.5),
1570717550629:# heights = c(1, 0.5)
1570717550632:# align = "h",
1570717550634:# common.legend = TRUE, legend = c("bottom")
1570717550637:))
1570717550643:# outPlot <- grid.arrange(totalConfMatrixPlot,
1570717550645:outPlot <- grid.arrange(plotTitle, totalConfMatrixPlot,
1570717550648:ncol = 1, heights = c(0.1, 1)
1570717550651:# , top = plotTitle)
1570717550654:)
1570717550657:}
1570717550660:outPlot
1570717550663:}
1570717550671:# Add data from BLAST and detector to the failed predictions --------------
1570717550674:addPredictionData <- function(failedPred, dset){
1570717550677:if (debugging) {
1570717550680:dset <- "card"
1570717550682:}
1570717550685:outTable <- failedPred
1570717550688:if(!is.null(failedPred) && !is.null(dset)){
1570717550691:# print("No es Null")
1570717550694:# print(dset)
1570717550706:blast <- inBlastData %>%
1570717550709:filter(dataset == dset) %>%
1570717550712:select(GeneTag = qseqid,
1570717550715:Accn = sseqid,
1570717550730:PIdent = pident,
1570717550733:QueryCov = qcovhsp
1570717550736:)
1570717550752:detector <- inResultsData %>%
1570717550756:filter(Dataset == dset) %>%
1570717550760:select(GeneTag, Accn,
1570717550763:DetectorCov = GeneCov,
1570717550791:Depth = SeqDepth)
1570717550794:outTable %<>%
1570717550813:left_join(blast, by = c("GeneTag", "Accn")) %>%
1570717550816:left_join(detector, by = c("GeneTag", "Accn", "Depth"))
1570717550819:} #else {
1570717550822:#   print("Es null")
1570717550837:# }
1570717550840:outTable
1570717550843:}
1570717550849:# Render table of failed predictions --------------------------------------
1570717550852:output$tblFailedPred = DT::renderDataTable({
1570717550855:# addPredictionData(values$failedPred, input$datasetSelect)
1570717550859:values$failedPred
1570717550862:},
1570717550865:extensions = 'Buttons', options = list(
1570717550868:dom = 'lBfrtip',
1570717550871:buttons = c('copy', 'csv', 'excel', 'pdf', 'print')
1570717550874:)
1570717550877:)
1570717550884:# Render selector of format to export ------------------------------------
1570717550887:output$exportExtensionSelect <- renderUI({
1570717550890:selectInput("exportExtensionSelect", "Format to save:",
1570717550893:c("PNG", "PDF", "SVG", "EPS", "JPG", "TIFF"), selected = "PDF")
1570717550896:})
1570717550903:# Save the plot as file ---------------------------------------------------
1570717550906:output$savePlot <- downloadHandler(
1570717550909:filename = function() {
1570717550913:gtype <- gsub(" ", "_", tolower(input$typeSelect))
1570717550916:fname <- paste("confuision_matrix", tolower(input$datasetSelect), gtype,
1570717550919:tolower(input$exportExtensionSelect), sep='.')
1570717550922:fname
1570717550926:},
1570717550929:content = function(file) {
1570717550932:ggsave(file, plot = createPlot(),
1570717550935:width = 8, height = 5.5, units = "in")
1570717550939:}
1570717550942:)
1570717550948:# Render total genomes ----------------------------------------------------
1570717550951:output$nGenomes <- renderText({
1570717550954:paste("Total genomes:", values$nGenomes)
1570717550957:})
1570717550967:# Render total genes ----------------------------------------------------
1570717550970:output$totalGenes <- renderText({
1570717550974:paste("Total genes:", values$totalGenes)
1570717550978:})
1570717550985:# Render n selected genes ------------------------------------------------
1570717550988:output$nGenes <- renderText({
1570717550992:paste("Selected genes:", values$nGenes)
1570717550995:})
1570717551005:# Render plot for confusion matrix 20x ------------------------------------
1570717551009:output$plot20 <- renderPlot({
1570717551013:outPlot <- createPlot()
1570717551016:# print(outPlot)
1570717551019:validate(
1570717551023:need(!is.null(outPlot), "No data to show")
1570717551026:# need(!is.null(dataToPlot40), "No data to show")
1570717551032:)
1570717551035:outPlot
1570717551039:# depth <- 20
1570717551042:#
1570717551045:# dSetName <- dataSets[1]
1570717551049:# if (!is.null(input$datasetSelect))
1570717551052:#   dSetName <- input$datasetSelect
1570717551055:#
1570717551058:# gType <- geneTypes[1]
1570717551062:# if (!is.null(input$typeSelect))
1570717551069:#   gType <- input$typeSelect
1570717551073:#
1570717551076:# iden  <- input$iden
1570717551080:# qCov  <- input$qcov
1570717551083:# gCov  <- input$genecov
1570717551087:# presenceTable <- generatePresenceTable(identity = iden,
1570717551090:#                                        qCoverage = qCov,
1570717551093:#                                        detectorThreshold = gCov,
1570717551097:#                                        datasetName = dSetName,
1570717551100:#                                        geneType = gType,
1570717551103:#                                        depth = depth)
1570717551126:# # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570717551129:# dataToPlot <- getConfusionMatrix(presenceTable)
1570717551132:# validate(
1570717551138:#   need(!is.null(dataToPlot), "No data to show")
1570717551141:# )
1570717551144:# confusionMatrixPlot(dataToPlot, legend = FALSE, title = "20x")
1570717551151:# dSetName <- dataSets[1]
1570717551154:# if (!is.null(input$datasetSelect))
1570717551157:#   dSetName <- input$datasetSelect
1570717551161:#
1570717551164:# gType <- geneTypes[1]
1570717551167:# if (!is.null(input$typeSelect))
1570717551171:#   gType <- input$typeSelect
1570717551174:#
1570717551177:# iden  <- input$iden
1570717551181:# qCov  <- input$qcov
1570717551184:# gCov  <- input$genecov
1570717551187:# presenceTable20 <- generatePresenceTable(identity = iden,
1570717551190:#                                        qCoverage = qCov,
1570717551193:#                                        detectorThreshold = gCov,
1570717551195:#                                        datasetName = dSetName,
1570717551198:#                                        geneType = gType,
1570717551201:#                                        depth = 20)
1570717551203:# # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570717551206:# dataToPlot20 <- getConfusionMatrix(presenceTable20)
1570717551208:# presenceTable40 <- generatePresenceTable(identity = iden,
1570717551211:#                                          qCoverage = qCov,
1570717551214:#                                          detectorThreshold = gCov,
1570717551216:#                                          datasetName = dSetName,
1570717551219:#                                          geneType = gType,
1570717551222:#                                          depth = 40)
1570717551224:# # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570717551229:# dataToPlot40 <- getConfusionMatrix(presenceTable40)
1570717551232:# validate(
1570717551236:#   need(!is.null(dataToPlot20), "No data to show")
1570717551239:#   # need(!is.null(dataToPlot40), "No data to show")
1570717551242:# )
1570717551246:# plot20  <- confusionMatrixPlot(dataToPlot20, legend = FALSE, title = "20x")
1570717551249:# plot40  <- confusionMatrixPlot(dataToPlot40, yaxis = FALSE, title = "40x")
1570717551252:# outPlot <- getCompletePlot(plot20, plot40, str_glue("Confusion matrix - {toupper(dSetName)}"))
1570717551256:# outPlot
1570717551259:})
1570717551262:#
1570717551265:# # Render plot for confusion matrix 40x ------------------------------------
1570717551269:# output$plot40 <- renderPlot({
1570717551272:#   depth <- 40
1570717551275:#
1570717551279:#   dSetName <- dataSets[1]
1570717551282:#   if (!is.null(input$datasetSelect))
1570717551285:#     dSetName <- input$datasetSelect
1570717551288:#
1570717551292:#   gType <- geneTypes[1]
1570717551296:#   if (!is.null(input$typeSelect))
1570717551299:#     gType <- input$typeSelect
1570717551302:#
1570717551305:#   iden  <- input$iden
1570717551309:#   qCov  <- input$qcov
1570717551312:#   gCov  <- input$genecov
1570717551316:#   presenceTable <- generatePresenceTable(identity = iden,
1570717551319:#                                          qCoverage = qCov,
1570717551322:#                                          detectorThreshold = gCov,
1570717551325:#                                          datasetName = dSetName,
1570717551329:#                                          geneType = gType,
1570717551332:#                                          depth = depth)
1570717551335:#   # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570717551339:#   dataToPlot <- getConfusionMatrix(presenceTable)
1570717551342:#   validate(
1570717551345:#     need(!is.null(dataToPlot), "No data to show")
1570717551349:#   )
1570717551352:#   confusionMatrixPlot(dataToPlot, yaxis = FALSE, title = "40x")
1570717551355:# })
1570717551361:})
1570717599492:debugging = TRUE
1570717601044:if (debugging) {
1570717601044:# Testing from rstudio
1570717601044:blastFile         <- "shiny_app/gene_detector/data/genes_vs_genomes.blast"
1570717601045:resultsFile       <- "shiny_app/gene_detector/data/detector.tsv"
1570717601045:identity          <- 100
1570717601045:qCoverage         <- 100
1570717601046:detectorThreshold <- 100
1570717601046:genesRefFile      <- "shiny_app/gene_detector/data/tags_ids_xRef.tsv"
1570717601046:genomesRefFile    <- "shiny_app/gene_detector/data/genomesTableRef.tsv"
1570717601047:}
1570717602852:inBlastData    <- read_tsv(blastFile)
1570717603125:inResultsData  <- read_tsv(resultsFile)
1570717603375:inGenesRef     <- read_tsv(genesRefFile, col_names = c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism
1570717603375:"))
1570717604249:inGenomesRef   <- read_tsv(genomesRefFile)
1570717604622:# genesFullRef <- read_tsv(genesFullRefFile, col_names = c("GeneTag", "CARD_description"))
1570717604622:dataSets       <- sort(unique(inGenesRef$Dataset))
1570717605052:geneTypes      <- c(sort(unique(inGenesRef$Type)),"All")
1570717605439:outPlot        <- NULL
1570717608585:# Theme definition --------------------------------------------------------
1570717608586:width            <- 7
1570717608586:height           <- width * 0.618
1570717608587:lineSize         <- 0.5
1570717608588:annotLinetype    <- "solid"
1570717608589:axisColor        <- "#666666"
1570717608590:gridColor        <- "#cccccc"
1570717608590:baseTextSize     <- 18
1570717608591:barAnnotTextSize <- 4
1570717608592:barWidth         <- 0.75
1570717608593:baseFontFamily   <- "Arial"
1570717608594:baseFontFamily   <- "HelveticaNeueLT Com 45 Lt"
1570717608597:baseFontFamily   <- "HelveticaNeueLT Std Lt"
1570717610046:publicationTheme <- list(
1570717610047:# theme_pubr() +
1570717610047:theme(
1570717610048:axis.line    = element_blank(),
1570717610049:axis.text    = element_text(size = baseTextSize * 0.875,
1570717610049:# family = baseFontFamily,
1570717610050:color = "black"),
1570717610050:axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),
1570717610051:# axis.ticks   = element_blank(),
1570717610051:axis.title   = element_text(size = baseTextSize),
1570717610052:# legend.direction  = "horizontal",
1570717610053:# legend.key.height = unit(4, "mm"),
1570717610053:# legend.key.width  = unit(4*1.618, "mm"),
1570717610054:# panel.grid.major  = element_blank(),
1570717610055:# panel.grid.major.x = element_line(colour = gridColor,
1570717610055:# size = lineSize),
1570717610062:# plot.margin = margin(8, 20, 24, 8, "mm"),
1570717610063:# plot.margin = margin(4, 4, 4, 4, "mm"),
1570717610064:text = element_text(size = baseTextSize
1570717610064:# , family = baseFontFamily
1570717610065:)
1570717610065:)
1570717610066:)
1570717611655:library(scales)
1570717613815:# colfunc <- colorRampPalette(c("#ffffff", "#4191C5"))
1570717613816:# colfunc <- colorRampPalette(c("#ffffff", "#FFB238"))
1570717613816:# colfunc <- colorRampPalette(c("#ffffff", "#91bbe4"))
1570717613817:# colfunc <- colorRampPalette(c("#ffffff", "#0a4f75"))
1570717613817:# colfunc <- colorRampPalette(c("#ffffff", "#366f8e"))
1570717613817:# colfunc <- colorRampPalette(c("#ffffff", "#4c7f9a"))
1570717613818:colfunc <- colorRampPalette(c("#ffffff", "#3e8db7"))
1570717614008:show_col(colfunc(5))
1570717838488:# Function to generate the presence table ---------------------------------
1570717838489:generatePresenceTable <- function(identity, qCoverage, detectorThreshold, datasetName, geneType, depth, filterBlastPresentGenes){
1570717838489:if(debugging) {
1570717838490:datasetName       <- "vfdb"
1570717838491:geneType          <- "Associated"
1570717838491:identity          <- 100
1570717838493:qCoverage         <- 100
1570717838494:gCov              <- 100
1570717838494:detectorThreshold <- 100
1570717838495:depth             <- 20
1570717838495:filterBlastPresentGenes <- TRUE
1570717838496:}
1570717838497:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570717838497:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570717838498:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570717838501:if (filterBlastPresentGenes) {
1570717838502:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570717838503:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570717838504:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570717838504:}
1570717838506:# print(paste("Present genes:", nrow(genesRef)))
1570717838506:values$totalGenes <- nrow(genesRef)
1570717838508:if (geneType != "All"){
1570717838508:genesRef <- genesRef %>% filter(Type == geneType)
1570717838509:}
1570717838510:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570717838511:genes       <- genesRef$GeneTag
1570717838515:# blastData   <- inBlastData %>% filter(dataset == datasetName, qseqid %in% genes)
1570717838516:blastData   <- blastData %>% filter(qseqid %in% genes)
1570717838517:resultsData <- inResultsData %>% filter(Dataset == datasetName, GeneTag %in% genes)
1570717838518:genomesRef  <- inGenomesRef
1570717838519:nGenes       <- nrow(genesRef)
1570717838520:totalGenomes <- nrow(inGenomesRef)
1570717838522:values$nGenes   <- nGenes
1570717838523:values$nGenomes <- totalGenomes
1570717838525:if (length(genesRef$GeneTag) == 0)
1570717838525:return(NULL)
1570717838527:(genomes <- blastData %>%
1570717838528:select(GeneTag = sseqid) %>%
1570717838529:unique() %>% pull())
1570717838531:(blastFilteredResults <- blastData %>%
1570717838532:# filter(qseqid %in% genes) %>%
1570717838533:mutate(BlastPresence = if_else(pident >= identity & qcovhsp >= qCoverage, 1L, 0L)) %>%
1570717838534:filter(BlastPresence == 1L)
1570717838536:)
1570717838537:# Create blank  matrices for presence/absence of genes in 71 genomes
1570717838538:(blastPresence <- matrix(0L, nrow = nGenes,
1570717838539:ncol = totalGenomes,
1570717838540:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570717838541:nGenesInBlast <- nrow(blastFilteredResults)
1570717838542:if (nGenesInBlast > 0) {
1570717838543:# Fill BLAST presence matrix with present genes
1570717838543:for (row in 1:nGenesInBlast) {
1570717838544:gene   <- blastFilteredResults$qseqid[row]
1570717838545:genome <- blastFilteredResults$sseqid[row]
1570717838546:blastPresence[gene, genome] = 1
1570717838547:}
1570717838547:}
1570717838548:blastPresenceTable <- as_tibble(blastPresence)
1570717838549:blastPresenceTable <- as_tibble(cbind.data.frame(data.frame(GeneTag = genes),
1570717838550:blastPresenceTable))
1570717838551:# Detector Tables presence/absence (whole DB) genes x genomes
1570717838552:# Fill detector presence matrix  with present genes
1570717838552:(detectorPresenceTable <- matrix(0L, nrow = nGenes,
1570717838554:ncol = totalGenomes,
1570717838555:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570717838556:(detectorResults <- resultsData %>%
1570717838557:filter(SeqDepth == depth) %>%
1570717838559:drop_na()
1570717838560:)
1570717838561:nGenesInResults <- nrow(detectorResults)
1570717838562:if (nGenesInResults > 0) {
1570717838564:for (row in 1:nrow(detectorResults)) {
1570717838565:gene    <- detectorResults$GeneTag[row]
1570717838566:genome  <- detectorResults$Accn[row]
1570717838567:geneCov <- detectorResults$GeneCov[row]
1570717838570:if (geneCov >= detectorThreshold){
1570717838571:detectorPresenceTable[gene, genome] = 1
1570717838572:}
1570717838574:}
1570717838575:}
1570717838577:(detectorPresenceTable %<>%
1570717838579:as_tibble() %>%
1570717838580:mutate(GeneTag = rownames(detectorPresenceTable)) %>%
1570717838581:select(GeneTag, everything()) %>%
1570717838583:gather(Accn, DetectorPresence, -GeneTag) %>%
1570717838584:mutate(SeqDepth = depth)
1570717838586:)
1570717838588:# Combined results table
1570717838590:(presenceTable <- left_join(
1570717838591:by = c("GeneTag", "Accn", "SeqDepth"),
1570717838592:blastPresenceTable %>%
1570717838594:gather(Accn, BlastPresence, -GeneTag) %>%
1570717838595:mutate(SeqDepth = depth,
1570717838597:GeneTag = as.character(GeneTag)),
1570717838598:detectorPresenceTable) %>%
1570717838600:select(-SeqDepth, everything())
1570717838601:)
1570717838602:}
1570717858514:# Function to generate the presence table ---------------------------------
1570717858515:generatePresenceTable <- function(identity, qCoverage, detectorThreshold, datasetName, geneType, depth, filterBlastPresentGenes){
1570717858515:if(debugging) {
1570717858516:datasetName       <- "vfdb"
1570717858516:geneType          <- "Associated"
1570717858516:identity          <- 100
1570717858517:qCoverage         <- 100
1570717858517:gCov              <- 100
1570717858517:detectorThreshold <- 100
1570717858518:depth             <- 20
1570717858518:filterBlastPresentGenes <- TRUE
1570717858518:}
1570717858519:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570717858519:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570717858520:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570717858521:if (filterBlastPresentGenes) {
1570717858521:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570717858522:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570717858523:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570717858523:}
1570717858527:# print(paste("Present genes:", nrow(genesRef)))
1570717858528:values$totalGenes <- nrow(genesRef)
1570717858529:if (geneType != "All"){
1570717858529:genesRef <- genesRef %>% filter(Type == geneType)
1570717858530:}
1570717858531:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570717858532:genes       <- genesRef$GeneTag
1570717858533:# blastData   <- inBlastData %>% filter(dataset == datasetName, qseqid %in% genes)
1570717858533:blastData   <- blastData %>% filter(qseqid %in% genes)
1570717858534:resultsData <- inResultsData %>% filter(Dataset == datasetName, GeneTag %in% genes)
1570717858535:genomesRef  <- inGenomesRef
1570717858537:nGenes       <- nrow(genesRef)
1570717858538:totalGenomes <- nrow(inGenomesRef)
1570717858540:values$nGenes   <- nGenes
1570717858540:values$nGenomes <- totalGenomes
1570717858542:if (length(genesRef$GeneTag) == 0)
1570717858543:return(NULL)
1570717858545:(genomes <- blastData %>%
1570717858546:select(GeneTag = sseqid) %>%
1570717858546:unique() %>% pull())
1570717858548:(blastFilteredResults <- blastData %>%
1570717858549:# filter(qseqid %in% genes) %>%
1570717858550:mutate(BlastPresence = if_else(pident >= identity & qcovhsp >= qCoverage, 1L, 0L)) %>%
1570717858550:filter(BlastPresence == 1L)
1570717858551:)
1570717858552:# Create blank  matrices for presence/absence of genes in 71 genomes
1570717858553:(blastPresence <- matrix(0L, nrow = nGenes,
1570717858554:ncol = totalGenomes,
1570717858555:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570717858556:nGenesInBlast <- nrow(blastFilteredResults)
1570717858557:if (nGenesInBlast > 0) {
1570717858558:# Fill BLAST presence matrix with present genes
1570717858559:for (row in 1:nGenesInBlast) {
1570717858559:gene   <- blastFilteredResults$qseqid[row]
1570717858560:genome <- blastFilteredResults$sseqid[row]
1570717858561:blastPresence[gene, genome] = 1
1570717858562:}
1570717858563:}
1570717858565:blastPresenceTable <- as_tibble(blastPresence)
1570717858566:blastPresenceTable <- as_tibble(cbind.data.frame(data.frame(GeneTag = genes),
1570717858567:blastPresenceTable))
1570717858569:# Detector Tables presence/absence (whole DB) genes x genomes
1570717858570:# Fill detector presence matrix  with present genes
1570717858572:(detectorPresenceTable <- matrix(0L, nrow = nGenes,
1570717858573:ncol = totalGenomes,
1570717858574:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570717858575:(detectorResults <- resultsData %>%
1570717858577:filter(SeqDepth == depth) %>%
1570717858578:drop_na()
1570717858579:)
1570717858580:nGenesInResults <- nrow(detectorResults)
1570717858581:if (nGenesInResults > 0) {
1570717858582:for (row in 1:nrow(detectorResults)) {
1570717858584:gene    <- detectorResults$GeneTag[row]
1570717858585:genome  <- detectorResults$Accn[row]
1570717858586:geneCov <- detectorResults$GeneCov[row]
1570717858588:if (geneCov >= detectorThreshold){
1570717858589:detectorPresenceTable[gene, genome] = 1
1570717858590:}
1570717858591:}
1570717858592:}
1570717858595:(detectorPresenceTable %<>%
1570717858596:as_tibble() %>%
1570717858597:mutate(GeneTag = rownames(detectorPresenceTable)) %>%
1570717858598:select(GeneTag, everything()) %>%
1570717858599:gather(Accn, DetectorPresence, -GeneTag) %>%
1570717858600:mutate(SeqDepth = depth)
1570717858601:)
1570717858603:# Combined results table
1570717858604:(presenceTable <- left_join(
1570717858605:by = c("GeneTag", "Accn", "SeqDepth"),
1570717858606:blastPresenceTable %>%
1570717858607:gather(Accn, BlastPresence, -GeneTag) %>%
1570717858608:mutate(SeqDepth = depth,
1570717858609:GeneTag = as.character(GeneTag)),
1570717858610:detectorPresenceTable) %>%
1570717858612:select(-SeqDepth, everything())
1570717858613:)
1570717858614:}
1570718111445:datasetName       <- "vfdb"
1570718111758:geneType          <- "Associated"
1570718111973:identity          <- 100
1570718112166:qCoverage         <- 100
1570718112338:gCov              <- 100
1570718112530:detectorThreshold <- 100
1570718112735:depth             <- 20
1570718113557:filterBlastPresentGenes <- TRUE
1570718114784:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570718115145:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570718116689:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570718116690:if (filterBlastPresentGenes) {
1570718116690:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570718116691:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570718116691:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570718116692:}
1570718120875:filterBlastPresentGenes
1570718123593:blastData
1570718135234:presentGenes
1570718154242:length(presentGenes)
1570718178799:genesRef
1570747426244:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570747426266:71*2244
1570747442161:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570747442161:71*3204
1570747497385:runApp('shiny_app/gene_detector')
1570747550090:#
1570747550090:# This is the server logic of a Shiny web application. You can run the
1570747550091:# application by clicking 'Run App' above.
1570747550092:#
1570747550092:# Find out more about building applications with Shiny here:
1570747550093:#
1570747550097:#    http://shiny.rstudio.com/
1570747550098:#
1570747550098:packages = c("argparser", "dplyr", "DT", "ggplot2", "ggpubr", "gridExtra",
1570747550099:"RColorBrewer", "readr", "tidyr", "caret", "extrafont", "e1071")
1570747550928:toInstall <- !(packages %in% installed.packages())
1570747552201:install.packages(packages[toInstall])
1570747567880:#
1570747567881:# This is the server logic of a Shiny web application. You can run the
1570747567881:# application by clicking 'Run App' above.
1570747567882:#
1570747567882:# Find out more about building applications with Shiny here:
1570747567883:#
1570747567883:#    http://shiny.rstudio.com/
1570747567892:#
1570747567893:packages = c("argparser", "dplyr", "DT", "ggplot2", "ggpubr", "gridExtra",
1570747567893:"RColorBrewer", "readr", "tidyr", "caret", "extrafont", "e1071")
1570747568925:toInstall <- !(packages %in% installed.packages())
1570747571619:toInstall
1570747590032:runApp('shiny_app/gene_detector')
1570748347235:runApp('shiny_app/gene_detector')
1570748873785:# Testing from rstudio
1570748873786:blastFile         <- "shiny_app/gene_detector/data/genes_vs_genomes.blast"
1570748874946:resultsFile       <- "shiny_app/gene_detector/data/detector.tsv"
1570748875446:identity          <- 100
1570748875855:qCoverage         <- 100
1570748876171:detectorThreshold <- 100
1570748876483:genesRefFile      <- "shiny_app/gene_detector/data/tags_ids_xRef.tsv"
1570748876959:genomesRefFile    <- "shiny_app/gene_detector/data/genomesTableRef.tsv"
1570748878576:inBlastData    <- read_tsv(blastFile)
1570748881525:inResultsData  <- read_tsv(resultsFile)
1570748885186:inGenesRef     <- read_tsv(genesRefFile, col_names = c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism
1570748885187:"))
1570748896590:inGenesRef
1570748976569:inBlastData          <- read_tsv(blastFile)
1570748976934:inResultsData        <- read_tsv(resultsFile)
1570748977358:inGenesRef           <- read_tsv(genesRefFile, col_names = TRUE)
1570748982433:inGenesRef
1570748987787:colnames(inGenesRef) <- c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism
1570748987788:")
1570748992808:inGenesRef
1570749008767:colnames(inGenesRef) <- c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism")
1570749012443:inGenesRef
1570749061281:# inGenesRef           <- read_tsv(genesRefFile, col_names = TRUE)
1570749061282:inGenesRef           <- read_tsv(genesRefFile, skip = 1,
1570749061283:col_names = c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism"))
1570749067062:inGenesRef
1570749072840:runApp('shiny_app/gene_detector')
1570749093919:inGenesRef           <- read_tsv(genesRefFile, col_names = TRUE)
1570749097384:inGenesRef
1570749101830:inGenesRef           <- read_tsv(genesRefFile, skip = 1,
1570749101831:col_names = c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism"))
1570749117155:inGenesRef
1570749207637:runApp('shiny_app/gene_detector')
1570749227295:inBlastData    <- read_tsv(blastFile)
1570749228077:inResultsData  <- read_tsv(resultsFile)
1570749228795:inGenesRef     <- read_tsv(genesRefFile, skip = 1,
1570749228795:col_names = c("GeneTag", "GeneName", "Dataset", "Type", "SeqDesc", "Organism"))
1570749234237:inGenesRef
1570749269037:runApp('shiny_app/gene_detector')
1570749290718:runApp('shiny_app/gene_detector')
1570749366641:inGenesRef     <- read_tsv(genesRefFile, col_names = c("GeneTag", "GeneName",
1570749366642:"Dataset", "Type", "SeqDesc", "Organism"))
1570749368657:inGenesRef
1570749432628:# genesFullRef <- read_tsv(genesFullRefFile, col_names = c("GeneTag", "CARD_description"))
1570749432628:dataSets       <- sort(unique(inGenesRef$Dataset))
1570749434164:dataSets
1570749444164:inGenesRef     <- read_tsv(genesRefFile, skip = 1, col_names = c("GeneTag", "GeneName",
1570749444164:"Dataset", "Type", "SeqDesc", "Organism"))
1570749446429:inGenomesRef   <- read_tsv(genomesRefFile)
1570749448756:# genesFullRef <- read_tsv(genesFullRefFile, col_names = c("GeneTag", "CARD_description"))
1570749448756:dataSets       <- sort(unique(inGenesRef$Dataset))
1570749451117:dataSets
1570749453177:geneTypes      <- c(sort(unique(inGenesRef$Type)),"All")
1570749454655:outPlot        <- NULL
1570749462467:# Theme definition --------------------------------------------------------
1570749462468:width            <- 7
1570749462469:height           <- width * 0.618
1570749462470:lineSize         <- 0.5
1570749462471:annotLinetype    <- "solid"
1570749462472:axisColor        <- "#666666"
1570749462473:gridColor        <- "#cccccc"
1570749462474:baseTextSize     <- 18
1570749462474:barAnnotTextSize <- 4
1570749462475:barWidth         <- 0.75
1570749462476:baseFontFamily   <- "Arial"
1570749462480:baseFontFamily   <- "HelveticaNeueLT Com 45 Lt"
1570749462481:baseFontFamily   <- "HelveticaNeueLT Std Lt"
1570749477583:# Function to generate the presence table ---------------------------------
1570749477584:generatePresenceTable <- function(identity, qCoverage, detectorThreshold, datasetName, geneType, depth, filterBlastPresentGenes){
1570749477585:if(debugging) {
1570749477585:datasetName       <- "vfdb"
1570749477586:geneType          <- "Associated"
1570749477587:identity          <- 100
1570749477595:qCoverage         <- 100
1570749477595:gCov              <- 100
1570749477596:detectorThreshold <- 100
1570749477597:depth             <- 20
1570749477599:filterBlastPresentGenes <- TRUE
1570749477600:}
1570749477604:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570749477617:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570749477618:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570749477619:if (filterBlastPresentGenes) {
1570749477619:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570749477620:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570749477626:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570749477627:}
1570749477629:# print(paste("Present genes:", nrow(genesRef)))
1570749477630:values$totalGenes <- nrow(genesRef)
1570749477631:if (geneType != "All"){
1570749477632:genesRef <- genesRef %>% filter(Type == geneType)
1570749477633:}
1570749477634:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570749477640:genes       <- genesRef$GeneTag
1570749477641:# blastData   <- inBlastData %>% filter(dataset == datasetName, qseqid %in% genes)
1570749477642:blastData   <- blastData %>% filter(qseqid %in% genes)
1570749477644:resultsData <- inResultsData %>% filter(Dataset == datasetName, GeneTag %in% genes)
1570749477644:genomesRef  <- inGenomesRef
1570749477645:nGenes       <- nrow(genesRef)
1570749477646:totalGenomes <- nrow(inGenomesRef)
1570749477647:values$nGenes   <- nGenes
1570749477648:values$nGenomes <- totalGenomes
1570749477649:if (length(genesRef$GeneTag) == 0)
1570749477650:return(NULL)
1570749477651:(genomes <- blastData %>%
1570749477651:select(GeneTag = sseqid) %>%
1570749477652:unique() %>% pull())
1570749477653:(blastFilteredResults <- blastData %>%
1570749477654:# filter(qseqid %in% genes) %>%
1570749477655:mutate(BlastPresence = if_else(pident >= identity & qcovhsp >= qCoverage, 1L, 0L)) %>%
1570749477656:filter(BlastPresence == 1L)
1570749477656:)
1570749477657:# Create blank  matrices for presence/absence of genes in 71 genomes
1570749477658:(blastPresence <- matrix(0L, nrow = nGenes,
1570749477658:ncol = totalGenomes,
1570749477659:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570749477662:nGenesInBlast <- nrow(blastFilteredResults)
1570749477662:if (nGenesInBlast > 0) {
1570749477663:# Fill BLAST presence matrix with present genes
1570749477664:for (row in 1:nGenesInBlast) {
1570749477665:gene   <- blastFilteredResults$qseqid[row]
1570749477666:genome <- blastFilteredResults$sseqid[row]
1570749477668:blastPresence[gene, genome] = 1
1570749477669:}
1570749477670:}
1570749477672:blastPresenceTable <- as_tibble(blastPresence)
1570749477673:blastPresenceTable <- as_tibble(cbind.data.frame(data.frame(GeneTag = genes),
1570749477675:blastPresenceTable))
1570749477678:# Detector Tables presence/absence (whole DB) genes x genomes
1570749477679:# Fill detector presence matrix  with present genes
1570749477681:(detectorPresenceTable <- matrix(0L, nrow = nGenes,
1570749477682:ncol = totalGenomes,
1570749477683:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570749477684:(detectorResults <- resultsData %>%
1570749477685:filter(SeqDepth == depth) %>%
1570749477687:drop_na()
1570749477688:)
1570749477689:nGenesInResults <- nrow(detectorResults)
1570749477691:if (nGenesInResults > 0) {
1570749477692:for (row in 1:nrow(detectorResults)) {
1570749477693:gene    <- detectorResults$GeneTag[row]
1570749477695:genome  <- detectorResults$Accn[row]
1570749477696:geneCov <- detectorResults$GeneCov[row]
1570749477699:if (geneCov >= detectorThreshold){
1570749477700:detectorPresenceTable[gene, genome] = 1
1570749477701:}
1570749477702:}
1570749477703:}
1570749477705:(detectorPresenceTable %<>%
1570749477707:as_tibble() %>%
1570749477709:mutate(GeneTag = rownames(detectorPresenceTable)) %>%
1570749477710:select(GeneTag, everything()) %>%
1570749477712:gather(Accn, DetectorPresence, -GeneTag) %>%
1570749477713:mutate(SeqDepth = depth)
1570749477715:)
1570749477717:# Combined results table
1570749477719:(presenceTable <- left_join(
1570749477720:by = c("GeneTag", "Accn", "SeqDepth"),
1570749477721:blastPresenceTable %>%
1570749477723:gather(Accn, BlastPresence, -GeneTag) %>%
1570749477725:mutate(SeqDepth = depth,
1570749477726:GeneTag = as.character(GeneTag)),
1570749477728:detectorPresenceTable) %>%
1570749477730:select(-SeqDepth, everything())
1570749477732:)
1570749477734:}
1570749487294:# Function to generate a confusion matrix plot ----------------------------
1570749487295:confusionMatrixPlot <- function(confMatrix,
1570749487296:title = NULL,
1570749487296:subtitle = NULL,
1570749487297:legend = TRUE,
1570749487298:yaxis = TRUE) {
1570749487299:pmargin <- unit(c(4,4,4,4), "mm")
1570749487299:dataSet <- as.data.frame(as.table(confMatrix))
1570749487301:# Calculate Normalized Frequencies
1570749487302:dataSet$NormFreq = 0.0
1570749487303:for (row in 1:nrow(dataSet)) {
1570749487305:class = dataSet$Reference[row]
1570749487308:sum = dataSet %>%
1570749487309:filter(Reference == class) %>%
1570749487313:select(Freq) %>% sum()
1570749487314:dataSet$NormFreq[row] = dataSet$Freq[row]/sum
1570749487315:}
1570749487316:dataSet <- mutate(dataSet,
1570749487317:Reference = factor(Reference, levels = rev(levels(dataSet$Reference))))
1570749487319:matPlot <- ggplot(dataSet,
1570749487320:aes(x = Reference, y = Prediction, fill = NormFreq)) +
1570749487321:geom_tile(aes(fill = NormFreq), size = lineSize, color = "black") +
1570749487322:# geom_text(aes(label = format(Freq, big.mark = ",")),
1570749487323:geom_text(aes(label = Freq),
1570749487341:size = baseTextSize * 0.4,
1570749487342:hjust = 0.5
1570749487343:# ,family = baseFontFamily
1570749487344:) +
1570749487346:scale_x_discrete(expand = c(0,0), position = "top") +
1570749487348:scale_y_discrete(expand = c(0,0)) +
1570749487350:scale_fill_gradientn(name = "Norm. Freq.",
1570749487359:colors = colfunc(5),
1570749487360:# #FFB238
1570749487361:# breaks = seq(0,100,25),
1570749487362:# limits = c(0,100),
1570749487363:breaks = seq(0,1,0.25),
1570749487365:limits = c(0.0,1.0)
1570749487367:) +
1570749487369:publicationTheme +
1570749487371:theme(
1570749487372:axis.title.x = element_text(margin = margin(10, 1, 10, 1, "mm")),
1570749487373:axis.ticks = element_blank(),
1570749487374:# legend.direction = "vertical",
1570749487375:# legend.position  = "right",
1570749487392:# legend.title = element_text(size = baseTextSize * 0.75),
1570749487393:panel.border = element_rect(colour = "black", fill = NA, size = lineSize * 2),
1570749487400:plot.title = element_text(hjust = 0.5),
1570749487401:plot.subtitle = element_text(hjust = 0.5, margin = margin(1,1,10,1, "mm"))
1570749487408:) +
1570749487409:labs(x = "Observed\n")
1570749487415:if(legend) {
1570749487426:matPlot <- matPlot +
1570749487427:theme(
1570749487428:legend.direction = "vertical",
1570749487429:legend.position  = "right",
1570749487430:legend.title = element_text(size = baseTextSize * 0.75)
1570749487432:) +
1570749487433:guides(fill = guide_colorbar(
1570749487434:# draw.ulim = FALSE, draw.llim = FALSE,
1570749487443:barwidth = 1,
1570749487444:frame.colour = "black",
1570749487445:frame.linewidth = 1.5,
1570749487447:ticks.colour = "black",
1570749487448:ticks.linewidth = 1))
1570749487449:} else {
1570749487453:matPlot <- matPlot + guides(fill = "none")
1570749487454:pmargin <- unit(c(0,0,0,37), "mm")
1570749487456:}
1570749487458:if(!is.null(title)){
1570749487460:matPlot <- matPlot +
1570749487461:labs( title = title)
1570749487462:}
1570749487465:if(!is.null(subtitle)){
1570749487468:matPlot <- matPlot +
1570749487471:labs(subtitle = subtitle)
1570749487473:}
1570749487476:if(yaxis){
1570749487477:matPlot <- matPlot +
1570749487478:labs(y = "Predicted")
1570749487480:} else {
1570749487481:matPlot <- matPlot +
1570749487482:theme(
1570749487484:axis.text.y  = element_blank(),
1570749487486:axis.ticks.y = element_blank(),
1570749487488:axis.title.y = element_blank()
1570749487489:)
1570749487490:pmargin <- unit(c(0,0,0,-35), "mm")
1570749487497:}
1570749487500:details <- data.frame(Value = format(round(c(confMatrix$byClass[c(1,2,5)],
1570749487503:confMatrix$overall[1]),
1570749487504:3),
1570749487506:nsmall = 3))
1570749487509:details <- details %>%
1570749487515:mutate(Parameter = paste0(rownames(details), ":")) %>%
1570749487516:select(Parameter, Value)
1570749487521:tbody.style = tbody_style(color = "black",
1570749487523:# fill = c("#e8f3de", "#d3e8bb"),
1570749487524:fill = c("#ffffff", "#ffffff"),
1570749487531:# linewidth = 1, linecolor = "black",
1570749487536:linewidth = 1, linecolor = "white",
1570749487538:size = 16,
1570749487539:hjust=1, x=0.9)
1570749487541:tablePlot <- as_ggplot(tableGrob(details, theme = ttheme_minimal(
1570749487569:# base_family = baseFontFamily,
1570749487589:base_size = 14),
1570749487592:rows = NULL, cols = NULL))
1570749487594:totalPlot <- ggarrange(matPlot + theme(plot.margin = unit(c(4,4,4,4), "mm")),
1570749487595:tablePlot + theme(plot.margin = pmargin),
1570749487597:ncol = 1, nrow = 2,
1570749487599:widths = c(1, 0.6),
1570749487601:heights = c(1, 0.6)
1570749487603:# align = "h",
1570749487613:# common.legend = TRUE, legend = c("bottom")
1570749487614:)
1570749487616:totalPlot
1570749487617:}
1570749495111:# Function to get the confusion matrix from a presence table --------------
1570749495112:getConfusionMatrix <- function(presenceTable){
1570749495113:nLevels <- length(levels(factor(c(presenceTable$BlastPresence, presenceTable$DetectorPresence))))
1570749495114:confMat <- NULL
1570749495115:if (nLevels > 1) {
1570749495116:confMat <- confusionMatrix(data = factor(presenceTable %>%
1570749495116:mutate(DetectorPresence = if_else(DetectorPresence == 0, "Absent", "Present")) %>%
1570749495117:# filter(SeqDepth == depth) %>%
1570749495118:pull(DetectorPresence)),
1570749495118:reference = factor(presenceTable %>%
1570749495124:mutate(BlastPresence = if_else(BlastPresence == 0, "Absent", "Present")) %>%
1570749495133:# filter(SeqDepth == depth) %>%
1570749495134:pull(BlastPresence)),
1570749495135:positive = "Present")
1570749495141:}
1570749495142:confMat
1570749495143:}
1570749518539:debugging = TRUE
1570749519683:if (debugging) {
1570749519684:# Testing from rstudio
1570749519685:blastFile         <- "shiny_app/gene_detector/data/genes_vs_genomes.blast"
1570749519685:resultsFile       <- "shiny_app/gene_detector/data/detector.tsv"
1570749519686:identity          <- 100
1570749519687:qCoverage         <- 100
1570749519688:detectorThreshold <- 100
1570749519689:genesRefFile      <- "shiny_app/gene_detector/data/tags_ids_xRef.tsv"
1570749519690:genomesRefFile    <- "shiny_app/gene_detector/data/genomesTableRef.tsv"
1570749519690:}
1570749523688:inBlastData    <- read_tsv(blastFile)
1570749523859:inResultsData  <- read_tsv(resultsFile)
1570749524090:inGenesRef     <- read_tsv(genesRefFile, skip = 1, col_names = c("GeneTag", "GeneName",
1570749524091:"Dataset", "Type", "SeqDesc", "Organism"))
1570749524158:inGenomesRef   <- read_tsv(genomesRefFile)
1570749524169:# genesFullRef <- read_tsv(genesFullRefFile, col_names = c("GeneTag", "CARD_description"))
1570749524170:dataSets       <- sort(unique(inGenesRef$Dataset))
1570749524171:geneTypes      <- c(sort(unique(inGenesRef$Type)),"All")
1570749524173:outPlot        <- NULL
1570749528823:th            <- 7
1570749528823:height           <- width * 0.618
1570749528824:lineSize         <- 0.5
1570749528825:annotLinetype    <- "solid"
1570749528826:axisColor        <- "#666666"
1570749528827:gridColor        <- "#cccccc"
1570749528828:baseTextSize     <- 18
1570749528829:barAnnotTextSize <- 4
1570749528831:barWidth         <- 0.75
1570749528832:baseFontFamily   <- "Arial"
1570749528842:baseFontFamily   <- "HelveticaNeueLT Com 45 Lt"
1570749528843:baseFontFamily   <- "HelveticaNeueLT Std Lt"
1570749551460:inGenomesRef   <- read_tsv(genomesRefFile)
1570749551875:# genesFullRef <- read_tsv(genesFullRefFile, col_names = c("GeneTag", "CARD_description"))
1570749551876:dataSets       <- sort(unique(inGenesRef$Dataset))
1570749552210:geneTypes      <- c(sort(unique(inGenesRef$Type)),"All")
1570749552516:outPlot        <- NULL
1570749557173:# Theme definition --------------------------------------------------------
1570749557174:width            <- 7
1570749557175:height           <- width * 0.618
1570749557177:lineSize         <- 0.5
1570749557183:annotLinetype    <- "solid"
1570749557184:axisColor        <- "#666666"
1570749557185:gridColor        <- "#cccccc"
1570749557186:baseTextSize     <- 18
1570749557187:barAnnotTextSize <- 4
1570749557187:barWidth         <- 0.75
1570749557188:baseFontFamily   <- "Arial"
1570749557188:baseFontFamily   <- "HelveticaNeueLT Com 45 Lt"
1570749557189:baseFontFamily   <- "HelveticaNeueLT Std Lt"
1570749557190:publicationTheme <- list(
1570749557191:# theme_pubr() +
1570749557192:theme(
1570749557193:axis.line    = element_blank(),
1570749557193:axis.text    = element_text(size = baseTextSize * 0.875,
1570749557194:# family = baseFontFamily,
1570749557195:color = "black"),
1570749557196:axis.title.y = element_text(margin=margin(1, 10, 1, 1, "mm")),
1570749557197:# axis.ticks   = element_blank(),
1570749557198:axis.title   = element_text(size = baseTextSize),
1570749557199:# legend.direction  = "horizontal",
1570749557199:# legend.key.height = unit(4, "mm"),
1570749557200:# legend.key.width  = unit(4*1.618, "mm"),
1570749557201:# panel.grid.major  = element_blank(),
1570749557201:# panel.grid.major.x = element_line(colour = gridColor,
1570749557202:# size = lineSize),
1570749557203:# plot.margin = margin(8, 20, 24, 8, "mm"),
1570749557203:# plot.margin = margin(4, 4, 4, 4, "mm"),
1570749557204:text = element_text(size = baseTextSize
1570749557204:# , family = baseFontFamily
1570749557205:)
1570749557205:)
1570749557206:)
1570749557209:library(scales)
1570749557210:# colfunc <- colorRampPalette(c("#ffffff", "#4191C5"))
1570749557211:# colfunc <- colorRampPalette(c("#ffffff", "#FFB238"))
1570749557211:# colfunc <- colorRampPalette(c("#ffffff", "#91bbe4"))
1570749557212:# colfunc <- colorRampPalette(c("#ffffff", "#0a4f75"))
1570749557212:# colfunc <- colorRampPalette(c("#ffffff", "#366f8e"))
1570749557213:# colfunc <- colorRampPalette(c("#ffffff", "#4c7f9a"))
1570749557214:colfunc <- colorRampPalette(c("#ffffff", "#3e8db7"))
1570749557216:show_col(colfunc(5))
1570749565941:# App logic ---------------------------------------------------------------
1570749565942:# Define server logic required to draw a histogram
1570749565943:shinyServer(function(input, output) {
1570749565944:values <- reactiveValues()
1570749565946:# Function to generate the presence table ---------------------------------
1570749565947:generatePresenceTable <- function(identity, qCoverage, detectorThreshold, datasetName, geneType, depth, filterBlastPresentGenes){
1570749565948:if(debugging) {
1570749565948:datasetName       <- "vfdb"
1570749565949:geneType          <- "Associated"
1570749565950:identity          <- 100
1570749565951:qCoverage         <- 100
1570749565951:gCov              <- 100
1570749565952:detectorThreshold <- 100
1570749565952:depth             <- 20
1570749565953:filterBlastPresentGenes <- TRUE
1570749565953:}
1570749565954:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570749565955:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570749565955:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570749565956:if (filterBlastPresentGenes) {
1570749565957:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570749565958:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570749565959:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570749565960:}
1570749565962:# print(paste("Present genes:", nrow(genesRef)))
1570749565962:values$totalGenes <- nrow(genesRef)
1570749565965:if (geneType != "All"){
1570749565966:genesRef <- genesRef %>% filter(Type == geneType)
1570749565967:}
1570749565967:# print(paste("n ref genes:", length(genesRef$GeneTag)))
1570749565968:genes       <- genesRef$GeneTag
1570749565969:# blastData   <- inBlastData %>% filter(dataset == datasetName, qseqid %in% genes)
1570749565970:blastData   <- blastData %>% filter(qseqid %in% genes)
1570749565970:resultsData <- inResultsData %>% filter(Dataset == datasetName, GeneTag %in% genes)
1570749565971:genomesRef  <- inGenomesRef
1570749565972:nGenes       <- nrow(genesRef)
1570749565973:totalGenomes <- nrow(inGenomesRef)
1570749565974:values$nGenes   <- nGenes
1570749565975:values$nGenomes <- totalGenomes
1570749565977:if (length(genesRef$GeneTag) == 0)
1570749565979:return(NULL)
1570749565980:(genomes <- blastData %>%
1570749565981:select(GeneTag = sseqid) %>%
1570749565982:unique() %>% pull())
1570749565984:(blastFilteredResults <- blastData %>%
1570749565985:# filter(qseqid %in% genes) %>%
1570749565986:mutate(BlastPresence = if_else(pident >= identity & qcovhsp >= qCoverage, 1L, 0L)) %>%
1570749565986:filter(BlastPresence == 1L)
1570749565987:)
1570749565988:# Create blank  matrices for presence/absence of genes in 71 genomes
1570749565988:(blastPresence <- matrix(0L, nrow = nGenes,
1570749565989:ncol = totalGenomes,
1570749565991:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570749565993:nGenesInBlast <- nrow(blastFilteredResults)
1570749565997:if (nGenesInBlast > 0) {
1570749565999:# Fill BLAST presence matrix with present genes
1570749566000:for (row in 1:nGenesInBlast) {
1570749566001:gene   <- blastFilteredResults$qseqid[row]
1570749566003:genome <- blastFilteredResults$sseqid[row]
1570749566004:blastPresence[gene, genome] = 1
1570749566005:}
1570749566007:}
1570749566014:blastPresenceTable <- as_tibble(blastPresence)
1570749566015:blastPresenceTable <- as_tibble(cbind.data.frame(data.frame(GeneTag = genes),
1570749566016:blastPresenceTable))
1570749566018:# Detector Tables presence/absence (whole DB) genes x genomes
1570749566021:# Fill detector presence matrix  with present genes
1570749566022:(detectorPresenceTable <- matrix(0L, nrow = nGenes,
1570749566025:ncol = totalGenomes,
1570749566030:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570749566031:(detectorResults <- resultsData %>%
1570749566033:filter(SeqDepth == depth) %>%
1570749566034:drop_na()
1570749566035:)
1570749566036:nGenesInResults <- nrow(detectorResults)
1570749566038:if (nGenesInResults > 0) {
1570749566039:for (row in 1:nrow(detectorResults)) {
1570749566041:gene    <- detectorResults$GeneTag[row]
1570749566046:genome  <- detectorResults$Accn[row]
1570749566048:geneCov <- detectorResults$GeneCov[row]
1570749566050:if (geneCov >= detectorThreshold){
1570749566051:detectorPresenceTable[gene, genome] = 1
1570749566053:}
1570749566054:}
1570749566057:}
1570749566063:(detectorPresenceTable %<>%
1570749566065:as_tibble() %>%
1570749566067:mutate(GeneTag = rownames(detectorPresenceTable)) %>%
1570749566068:select(GeneTag, everything()) %>%
1570749566070:gather(Accn, DetectorPresence, -GeneTag) %>%
1570749566071:mutate(SeqDepth = depth)
1570749566078:)
1570749566080:# Combined results table
1570749566082:(presenceTable <- left_join(
1570749566084:by = c("GeneTag", "Accn", "SeqDepth"),
1570749566085:blastPresenceTable %>%
1570749566086:gather(Accn, BlastPresence, -GeneTag) %>%
1570749566088:mutate(SeqDepth = depth,
1570749566091:GeneTag = as.character(GeneTag)),
1570749566097:detectorPresenceTable) %>%
1570749566099:select(-SeqDepth, everything())
1570749566101:)
1570749566103:}
1570749566111:# Function to generate a confusion matrix plot ----------------------------
1570749566113:confusionMatrixPlot <- function(confMatrix,
1570749566116:title = NULL,
1570749566118:subtitle = NULL,
1570749566120:legend = TRUE,
1570749566123:yaxis = TRUE) {
1570749566137:pmargin <- unit(c(4,4,4,4), "mm")
1570749566145:dataSet <- as.data.frame(as.table(confMatrix))
1570749566149:# Calculate Normalized Frequencies
1570749566152:dataSet$NormFreq = 0.0
1570749566154:for (row in 1:nrow(dataSet)) {
1570749566158:class = dataSet$Reference[row]
1570749566160:sum = dataSet %>%
1570749566162:filter(Reference == class) %>%
1570749566163:select(Freq) %>% sum()
1570749566170:dataSet$NormFreq[row] = dataSet$Freq[row]/sum
1570749566174:}
1570749566181:dataSet <- mutate(dataSet,
1570749566183:Reference = factor(Reference, levels = rev(levels(dataSet$Reference))))
1570749566186:matPlot <- ggplot(dataSet,
1570749566188:aes(x = Reference, y = Prediction, fill = NormFreq)) +
1570749566191:geom_tile(aes(fill = NormFreq), size = lineSize, color = "black") +
1570749566198:# geom_text(aes(label = format(Freq, big.mark = ",")),
1570749566201:geom_text(aes(label = Freq),
1570749566222:size = baseTextSize * 0.4,
1570749566224:hjust = 0.5
1570749566226:# ,family = baseFontFamily
1570749566228:) +
1570749566237:scale_x_discrete(expand = c(0,0), position = "top") +
1570749566240:scale_y_discrete(expand = c(0,0)) +
1570749566242:scale_fill_gradientn(name = "Norm. Freq.",
1570749566244:colors = colfunc(5),
1570749566247:# #FFB238
1570749566249:# breaks = seq(0,100,25),
1570749566251:# limits = c(0,100),
1570749566253:breaks = seq(0,1,0.25),
1570749566255:limits = c(0.0,1.0)
1570749566259:) +
1570749566261:publicationTheme +
1570749566263:theme(
1570749566265:axis.title.x = element_text(margin = margin(10, 1, 10, 1, "mm")),
1570749566268:axis.ticks = element_blank(),
1570749566270:# legend.direction = "vertical",
1570749566273:# legend.position  = "right",
1570749566275:# legend.title = element_text(size = baseTextSize * 0.75),
1570749566278:panel.border = element_rect(colour = "black", fill = NA, size = lineSize * 2),
1570749566280:plot.title = element_text(hjust = 0.5),
1570749566282:plot.subtitle = element_text(hjust = 0.5, margin = margin(1,1,10,1, "mm"))
1570749566285:) +
1570749566287:labs(x = "Observed\n")
1570749566296:if(legend) {
1570749566298:matPlot <- matPlot +
1570749566301:theme(
1570749566303:legend.direction = "vertical",
1570749566307:legend.position  = "right",
1570749566309:legend.title = element_text(size = baseTextSize * 0.75)
1570749566312:) +
1570749566315:guides(fill = guide_colorbar(
1570749566317:# draw.ulim = FALSE, draw.llim = FALSE,
1570749566319:barwidth = 1,
1570749566322:frame.colour = "black",
1570749566324:frame.linewidth = 1.5,
1570749566326:ticks.colour = "black",
1570749566329:ticks.linewidth = 1))
1570749566331:} else {
1570749566334:matPlot <- matPlot + guides(fill = "none")
1570749566336:pmargin <- unit(c(0,0,0,37), "mm")
1570749566339:}
1570749566344:if(!is.null(title)){
1570749566346:matPlot <- matPlot +
1570749566349:labs( title = title)
1570749566351:}
1570749566356:if(!is.null(subtitle)){
1570749566358:matPlot <- matPlot +
1570749566361:labs(subtitle = subtitle)
1570749566363:}
1570749566370:if(yaxis){
1570749566372:matPlot <- matPlot +
1570749566375:labs(y = "Predicted")
1570749566377:} else {
1570749566380:matPlot <- matPlot +
1570749566383:theme(
1570749566385:axis.text.y  = element_blank(),
1570749566387:axis.ticks.y = element_blank(),
1570749566390:axis.title.y = element_blank()
1570749566393:)
1570749566395:pmargin <- unit(c(0,0,0,-35), "mm")
1570749566398:}
1570749566403:details <- data.frame(Value = format(round(c(confMatrix$byClass[c(1,2,5)],
1570749566406:confMatrix$overall[1]),
1570749566409:3),
1570749566411:nsmall = 3))
1570749566429:details <- details %>%
1570749566431:mutate(Parameter = paste0(rownames(details), ":")) %>%
1570749566434:select(Parameter, Value)
1570749566453:tbody.style = tbody_style(color = "black",
1570749566472:# fill = c("#e8f3de", "#d3e8bb"),
1570749566477:fill = c("#ffffff", "#ffffff"),
1570749566479:# linewidth = 1, linecolor = "black",
1570749566482:linewidth = 1, linecolor = "white",
1570749566484:size = 16,
1570749566487:hjust=1, x=0.9)
1570749566490:tablePlot <- as_ggplot(tableGrob(details, theme = ttheme_minimal(
1570749566507:# base_family = baseFontFamily,
1570749566509:base_size = 14),
1570749566511:rows = NULL, cols = NULL))
1570749566514:totalPlot <- ggarrange(matPlot + theme(plot.margin = unit(c(4,4,4,4), "mm")),
1570749566517:tablePlot + theme(plot.margin = pmargin),
1570749566532:ncol = 1, nrow = 2,
1570749566534:widths = c(1, 0.6),
1570749566536:heights = c(1, 0.6)
1570749566539:# align = "h",
1570749566542:# common.legend = TRUE, legend = c("bottom")
1570749566567:)
1570749566570:totalPlot
1570749566581:}
1570749566587:# # Function to get the confusion matrix from a presence table --------------
1570749566598:# getConfusionMatrix <- function(presenceTable, depth){
1570749566600:#   nLevels <- length(levels(factor(c(presenceTable$BlastPresence, presenceTable$DetectorPresence))))
1570749566603:#   confMat <- NULL
1570749566608:#   if (nLevels > 1) {
1570749566611:#     confMat <- confusionMatrix(data = factor(presenceTable %>%
1570749566614:#                                                mutate(DetectorPresence = if_else(DetectorPresence == 0, "Absent", "Present")) %>%
1570749566616:#                                                filter(SeqDepth == depth) %>%
1570749566619:#                                                pull(DetectorPresence)),
1570749566621:#                                reference = factor(presenceTable %>%
1570749566625:#                                                     mutate(BlastPresence = if_else(BlastPresence == 0, "Absent", "Present")) %>%
1570749566627:#                                                     filter(SeqDepth == depth) %>%
1570749566632:#                                                     pull(BlastPresence)),
1570749566634:#                                positive = "Present")
1570749566636:#   }
1570749566640:#   confMat
1570749566642:# }
1570749566648:# Function to get the confusion matrix from a presence table --------------
1570749566650:getConfusionMatrix <- function(presenceTable){
1570749566653:nLevels <- length(levels(factor(c(presenceTable$BlastPresence, presenceTable$DetectorPresence))))
1570749566655:confMat <- NULL
1570749566658:if (nLevels > 1) {
1570749566661:confMat <- confusionMatrix(data = factor(presenceTable %>%
1570749566664:mutate(DetectorPresence = if_else(DetectorPresence == 0, "Absent", "Present")) %>%
1570749566666:# filter(SeqDepth == depth) %>%
1570749566669:pull(DetectorPresence)),
1570749566672:reference = factor(presenceTable %>%
1570749566675:mutate(BlastPresence = if_else(BlastPresence == 0, "Absent", "Present")) %>%
1570749566678:# filter(SeqDepth == depth) %>%
1570749566681:pull(BlastPresence)),
1570749566684:positive = "Present")
1570749566686:}
1570749566689:confMat
1570749566692:}
1570749566701:# Render selector for dataset  -------------------------------------
1570749566703:output$datasetSelect <- renderUI({
1570749566706:selectInput("datasetSelect", "Dataset:",
1570749566709:dataSets,
1570749566712:# multiple = FALSE, #selectize = TRUE,
1570749566715:selected = dataSets[1])
1570749566718:})
1570749566727:# Render selector for type --------------------------------------
1570749566730:output$typeSelect <- renderUI({
1570749566736:selectInput("typeSelect", "Gene type:",
1570749566739:geneTypes,
1570749566743:# multiple = FALSE, #selectize = TRUE,
1570749566746:selected = geneTypes[1])
1570749566749:})
1570749566756:# Generate plot -----------------------------------------------------------
1570749566759:createPlot <- function(){
1570749566769:dSetName <- dataSets[1]
1570749566789:if (!is.null(input$datasetSelect))
1570749566798:dSetName <- input$datasetSelect
1570749566803:gType <- geneTypes[1]
1570749566831:if (!is.null(input$typeSelect))
1570749566846:gType <- input$typeSelect
1570749566864:if (debugging) {
1570749566867:dSetName <- "card"
1570749566896:gType <- "associated"
1570749566899:iden  <- 100
1570749566901:qCov  <- 100
1570749566914:gCov  <- 100
1570749566917:}
1570749566946:iden  <- input$iden
1570749566949:qCov  <- input$qcov
1570749566963:gCov  <- input$genecov
1570749566965:filterPresGenes <- input$filterNonPresentGenesCheck
1570749566980:presenceTable20 <- generatePresenceTable(identity = iden,
1570749566982:qCoverage = qCov,
1570749566994:detectorThreshold = gCov,
1570749566997:datasetName = dSetName,
1570749567000:geneType = gType,
1570749567002:depth = 20,
1570749567016:filterPresGenes)
1570749567019:# dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570749567022:presenceTable40 <- generatePresenceTable(identity = iden,
1570749567026:qCoverage = qCov,
1570749567034:detectorThreshold = gCov,
1570749567040:datasetName = dSetName,
1570749567043:geneType = gType,
1570749567045:depth = 40,
1570749567049:filterPresGenes)
1570749567060:# Failed predictions table
1570749567062:failedPred <- rbind(
1570749567066:presenceTable20 %>%
1570749567069:filter(BlastPresence == 0, DetectorPresence == 1) %>%
1570749567076:mutate(ErrorType = "FP"),
1570749567079:presenceTable40 %>%
1570749567082:filter(BlastPresence == 0, DetectorPresence == 1) %>%
1570749567085:mutate(ErrorType = "FP"),
1570749567089:presenceTable20 %>%
1570749567093:filter(BlastPresence == 1, DetectorPresence == 0) %>%
1570749567095:mutate(ErrorType = "FN"),
1570749567097:presenceTable40 %>%
1570749567100:filter(BlastPresence == 1, DetectorPresence == 0) %>%
1570749567102:mutate(ErrorType = "FN")
1570749567105:)
1570749567112:failedPred %<>%
1570749567114:left_join(inGenesRef, by = "GeneTag") %>%
1570749567116:left_join(inGenomesRef, by = "Accn") %>%
1570749567119:select(GeneTag, Accn,
1570749567122:# Obs = BlastPresence,
1570749567133:# Pred = DetectorPresence,
1570749567137:ErrorType,
1570749567145:Depth = SeqDepth,
1570749567148:GeneName, Organism)
1570749567155:values$failedPred <- failedPred
1570749567160:# print(head(failedPred))
1570749567164:# print(head(presenceTable20))
1570749567167:# print(head(presenceTable40))
1570749567175:if (is.null(presenceTable20) | is.null(presenceTable40))
1570749567180:return(NULL)
1570749567186:dataToPlot20 <- getConfusionMatrix(presenceTable20)
1570749567191:dataToPlot40 <- getConfusionMatrix(presenceTable40)
1570749567199:outPlot <- NULL
1570749567203:if ((!is.null(dataToPlot20)) && (!is.null(dataToPlot40))){
1570749567212:plot20  <- confusionMatrixPlot(dataToPlot20, legend = FALSE, title = "20x")
1570749567217:plot40  <- confusionMatrixPlot(dataToPlot40, yaxis = FALSE, title = "40x")
1570749567225:# outPlot <- getCompletePlot(plot20, plot40, str_glue("Confusion matrix - {toupper(dSetName)}"))
1570749567232:title <- str_glue("Confusion matrix - {toupper(dSetName)}")
1570749567236:(plotTitle <- text_grob(title, size = baseTextSize * 1.4
1570749567244:# , family = baseFontFamily
1570749567248:))
1570749567259:(totalConfMatrixPlot <- ggarrange(plot20 + theme(plot.margin = unit(c(8,0,4,4), "mm")),
1570749567263:plot40 + theme(plot.margin = unit(c(8,4,4,0), "mm")),
1570749567267:# labels = c("(A)", "(B)"),
1570749567275:# hjust = c(-5.6, -0.5),
1570749567279:# vjust = c(1.5),
1570749567283:ncol = 2, nrow = 1
1570749567286:# widths = c(1, 0.5),
1570749567295:# heights = c(1, 0.5)
1570749567298:# align = "h",
1570749567310:# common.legend = TRUE, legend = c("bottom")
1570749567314:))
1570749567333:# outPlot <- grid.arrange(totalConfMatrixPlot,
1570749567336:outPlot <- grid.arrange(plotTitle, totalConfMatrixPlot,
1570749567353:ncol = 1, heights = c(0.1, 1)
1570749567357:# , top = plotTitle)
1570749567368:)
1570749567373:}
1570749567376:outPlot
1570749567396:}
1570749567416:# Add data from BLAST and detector to the failed predictions --------------
1570749567420:addPredictionData <- function(failedPred, dset){
1570749567436:if (debugging) {
1570749567440:dset <- "card"
1570749567444:}
1570749567460:outTable <- failedPred
1570749567464:if(!is.null(failedPred) && !is.null(dset)){
1570749567467:# print("No es Null")
1570749567471:# print(dset)
1570749567487:blast <- inBlastData %>%
1570749567490:filter(dataset == dset) %>%
1570749567494:select(GeneTag = qseqid,
1570749567498:Accn = sseqid,
1570749567513:PIdent = pident,
1570749567516:QueryCov = qcovhsp
1570749567528:)
1570749567532:detector <- inResultsData %>%
1570749567535:filter(Dataset == dset) %>%
1570749567547:select(GeneTag, Accn,
1570749567550:DetectorCov = GeneCov,
1570749567555:Depth = SeqDepth)
1570749567566:outTable %<>%
1570749567580:left_join(blast, by = c("GeneTag", "Accn")) %>%
1570749567585:left_join(detector, by = c("GeneTag", "Accn", "Depth"))
1570749567596:} #else {
1570749567600:#   print("Es null")
1570749567613:# }
1570749567617:outTable
1570749567621:}
1570749567641:# Render table of failed predictions --------------------------------------
1570749567662:output$tblFailedPred = DT::renderDataTable({
1570749567666:# addPredictionData(values$failedPred, input$datasetSelect)
1570749567670:values$failedPred
1570749567691:},
1570749567695:extensions = 'Buttons', options = list(
1570749567699:dom = 'lBfrtip',
1570749567711:buttons = c('copy', 'csv', 'excel', 'pdf', 'print')
1570749567714:)
1570749567719:)
1570749567744:# Render selector of format to export ------------------------------------
1570749567748:output$exportExtensionSelect <- renderUI({
1570749567756:selectInput("exportExtensionSelect", "Format to save:",
1570749567761:c("PNG", "PDF", "SVG", "EPS", "JPG", "TIFF"), selected = "PDF")
1570749567765:})
1570749567773:# Save the plot as file ---------------------------------------------------
1570749567778:output$savePlot <- downloadHandler(
1570749567782:filename = function() {
1570749567785:gtype <- gsub(" ", "_", tolower(input$typeSelect))
1570749567790:fname <- paste("confuision_matrix", tolower(input$datasetSelect), gtype,
1570749567795:tolower(input$exportExtensionSelect), sep='.')
1570749567798:fname
1570749567802:},
1570749567809:content = function(file) {
1570749567813:ggsave(file, plot = createPlot(),
1570749567816:width = 8, height = 5.5, units = "in")
1570749567820:}
1570749567829:)
1570749567841:# Render total genomes ----------------------------------------------------
1570749567846:output$nGenomes <- renderText({
1570749567850:paste("Total genomes:", values$nGenomes)
1570749567855:})
1570749567869:# Render total genes ----------------------------------------------------
1570749567875:output$totalGenes <- renderText({
1570749567879:paste("Total genes:", values$totalGenes)
1570749567885:})
1570749567895:# Render n selected genes ------------------------------------------------
1570749567899:output$nGenes <- renderText({
1570749567904:paste("Selected genes:", values$nGenes)
1570749567908:})
1570749567921:# Render plot for confusion matrix 20x ------------------------------------
1570749567925:output$plot20 <- renderPlot({
1570749567929:outPlot <- createPlot()
1570749567933:# print(outPlot)
1570749567938:validate(
1570749567943:need(!is.null(outPlot), "No data to show")
1570749567947:# need(!is.null(dataToPlot40), "No data to show")
1570749567952:)
1570749567956:outPlot
1570749567962:# depth <- 20
1570749567966:#
1570749567971:# dSetName <- dataSets[1]
1570749567976:# if (!is.null(input$datasetSelect))
1570749567981:#   dSetName <- input$datasetSelect
1570749567986:#
1570749567993:# gType <- geneTypes[1]
1570749567998:# if (!is.null(input$typeSelect))
1570749568004:#   gType <- input$typeSelect
1570749568012:#
1570749568015:# iden  <- input$iden
1570749568020:# qCov  <- input$qcov
1570749568030:# gCov  <- input$genecov
1570749568034:# presenceTable <- generatePresenceTable(identity = iden,
1570749568039:#                                        qCoverage = qCov,
1570749568044:#                                        detectorThreshold = gCov,
1570749568047:#                                        datasetName = dSetName,
1570749568052:#                                        geneType = gType,
1570749568059:#                                        depth = depth)
1570749568063:# # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570749568066:# dataToPlot <- getConfusionMatrix(presenceTable)
1570749568071:# validate(
1570749568077:#   need(!is.null(dataToPlot), "No data to show")
1570749568081:# )
1570749568085:# confusionMatrixPlot(dataToPlot, legend = FALSE, title = "20x")
1570749568095:# dSetName <- dataSets[1]
1570749568099:# if (!is.null(input$datasetSelect))
1570749568104:#   dSetName <- input$datasetSelect
1570749568110:#
1570749568114:# gType <- geneTypes[1]
1570749568119:# if (!is.null(input$typeSelect))
1570749568125:#   gType <- input$typeSelect
1570749568130:#
1570749568135:# iden  <- input$iden
1570749568141:# qCov  <- input$qcov
1570749568145:# gCov  <- input$genecov
1570749568150:# presenceTable20 <- generatePresenceTable(identity = iden,
1570749568155:#                                        qCoverage = qCov,
1570749568160:#                                        detectorThreshold = gCov,
1570749568167:#                                        datasetName = dSetName,
1570749568181:#                                        geneType = gType,
1570749568185:#                                        depth = 20)
1570749568195:# # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570749568199:# dataToPlot20 <- getConfusionMatrix(presenceTable20)
1570749568211:# presenceTable40 <- generatePresenceTable(identity = iden,
1570749568215:#                                          qCoverage = qCov,
1570749568225:#                                          detectorThreshold = gCov,
1570749568231:#                                          datasetName = dSetName,
1570749568256:#                                          geneType = gType,
1570749568261:#                                          depth = 40)
1570749568265:# # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570749568277:# dataToPlot40 <- getConfusionMatrix(presenceTable40)
1570749568281:# validate(
1570749568294:#   need(!is.null(dataToPlot20), "No data to show")
1570749568308:#   # need(!is.null(dataToPlot40), "No data to show")
1570749568312:# )
1570749568325:# plot20  <- confusionMatrixPlot(dataToPlot20, legend = FALSE, title = "20x")
1570749568329:# plot40  <- confusionMatrixPlot(dataToPlot40, yaxis = FALSE, title = "40x")
1570749568342:# outPlot <- getCompletePlot(plot20, plot40, str_glue("Confusion matrix - {toupper(dSetName)}"))
1570749568346:# outPlot
1570749568360:})
1570749568367:#
1570749568372:# # Render plot for confusion matrix 40x ------------------------------------
1570749568377:# output$plot40 <- renderPlot({
1570749568397:#   depth <- 40
1570749568408:#
1570749568412:#   dSetName <- dataSets[1]
1570749568416:#   if (!is.null(input$datasetSelect))
1570749568434:#     dSetName <- input$datasetSelect
1570749568448:#
1570749568461:#   gType <- geneTypes[1]
1570749568465:#   if (!is.null(input$typeSelect))
1570749568480:#     gType <- input$typeSelect
1570749568493:#
1570749568497:#   iden  <- input$iden
1570749568510:#   qCov  <- input$qcov
1570749568514:#   gCov  <- input$genecov
1570749568526:#   presenceTable <- generatePresenceTable(identity = iden,
1570749568530:#                                          qCoverage = qCov,
1570749568535:#                                          detectorThreshold = gCov,
1570749568540:#                                          datasetName = dSetName,
1570749568545:#                                          geneType = gType,
1570749568551:#                                          depth = depth)
1570749568558:#   # dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570749568563:#   dataToPlot <- getConfusionMatrix(presenceTable)
1570749568569:#   validate(
1570749568577:#     need(!is.null(dataToPlot), "No data to show")
1570749568581:#   )
1570749568591:#   confusionMatrixPlot(dataToPlot, yaxis = FALSE, title = "40x")
1570749568595:# })
1570749568608:})
1570749622171:dataSets
1570749646901:dSetName <- dataSets[1]
1570749648573:gType <- geneTypes[1]
1570749674339:geneTypes
1570749680929:dataSets
1570749688876:if (debugging) {
1570749688877:dSetName <- "card"
1570749688877:gType <- "Associated"
1570749688878:iden  <- 100
1570749688879:qCov  <- 100
1570749688879:gCov  <- 100
1570749688880:}
1570749691957:iden  <- input$iden
1570749693188:qCov  <- input$qcov
1570749694272:gCov  <- input$genecov
1570749696563:if (debugging) {
1570749696564:dSetName <- "card"
1570749696565:gType <- "Associated"
1570749696565:iden  <- 100
1570749696566:qCov  <- 100
1570749696567:gCov  <- 100
1570749696576:}
1570749700949:filterPresGenes <- input$filterNonPresentGenesCheck
1570749711118:filterPresGenes
1570749742079:filterPresGenes <- FALSE
1570749745874:presenceTable20 <- generatePresenceTable(identity = iden,
1570749745874:qCoverage = qCov,
1570749745875:detectorThreshold = gCov,
1570749745876:datasetName = dSetName,
1570749745877:geneType = gType,
1570749745877:depth = 20,
1570749745878:filterPresGenes)
1570749772159:values <- reactiveValues()
1570749789159:presenceTable20 <- generatePresenceTable(identity = iden,
1570749789160:qCoverage = qCov,
1570749789161:detectorThreshold = gCov,
1570749789162:datasetName = dSetName,
1570749789162:geneType = gType,
1570749789163:depth = 20,
1570749789164:filterPresGenes)
1570749792785:presenceTable20
1570749822753:if(debugging) {
1570749822754:datasetName       <- "vfdb"
1570749822755:geneType          <- "Associated"
1570749822755:identity          <- 100
1570749822756:qCoverage         <- 100
1570749822757:gCov              <- 100
1570749822757:detectorThreshold <- 100
1570749822758:depth             <- 20
1570749822759:filterBlastPresentGenes <- TRUE
1570749822759:}
1570749833796:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570749834735:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570749836408:genesRef
1570749847140:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570749848368:blastData
1570749886850:# print(paste("Present genes:", nrow(genesRef)))
1570749886851:values$totalGenes <- nrow(genesRef)
1570750605352:runApp('shiny_app/gene_detector')
1570750623773:runApp('shiny_app/gene_detector')
1570750683594:runApp('shiny_app/gene_detector')
1570750707825:runApp('shiny_app/gene_detector')
1570750858338:blastPresenceTable
1570750868231:n
1570750872195:if(debugging) {
1570750872196:datasetName       <- "vfdb"
1570750872197:geneType          <- "Associated"
1570750872198:identity          <- 100
1570750872198:qCoverage         <- 100
1570750872199:gCov              <- 100
1570750872199:detectorThreshold <- 100
1570750872200:depth             <- 20
1570750872201:filterBlastPresentGenes <- TRUE
1570750872201:}
1570750878015:datasetName       <- "vfdb"
1570750878367:geneType          <- "Associated"
1570750878611:identity          <- 100
1570750878937:qCoverage         <- 100
1570750879102:gCov              <- 100
1570750879345:detectorThreshold <- 100
1570750879805:depth             <- 20
1570750880269:filterBlastPresentGenes <- TRUE
1570750882242:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570750883187:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570750884970:genesRef
1570750887604:blastData
1570750896493:filterBlastPresentGenes <- FALSE
1570750898799:genesRef    <- inGenesRef %>% filter(Dataset == datasetName)
1570750899164:blastData   <- inBlastData %>% filter(dataset == datasetName)
1570750903724:blastData
1570750907578:genesRef
1570750914139:# print(paste("All genes from Dataset:", nrow(genesRef)))
1570750914139:if (filterBlastPresentGenes) {
1570750914140:blastData    <- inBlastData %>% filter(pident >= identity, qcovhsp >= qCoverage)
1570750914141:presentGenes <- blastData %>% select(qseqid) %>% pull() %>% unique()
1570750914142:genesRef     <- genesRef %>% filter(GeneTag %in% presentGenes)
1570750914143:}
1570750921789:genesRef
1570750929985:# print(paste("Present genes:", nrow(genesRef)))
1570750929986:values$totalGenes <- nrow(genesRef)
1570750935945:geneType
1570750939465:if (geneType != "All"){
1570750939466:genesRef <- genesRef %>% filter(Type == geneType)
1570750939467:}
1570750942034:genesRef
1570750945705:genes       <- genesRef$GeneTag
1570750947144:genes
1570750970501:# blastData   <- inBlastData %>% filter(dataset == datasetName, qseqid %in% genes)
1570750970501:blastData   <- blastData %>% filter(qseqid %in% genes)
1570750971879:blastData
1570750977080:resultsData <- inResultsData %>% filter(Dataset == datasetName, GeneTag %in% genes)
1570750978719:resultsData
1570750982185:genomesRef  <- inGenomesRef
1570750985562:genomesRef
1570750991829:nGenes       <- nrow(genesRef)
1570750993030:totalGenomes <- nrow(inGenomesRef)
1570750995535:values$nGenes   <- nGenes
1570750996042:values$nGenomes <- totalGenomes
1570751003830:length(genesRef$GeneTag)
1570751008686:(genomes <- blastData %>%
1570751008687:select(GeneTag = sseqid) %>%
1570751008688:unique() %>% pull())
1570751018550:(blastFilteredResults <- blastData %>%
1570751018551:# filter(qseqid %in% genes) %>%
1570751018551:mutate(BlastPresence = if_else(pident >= identity & qcovhsp >= qCoverage, 1L, 0L)) %>%
1570751018552:filter(BlastPresence == 1L)
1570751018553:)
1570751042696:# Create blank  matrices for presence/absence of genes in 71 genomes
1570751042697:(blastPresence <- matrix(0L, nrow = nGenes,
1570751042698:ncol = totalGenomes,
1570751042698:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570751045685:nGenesInBlast <- nrow(blastFilteredResults)
1570751046972:if (nGenesInBlast > 0) {
1570751046973:# Fill BLAST presence matrix with present genes
1570751046974:for (row in 1:nGenesInBlast) {
1570751046975:gene   <- blastFilteredResults$qseqid[row]
1570751046975:genome <- blastFilteredResults$sseqid[row]
1570751046976:blastPresence[gene, genome] = 1
1570751046977:}
1570751046977:}
1570751050226:blastPresenceTable
1570751057965:blastPresenceTable <- as_tibble(blastPresence)
1570751059193:blastPresenceTable
1570751076858:blastPresenceTable <- as_tibble(cbind.data.frame(data.frame(GeneTag = genes),
1570751076858:blastPresenceTable))
1570751079818:blastPresenceTable
1570751098721:blastPresence
1570751106672:# Detector Tables presence/absence (whole DB) genes x genomes
1570751106673:# Fill detector presence matrix  with present genes
1570751106673:(detectorPresenceTable <- matrix(0L, nrow = nGenes,
1570751106674:ncol = totalGenomes,
1570751106674:dimnames = list(genesRef$GeneTag, genomesRef$Accn)))
1570751111667:(detectorResults <- resultsData %>%
1570751111667:filter(SeqDepth == depth) %>%
1570751111668:drop_na()
1570751111669:)
1570751114808:nGenesInResults <- nrow(detectorResults)
1570751116095:if (nGenesInResults > 0) {
1570751116095:for (row in 1:nrow(detectorResults)) {
1570751116096:gene    <- detectorResults$GeneTag[row]
1570751116096:genome  <- detectorResults$Accn[row]
1570751116097:geneCov <- detectorResults$GeneCov[row]
1570751116098:if (geneCov >= detectorThreshold){
1570751116098:detectorPresenceTable[gene, genome] = 1
1570751116099:}
1570751116100:}
1570751116100:}
1570751120234:detectorPresenceTable
1570751128243:(detectorPresenceTable %<>%
1570751128244:as_tibble() %>%
1570751128245:mutate(GeneTag = rownames(detectorPresenceTable)) %>%
1570751128246:select(GeneTag, everything()) %>%
1570751128246:gather(Accn, DetectorPresence, -GeneTag) %>%
1570751128247:mutate(SeqDepth = depth)
1570751128247:)
1570751161914:blastPresenceTable
1570751167154:detectorPresenceTable
1570751180347:blastPresenceTable %>%
1570751180348:gather(Accn, BlastPresence, -GeneTag) %>%
1570751180348:mutate(SeqDepth = depth,
1570751180349:GeneTag = as.character(GeneTag))
1570751208922:# Combined results table
1570751208923:(presenceTable <- left_join(
1570751208923:by = c("GeneTag", "Accn", "SeqDepth"),
1570751208924:blastPresenceTable %>%
1570751208924:gather(Accn, BlastPresence, -GeneTag) %>%
1570751208925:mutate(SeqDepth = depth,
1570751208926:GeneTag = as.character(GeneTag)),
1570751208926:detectorPresenceTable) %>%
1570751208927:select(-SeqDepth, everything())
1570751208927:)
1570751268416:inGenesRef
1570751272123:inGenomesRef
1570751300548:failedPred %>%
1570751300549:left_join(inGenesRef, by = "GeneTag") %>%
1570751300549:left_join(inGenomesRef, by = "Accn")
1570751322163:filterPresGenes <- input$filterNonPresentGenesCheck
1570751326997:filterPresGenes <- FALSE
1570751328763:presenceTable20 <- generatePresenceTable(identity = iden,
1570751328764:qCoverage = qCov,
1570751328764:detectorThreshold = gCov,
1570751328765:datasetName = dSetName,
1570751328765:geneType = gType,
1570751328766:depth = 20,
1570751328766:filterPresGenes)
1570751331059:# dataToPlot <- getConfusionMatrix(presenceTable, depth)
1570751331061:presenceTable40 <- generatePresenceTable(identity = iden,
1570751331062:qCoverage = qCov,
1570751331063:detectorThreshold = gCov,
1570751331065:datasetName = dSetName,
1570751331066:geneType = gType,
1570751331066:depth = 40,
1570751331067:filterPresGenes)
1570751336193:# Failed predictions table
1570751336193:failedPred <- rbind(
1570751336194:presenceTable20 %>%
1570751336194:filter(BlastPresence == 0, DetectorPresence == 1) %>%
1570751336195:mutate(ErrorType = "FP"),
1570751336195:presenceTable40 %>%
1570751336196:filter(BlastPresence == 0, DetectorPresence == 1) %>%
1570751336197:mutate(ErrorType = "FP"),
1570751336197:presenceTable20 %>%
1570751336198:filter(BlastPresence == 1, DetectorPresence == 0) %>%
1570751336199:mutate(ErrorType = "FN"),
1570751336199:presenceTable40 %>%
1570751336205:filter(BlastPresence == 1, DetectorPresence == 0) %>%
1570751336206:mutate(ErrorType = "FN")
1570751336207:)
1570751337960:print(failedPred)
1570751347929:failedPred %>%
1570751347930:left_join(inGenesRef, by = "GeneTag") %>%
1570751347930:left_join(inGenomesRef, by = "Accn")
1570751369314:View(failedPred)
1570751394809:tmp <- failedPred %>%
1570751394810:left_join(inGenesRef, by = "GeneTag") %>%
1570751394811:left_join(inGenomesRef, by = "Accn")
1570751408662:View(tmp)
1570751474304:# failedPred %<>%
1570751474304:tmp <- failedPred %>%
1570751474306:left_join(inGenesRef, by = "GeneTag") %>%
1570751474306:left_join(inGenomesRef, by = "Accn") %>%
1570751474307:select(GeneTag, Accn,
1570751474307:# Obs = BlastPresence,
1570751474308:# Pred = DetectorPresence,
1570751474308:ErrorType,
1570751474309:Depth = SeqDepth,
1570751474310:GeneName, Organism = Organism.y)
1570751476811:tmp
1570751483725:View(tmp)
1570751484093:View(tmp)
1570751506412:# failedPred %<>%
1570751506412:tmp <- failedPred %>%
1570751506413:left_join(inGenesRef, by = "GeneTag") %>%
1570751506414:left_join(inGenomesRef, by = "Accn") %>%
1570751506414:select(GeneTag, Accn,
1570751506415:Obs = BlastPresence,
1570751506416:Pred = DetectorPresence,
1570751506416:ErrorType,
1570751506417:Depth = SeqDepth,
1570751506431:GeneName, Organism = Organism.y)
1570751535192:failedPred %>%
1570751535193:left_join(inGenesRef, by = "GeneTag") %>%
1570751535193:left_join(inGenomesRef, by = "Accn")
1570751659767:blastData
1570751665393:resultsData
1570751716157:values$blastData   <- blastData
1570751716626:values$resultsData <- resultsData
1570751869793:names(values)
1570751876260:values
1570751907998:names(isolate(values))
1570751932653:isolate(names(values))
1570751986874:values$blastFilteredResults <- blastFilteredResults
1570751988073:values$detectorResults      <- detectorResults
1570752051192:# failedPred %<>%
1570752051193:tmp <- failedPred %>%
1570752051193:left_join(inGenesRef, by = "GeneTag") %>%
1570752051194:left_join(inGenomesRef, by = "Accn") %>%
1570752051194:left_join(values$, by = "Accn") %>%
1570752051195:isolate(values$blastFilteredResults)
1570752062285:values$blastFilteredResults
1570752115815:isolate(values$blastFilteredResults
1570752122729:isolate(values$blastFilteredResults)
1570752192213:tmp <- failedPred %>%
1570752192213:left_join(inGenesRef, by = "GeneTag") %>%
1570752192214:left_join(inGenomesRef, by = "Accn") %>%
1570752192214:left_join(isolate(values$blastFilteredResults), by = c("GeneTag", "qseqid"))
1570752200637:isolate(values$blastFilteredResults)
1570752216761:inGenesRef
1570752220318:inGenomesRef
1570752270291:tmp <- failedPred %>%
1570752270292:left_join(inGenesRef, by = "GeneTag") %>%
1570752270293:left_join(inGenomesRef, by = "Accn")
1570752272793:tmp
1570752357845:isolate(values$blastFilteredResults) %>%
1570752357845:mutate(GeneGenome = paste0(qseqid,"-",sseqid))
1570752410736:# failedPred %<>%
1570752410736:tmp <- failedPred %>%
1570752410737:left_join(inGenesRef, by = "GeneTag") %>%
1570752410737:left_join(inGenomesRef, by = "Accn") %>%
1570752410738:left_join(values$, by = "Accn") %>%
1570752410738:tmp <- failedPred %>%
1570752410739:left_join(inGenesRef, by = "GeneTag") %>%
1570752410739:left_join(inGenomesRef, by = "Accn") %>%
1570752410740:mutate(GeneGenome = paste0(GeneTag,"-",Accn))
1570752414532:tmp
1570752445487:left_join(isolate(values$blastFilteredResults) %>%
1570752445488:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752445488:by = "GeneGenome")
1570752456082:d
1570752458993:# failedPred %<>%
1570752458993:tmp <- failedPred %>%
1570752458994:left_join(inGenesRef, by = "GeneTag") %>%
1570752458995:left_join(inGenomesRef, by = "Accn") %>%
1570752458995:left_join(values$, by = "Accn") %>%
1570752458997:tmp <- failedPred %>%
1570752458997:left_join(inGenesRef, by = "GeneTag") %>%
1570752458998:left_join(inGenomesRef, by = "Accn") %>%
1570752458998:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752458999:left_join(isolate(values$blastFilteredResults) %>%
1570752459001:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752459002:by = "GeneGenome")
1570752461170:tmp
1570752528136:isolate(values$detectorResults)
1570752564718:# failedPred %<>%
1570752564719:tmp <- failedPred %>%
1570752564719:left_join(inGenesRef, by = "GeneTag") %>%
1570752564720:left_join(inGenomesRef, by = "Accn") %>%
1570752564721:left_join(values$, by = "Accn") %>%
1570752564723:tmp <- failedPred %>%
1570752564723:left_join(inGenesRef, by = "GeneTag") %>%
1570752564724:left_join(inGenomesRef, by = "Accn") %>%
1570752564724:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752564725:left_join(isolate(values$blastFilteredResults) %>%
1570752564726:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752564726:by = "GeneGenome") %>%
1570752564727:left_join(isolate(values$detectorResults) %>%
1570752564727:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752564728:by = "GeneGenome")
1570752897873:# failedPred %<>%
1570752897874:tmp <- failedPred %>%
1570752897874:left_join(inGenesRef, by = "GeneTag") %>%
1570752897875:left_join(inGenomesRef, by = "Accn") %>%
1570752897875:left_join(values$, by = "Accn") %>%
1570752897876:tmp <- failedPred %>%
1570752897877:left_join(inGenesRef, by = "GeneTag") %>%
1570752897877:left_join(inGenomesRef, by = "Accn") %>%
1570752897877:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752897878:left_join(isolate(values$blastFilteredResults) %>%
1570752897878:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752897879:by = "GeneGenome") %>%
1570752897879:left_join(isolate(values$detectorResults) %>%
1570752897880:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752897881:by = "GeneGenome") %>%
1570752897881:select(GeneTag, Accn,
1570752897882:Obs = BlastPresence,
1570752897882:BlastIdent = pident,
1570752897883:BlastQCov = qcovhsp,
1570752897884:Pred = DetectorPresence,
1570752897884:DetectorCov = GeneCov,
1570752897885:ErrorType,
1570752897885:Depth = SeqDepth,
1570752897886:GeneName, Organism = Organism.y)
1570752914259:# failedPred %<>%
1570752914260:tmp <- failedPred %>%
1570752914260:left_join(inGenesRef, by = "GeneTag") %>%
1570752914261:left_join(inGenomesRef, by = "Accn") %>%
1570752914262:left_join(values$, by = "Accn") %>%
1570752914263:tmp <- failedPred %>%
1570752914263:left_join(inGenesRef, by = "GeneTag") %>%
1570752914264:left_join(inGenomesRef, by = "Accn") %>%
1570752914264:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752914265:left_join(isolate(values$blastFilteredResults) %>%
1570752914266:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752914266:by = "GeneGenome") %>%
1570752914267:left_join(isolate(values$detectorResults) %>%
1570752914268:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752914268:by = "GeneGenome") %>%
1570752914269:select(GeneTag = GeneTag.x,
1570752914270:Accn,
1570752914270:Obs = BlastPresence,
1570752914271:BlastIdent = pident,
1570752914272:BlastQCov = qcovhsp,
1570752914272:Pred = DetectorPresence,
1570752914273:DetectorCov = GeneCov,
1570752914273:ErrorType,
1570752914274:Depth = SeqDepth,
1570752914274:GeneName, Organism = Organism.y)
1570752924238:# failedPred %<>%
1570752924238:tmp <- failedPred %>%
1570752924239:left_join(inGenesRef, by = "GeneTag") %>%
1570752924240:left_join(inGenomesRef, by = "Accn") %>%
1570752924240:left_join(values$, by = "Accn") %>%
1570752924241:tmp <- failedPred %>%
1570752924242:left_join(inGenesRef, by = "GeneTag") %>%
1570752924242:left_join(inGenomesRef, by = "Accn") %>%
1570752924243:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752924247:left_join(isolate(values$blastFilteredResults) %>%
1570752924249:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752924249:by = "GeneGenome") %>%
1570752924250:left_join(isolate(values$detectorResults) %>%
1570752924251:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752924256:by = "GeneGenome") %>%
1570752924257:select(GeneTag = GeneTag.x,
1570752924258:Accn = Accn.x,
1570752924258:Obs = BlastPresence,
1570752924259:BlastIdent = pident,
1570752924266:BlastQCov = qcovhsp,
1570752924267:Pred = DetectorPresence,
1570752924268:DetectorCov = GeneCov,
1570752924268:ErrorType,
1570752924269:Depth = SeqDepth,
1570752924270:GeneName, Organism = Organism.y)
1570752937885:# failedPred %<>%
1570752937886:tmp <- failedPred %>%
1570752937886:left_join(inGenesRef, by = "GeneTag") %>%
1570752937887:left_join(inGenomesRef, by = "Accn") %>%
1570752937887:left_join(values$, by = "Accn") %>%
1570752937888:tmp <- failedPred %>%
1570752937889:left_join(inGenesRef, by = "GeneTag") %>%
1570752937889:left_join(inGenomesRef, by = "Accn") %>%
1570752937890:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752937890:left_join(isolate(values$blastFilteredResults) %>%
1570752937891:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752937891:by = "GeneGenome") %>%
1570752937892:left_join(isolate(values$detectorResults) %>%
1570752937892:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752937893:by = "GeneGenome") %>%
1570752937893:select(GeneTag = GeneTag.x,
1570752937894:Accn = Accn.x,
1570752937895:Obs = BlastPresence.x,
1570752937902:BlastIdent = pident,
1570752937903:BlastQCov = qcovhsp,
1570752937904:Pred = DetectorPresence,
1570752937904:DetectorCov = GeneCov,
1570752937905:ErrorType,
1570752937905:Depth = SeqDepth,
1570752937906:GeneName, Organism = Organism.y)
1570752942630:# failedPred %<>%
1570752942631:tmp <- failedPred %>%
1570752942632:left_join(inGenesRef, by = "GeneTag") %>%
1570752942632:left_join(inGenomesRef, by = "Accn") %>%
1570752942633:left_join(values$, by = "Accn") %>%
1570752942634:tmp <- failedPred %>%
1570752942634:left_join(inGenesRef, by = "GeneTag") %>%
1570752942640:left_join(inGenomesRef, by = "Accn") %>%
1570752942642:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752942643:left_join(isolate(values$blastFilteredResults) %>%
1570752942643:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752942644:by = "GeneGenome") %>%
1570752942646:left_join(isolate(values$detectorResults) %>%
1570752942646:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752942647:by = "GeneGenome") %>%
1570752942647:select(GeneTag = GeneTag.x,
1570752942648:Accn = Accn.x,
1570752942648:Obs = BlastPresence.x,
1570752942649:BlastIdent = pident,
1570752942650:BlastQCov = qcovhsp,
1570752942650:Pred = DetectorPresence.x,
1570752942651:DetectorCov = GeneCov,
1570752942652:ErrorType,
1570752942652:Depth = SeqDepth,
1570752942653:GeneName, Organism = Organism.y)
1570752947284:# failedPred %<>%
1570752947284:tmp <- failedPred %>%
1570752947285:left_join(inGenesRef, by = "GeneTag") %>%
1570752947286:left_join(inGenomesRef, by = "Accn") %>%
1570752947286:left_join(values$, by = "Accn") %>%
1570752947287:tmp <- failedPred %>%
1570752947288:left_join(inGenesRef, by = "GeneTag") %>%
1570752947288:left_join(inGenomesRef, by = "Accn") %>%
1570752947289:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752947290:left_join(isolate(values$blastFilteredResults) %>%
1570752947290:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752947291:by = "GeneGenome") %>%
1570752947291:left_join(isolate(values$detectorResults) %>%
1570752947292:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752947292:by = "GeneGenome") %>%
1570752947292:select(GeneTag = GeneTag.x,
1570752947293:Accn = Accn.x,
1570752947296:Obs = BlastPresence.x,
1570752947297:BlastIdent = pident,
1570752947298:BlastQCov = qcovhsp,
1570752947299:Pred = DetectorPresence.x,
1570752947300:DetectorCov = GeneCov,
1570752947300:ErrorType,
1570752947301:Depth = SeqDepth.x,
1570752947302:GeneName, Organism = Organism.y)
1570752961115:# failedPred %<>%
1570752961115:tmp <- failedPred %>%
1570752961116:left_join(inGenesRef, by = "GeneTag") %>%
1570752961117:left_join(inGenomesRef, by = "Accn") %>%
1570752961117:left_join(values$, by = "Accn") %>%
1570752961118:tmp <- failedPred %>%
1570752961119:left_join(inGenesRef, by = "GeneTag") %>%
1570752961120:left_join(inGenomesRef, by = "Accn") %>%
1570752961121:mutate(GeneGenome = paste0(GeneTag,"-",Accn)) %>%
1570752961121:left_join(isolate(values$blastFilteredResults) %>%
1570752961122:mutate(GeneGenome = paste0(qseqid,"-",sseqid)),
1570752961123:by = "GeneGenome") %>%
1570752961123:left_join(isolate(values$detectorResults) %>%
1570752961124:mutate(GeneGenome = paste0(GeneTag,"-",Accn)),
1570752961125:by = "GeneGenome") %>%
1570752961125:select(GeneTag = GeneTag.x,
1570752961126:Accn = Accn.x,
1570752961127:Obs = BlastPresence.x,
1570752961127:BlastIdent = pident,
1570752961128:BlastQCov = qcovhsp,
1570752961129:Pred = DetectorPresence.x,
1570752961130:DetectorCov = GeneCov,
1570752961131:ErrorType,
1570752961132:Depth = SeqDepth.x,
1570752961133:GeneName = GeneName.x,
1570752961133:Organism = Organism.y)
1570753057994:runApp('shiny_app/gene_detector')
1570753858322:runApp('shiny_app/gene_detector')
1570753993929:runApp('shiny_app/gene_detector')
1570754152432:runApp('shiny_app/gene_detector')
1570754255683:runApp('shiny_app/gene_detector')
1570757757648:shiny::runApp('shiny_app/gene_detector')
1570757830263:runApp('shiny_app/gene_detector')
1570761009327:runApp('shiny_app/gene_detector')
1570761026607:runApp('shiny_app/gene_detector')
1572703938774:library(gplots)
1572703940500:library(RColorBrewer)
1572703941875:f = 'data/update_gridsearch_fyeah.txt'
1572703942870:df <- read.table(f, sep='\t', skip=1)
1572703953953:dm <- matrix(df[,60], nrow=1000, ncol=100, byrow=TRUE) # "P.STX1.MCC"
1572703955314:df <- read.table(f, sep='\t', skip=1)
1572703966678:dm <- matrix(df[,60], nrow=1000, ncol=100, byrow=TRUE) # "P.STX1.MCC"
1572703967285:b = seq(from=0.75, to=1, by=0.01)
1572703967909:cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572703968808:xlabvec <- c(rep(NA, 1000))
1572703969572:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)
1572703970331:ylabvec <- c(rep(NA, 100))
1572703970867:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572703971551:heatmap.2(t(dm), dendrogram = "none",
1572703971552:Rowv=F, Colv=F, symm=F,
1572703971552:main="Parameter Grid",
1572703971553:key=TRUE, keysize=1,
1572703971553:trace="none" ,
1572703971554:density.info=c("none"),
1572703971554:margins=c(10,8),
1572703971555:col=cols(length(b)-1),
1572703971555:xlab="Allelic Coverage",
1572703971556:ylab="K-mer Fraction",
1572703971556:breaks=b,
1572703971557:abRow=ylabvec,
1572703971557:labCol=xlabvec)
1572704174249:dm
1572704195594:df
1572704607843:cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572704608513:xlabvec <- c(rep(NA, 1000))
1572704608886:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)
1572704609290:ylabvec <- c(rep(NA, 100))
1572704609680:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572704610432:heatmap.2(t(dm), dendrogram = "none",
1572704610433:Rowv=F, Colv=F, symm=F,
1572704610433:main="Parameter Grid",
1572704610434:key=TRUE, keysize=1,
1572704610434:trace="none" ,
1572704610435:density.info=c("none"),
1572704610435:margins=c(10,8),
1572704610436:col=cols(length(b)-1),
1572704610436:xlab="Allelic Coverage",
1572704610437:ylab="K-mer Fraction",
1572704610437:breaks=b,
1572704610438:abRow=ylabvec,
1572704610438:labCol=xlabvec)
1572704640529:cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572704642428:cols
1572704647956:colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572704658280:cols(length(b)-1)
1572704662655:cols
1572704670979:cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572704673681:heatmap.2(t(dm), dendrogram = "none",
1572704673682:Rowv=F, Colv=F, symm=F,
1572704673682:main="Parameter Grid",
1572704673683:key=TRUE, keysize=1,
1572704673683:trace="none" ,
1572704673684:density.info=c("none"),
1572704673684:margins=c(10,8),
1572704673685:col=cols(length(b)-1),
1572704673685:xlab="Allelic Coverage",
1572704673686:ylab="K-mer Fraction",
1572704673686:breaks=b,
1572704673687:abRow=ylabvec,
1572704673687:labCol=xlabvec)
1572704687316:cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572704687868:xlabvec <- c(rep(NA, 1000))
1572704688265:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)
1572704688581:ylabvec <- c(rep(NA, 100))
1572704688986:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572704689482:heatmap.2(t(dm), dendrogram = "none",
1572704689483:Rowv=F, Colv=F, symm=F,
1572704689483:main="Parameter Grid",
1572704689484:key=TRUE, keysize=1,
1572704689485:trace="none" ,
1572704689485:density.info=c("none"),
1572704689486:margins=c(10,8),
1572704689486:col=cols(length(b)-1),
1572704689487:xlab="Allelic Coverage",
1572704689487:ylab="K-mer Fraction",
1572704689493:breaks=b,
1572704689495:abRow=ylabvec,
1572704689495:labCol=xlabvec)
1572704713429:dev.off()
1572704718092:heatmap.2(t(dm), dendrogram = "none",
1572704718093:Rowv=F, Colv=F, symm=F,
1572704718093:main="Parameter Grid",
1572704718094:key=TRUE, keysize=1,
1572704718094:trace="none" ,
1572704718095:density.info=c("none"),
1572704718095:margins=c(10,8),
1572704718096:col=cols(length(b)-1),
1572704718096:xlab="Allelic Coverage",
1572704718096:ylab="K-mer Fraction",
1572704718098:breaks=b,
1572704718099:abRow=ylabvec,
1572704718100:labCol=xlabvec)
1572704773909:length(b)-1
1572704776098:length(b)-1
1572704994102:df[,60]
1572705184412:library(tidyverse)
1572705410253:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 2020202)
1572705410699:ylabvec <- c(rep(NA, 100))
1572705411087:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572705413530:cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572705415694:heatmap.2(t(dm), dendrogram = "none",
1572705415694:Rowv=F, Colv=F, symm=F,
1572705415695:main="Parameter Grid",
1572705415695:key=TRUE, keysize=1,
1572705415696:trace="none" ,
1572705415696:density.info=c("none"),
1572705415697:margins=c(10,8),
1572705415706:col=cols(length(b)-1),
1572705415707:xlab="Allelic Coverage",
1572705415707:ylab="K-mer Fraction",
1572705415708:breaks=b,
1572705415708:abRow=ylabvec,
1572705415709:labCol=xlabvec)
1572705424361:library(gplots)
1572705424749:library(RColorBrewer)
1572705425854:f = 'data/update_gridsearch_fyeah.txt'
1572705426837:df <- read.table(f, sep='\t', skip=1)
1572705442200:dm <- matrix(df[,60], nrow=1000, ncol=100, byrow=TRUE) # "P.STX1.MCC"
1572705445595:b = seq(from=0.75, to=1, by=0.01)
1572705446505:cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572705462858:cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572705465338:cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572705466249:xlabvec <- c(rep(NA, 1000))
1572705471550:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 2020202)
1572705472351:ylabvec <- c(rep(NA, 100))
1572705472925:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572705473655:heatmap.2(t(dm), dendrogram = "none",
1572705473656:Rowv=F, Colv=F, symm=F,
1572705473656:main="Parameter Grid",
1572705473657:key=TRUE, keysize=1,
1572705473657:trace="none" ,
1572705473658:density.info=c("none"),
1572705473658:margins=c(10,8),
1572705473659:col=cols(length(b)-1),
1572705473659:xlab="Allelic Coverage",
1572705473660:ylab="K-mer Fraction",
1572705473660:breaks=b,
1572705473661:abRow=ylabvec,
1572705473661:labCol=xlabvec)
1572705514473:ylabvec <- c(rep(NA, 100))
1572705514844:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572705583410:library(tidyverse)
1572705645107:inFile <- "data/grid_data.tsv"
1572705660736:inData <- read_tsv(inFile)
1572705665575:inData
1572705871463:dataToPlot <- gather(data = inData, key = variable, value = P.STX1.MCC)
1572705873390:dataToPlot
1572705901287:nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
1572705905519:nba
1572705922223:nba$Name <- with(nba, reorder(Name, PTS))
1572705926325:nba
1572706198058:nba.m <- melt(nba)
1572706286173:inData
1572706337227:unique(inData$kmerfrac)
1572706403138:unique(inData$coverage)
1572706478529:round(unique(inData$coverage))
1572706494207:round(unique(inData$coverage), digits = 3)
1572706501417:round(unique(inData$coverage), digits = 1)
1572706542479:kfracLevels <- round(unique(inData$kmerfrac), digits = 1)
1572706544103:kfracLevels
1572706553131:kfracLevels <- round(unique(inData$kmerfrac), digits = 2)
1572706556549:(kfracLevels <- round(unique(inData$kmerfrac), digits = 2))
1572706592033:covLevels <- round(unique(inData$coverage), digits = 1)
1572706594705:(covLevels <- round(unique(inData$coverage), digits = 1))
1572706632727:dataToPlot <- inData
1572706691426:dataToPlot <- inData %>%
1572706691426:mutate(kmerfrac <- round(kmerfrac, digits = 2),
1572706691427:coverage <- round(coverage, digits = 1))
1572706693633:dataToPlot
1572706717091:inData
1572706733292:dataToPlot <- inData %>%
1572706733294:mutate(kmerfrac = round(kmerfrac, digits = 2),
1572706733295:coverage = round(coverage, digits = 1))
1572706737570:(dataToPlot <- inData %>%
1572706737571:mutate(kmerfrac = round(kmerfrac, digits = 2),
1572706737571:coverage = round(coverage, digits = 1)))
1572706867348:inFile <- "data/update_gridsearch_fyeah.txt"
1572706944711:inData <- inData %>%
1572706944712:select(cov = coverage,
1572706944712:kfr = kmerfrac,
1572706944712:mcc = P.STX1.MCC)
1572706946929:inData
1572706982516:(dataToPlot <- inData %>%
1572706982517:mutate(kfr = round(kfr, digits = 2),
1572706982518:cov = round(cov, digits = 1)))
1572707066962:(hm <- ggplot(dataToPlot, aes(cov, kfr))
1572707066963:+ geom_tile(aes(fill = rescale), colour = "white")
1572707066964:+ scale_fill_gradient(low = "white", high = "steelblue")
1572707066965:)
1572707082337:inFile <- "data/update_gridsearch_fyeah.txt"
1572707082340:inData <- read_tsv(inFile)
1572707090779:library(tidyverse)
1572707094252:inFile <- "data/update_gridsearch_fyeah.txt"
1572707095485:inData <- read_tsv(inFile)
1572707101970:inData <- inData %>%
1572707101971:select(cov = coverage,
1572707101971:kfr = kmerfrac,
1572707101972:mcc = P.STX1.MCC)
1572707103942:(dataToPlot <- inData %>%
1572707103943:mutate(kfr = round(kfr, digits = 2),
1572707103943:cov = round(cov, digits = 1)))
1572707104973:(hm <- ggplot(dataToPlot, aes(cov, kfr))
1572707104974:+ geom_tile(aes(fill = rescale), colour = "white")
1572707104974:+ scale_fill_gradient(low = "white", high = "steelblue")
1572707104975:)
1572707168649:(hm <- ggplot(dataToPlot, aes(cov, kfr))
1572707168650:+ geom_tile(aes(fill = mcc), colour = "white")
1572707168651:+ scale_fill_gradient(low = "white", high = "steelblue")
1572707168652:)
1572707251881:(hm <- ggplot(dataToPlot, aes(cov, kfr))
1572707251881:+ geom_tile(aes(fill = mcc), size = 0)
1572707251882:+ scale_fill_gradient(low = "white", high = "steelblue")
1572707251883:)
1572707752886:f = 'data/update_gridsearch_fyeah.txt'
1572707753431:df <- read.table(f, sep='\t', skip=1)
1572707768058:dm <- matrix(df[,60], nrow=1000, ncol=100, byrow=TRUE) # "P.STX1.MCC"
1572707768059:b = seq(from=0.75, to=1, by=0.01)
1572707799410:# cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572707799410:# cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572707799410:cols=colorRampPalette(c('#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd'))
1572707801280:xlabvec <- c(rep(NA, 1000))
1572707802128:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)
1572707816317:xlabvec <- c(rep(NA, 1000))
1572707816746:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)
1572707817169:ylabvec <- c(rep(NA, 100))
1572707817747:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572707818404:heatmap.2(t(dm), dendrogram = "none",
1572707818404:Rowv=F, Colv=F, symm=F,
1572707818405:main="Parameter Grid",
1572707818405:key=TRUE, keysize=1,
1572707818406:trace="none" ,
1572707818406:density.info=c("none"),
1572707818407:margins=c(10,8),
1572707818407:col=cols(length(b)-1),
1572707818408:xlab="Allelic Coverage",
1572707818409:ylab="K-mer Fraction",
1572707818409:breaks=b,
1572707818410:abRow=ylabvec,
1572707818410:labCol=xlabvec)
1572707848871:library(gplots)
1572707850936:library(RColorBrewer)
1572707850986:library(tidyverse)
1572707850987:f = 'data/update_gridsearch_fyeah.txt'
1572707850989:df <- read.table(f, sep='\t', skip=1)
1572707862547:dm <- matrix(df[,60], nrow=1000, ncol=100, byrow=TRUE) # "P.STX1.MCC"
1572707862549:b = seq(from=0.75, to=1, by=0.01)
1572707862550:# pdf("t5.pdf", useDingbats = F)
1572707921218:# cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572707921219:# cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572707921219:cols=colorRampPalette(c('#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd'))
1572707921222:xlabvec <- c(rep(NA, 1000))
1572707921224:xlabvec[c(1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000)] <- c(1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100)
1572707921226:ylabvec <- c(rep(NA, 100))
1572707921227:ylabvec[c(1, 10, 20, 30, 40, 50, 60, 70, 80, 90)] <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)
1572707921231:heatmap.2(t(dm), dendrogram = "none",
1572707921233:Rowv=F, Colv=F, symm=F,
1572707921234:main="Parameter Grid",
1572707921234:key=TRUE, keysize=1,
1572707921235:trace="none" ,
1572707921235:density.info=c("none"),
1572707921236:margins=c(10,8),
1572707921237:col=cols(length(b)-1),
1572707921238:xlab="Allelic Coverage",
1572707921238:ylab="K-mer Fraction",
1572707921239:breaks=b,
1572707921239:abRow=ylabvec,
1572707921240:labCol=xlabvec)
1572707963678:# cols=colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
1572707963679:# cols=colorRampPalette(c("#2166ac", "#f7f7f7", "#b2182b"))
1572707963679:cols=colorRampPalette(rev(c('#d53e4f','#f46d43','#fdae61','#fee08b','#ffffbf','#e6f598','#abdda4','#66c2a5','#3288bd')))
1572707966403:heatmap.2(t(dm), dendrogram = "none",
1572707966404:Rowv=F, Colv=F, symm=F,
1572707966404:main="Parameter Grid",
1572707966405:key=TRUE, keysize=1,
1572707966405:trace="none" ,
1572707966406:density.info=c("none"),
1572707966407:margins=c(10,8),
1572707966408:col=cols(length(b)-1),
1572707966409:xlab="Allelic Coverage",
1572707966410:ylab="K-mer Fraction",
1572707966410:breaks=b,
1572707966411:abRow=ylabvec,
1572707966412:labCol=xlabvec)
1572707981121:dev.off()
1572707983574:heatmap.2(t(dm), dendrogram = "none",
1572707983574:Rowv=F, Colv=F, symm=F,
1572707983575:main="Parameter Grid",
1572707983575:key=TRUE, keysize=1,
1572707983575:trace="none" ,
